Search.setIndex({"docnames": ["graphnet", "graphnet.components", "graphnet.data", "graphnet.data.extractors", "graphnet.data.extractors.utilities", "graphnet.data.parquet", "graphnet.data.sqlite", "graphnet.data.utilities", "graphnet.models", "graphnet.models.detector", "graphnet.models.gnn", "graphnet.models.task", "graphnet.models.training", "graphnet.utilities", "index", "modules"], "filenames": ["graphnet.rst", "graphnet.components.rst", "graphnet.data.rst", "graphnet.data.extractors.rst", "graphnet.data.extractors.utilities.rst", "graphnet.data.parquet.rst", "graphnet.data.sqlite.rst", "graphnet.data.utilities.rst", "graphnet.models.rst", "graphnet.models.detector.rst", "graphnet.models.gnn.rst", "graphnet.models.task.rst", "graphnet.models.training.rst", "graphnet.utilities.rst", "index.rst", "modules.rst"], "titles": ["graphnet package", "graphnet.components package", "graphnet.data package", "graphnet.data.extractors package", "graphnet.data.extractors.utilities package", "graphnet.data.parquet package", "graphnet.data.sqlite package", "graphnet.data.utilities package", "graphnet.models package", "graphnet.models.detector package", "graphnet.models.gnn package", "graphnet.models.task package", "graphnet.models.training package", "graphnet.utilities package", "Welcome to gnn-reco\u2019s documentation!", "src"], "terms": {"compon": [0, 8, 15], "submodul": [0, 15], "layer": [0, 10, 11, 15], "dynedgeconv": [0, 1], "forward": [0, 1, 8, 9, 10, 11], "loss_funct": [0, 11, 15], "binarycrossentropyloss": [0, 1], "reduct": [0, 1], "euclideandistanceloss": [0, 1], "_forward": [0, 1, 8, 9, 11], "logcmk": [0, 1], "backward": [0, 1, 8], "logcoshloss": [0, 1], "_log_cosh": [0, 1], "lossfunct": [0, 1, 11], "mseloss": [0, 1], "train": [0, 1, 6, 8, 9, 10, 11], "weight": [0, 1, 2], "rmseloss": [0, 1], "vonmisesfisher2dloss": [0, 1], "vonmisesfisherloss": [0, 1], "_evalu": [0, 1], "log_cmk": [0, 1], "log_cmk_approx": [0, 1], "log_cmk_exact": [0, 1], "pool": [0, 2, 8, 10, 15], "_group_ident": [0, 1], "group_bi": [0, 1], "group_pulses_to_dom": [0, 1], "group_pulses_to_pmt": [0, 1], "min_pool": [0, 1, 8], "min_pool_x": [0, 1, 8], "std_pool": [0, 1], "std_pool_x": [0, 1], "sum_pool": [0, 1, 8], "sum_pool_and_distribut": [0, 1], "sum_pool_x": [0, 1, 8], "util": [0, 2, 3, 6, 15], "check_db_siz": [0, 1], "fit_scal": [0, 1], "data": [0, 1, 8, 9, 10, 11, 12, 13, 15], "extractor": [0, 2, 5, 6], "i3extractor": [0, 2, 5, 6], "i3featureextractor": [0, 2, 6], "i3genericextractor": [0, 2, 6], "i3retroextractor": [0, 2], "i3truthextractor": [0, 2], "parquet": [0, 2], "parquet_dataconvert": [0, 2], "parquet_dataset": [0, 2], "sqlite": [0, 2], "sqlite_dataconvert": [0, 2], "sqlite_dataset": [0, 2], "sqlite_dataset_perturb": [0, 2], "sqlite_select": [0, 2], "sqlite_util": [0, 2], "random": [0, 2, 6], "constant": [0, 15], "featur": [0, 1, 2, 3, 5, 6, 8, 9, 10, 12], "deepcor": [0, 2, 9], "icecube86": [0, 2, 8, 9], "upgrad": [0, 2, 9], "truth": [0, 1, 2, 3, 5, 6, 12], "dataconvert": [0, 5, 6, 15], "__call__": [0, 2, 3, 8], "__init__": [0, 2, 3, 8, 10], "_extract_data": [0, 2], "_iterate_over_batches_of_fil": [0, 2], "_save_filenam": [0, 2], "_update_shared_vari": [0, 2], "execut": [0, 2, 6], "file_suffix": [0, 2, 5, 6], "get_map_funct": [0, 2], "merge_fil": [0, 2, 5, 6], "save_data": [0, 2, 5, 6], "fileset": [0, 2], "gcd_file": [0, 2, 3], "i3_fil": [0, 2, 3], "cache_output_fil": [0, 2], "init_global_index": [0, 2], "dataset": [0, 5, 6, 8, 15], "columnmissingexcept": [0, 2], "_check_missing_column": [0, 2], "_create_graph": [0, 2], "_get_all_indic": [0, 2], "_get_dbang_label": [0, 2], "_get_label": [0, 2], "_init": [0, 2], "_post_init": [0, 2], "_queri": [0, 2], "_query_t": [0, 2, 6], "_remove_missing_column": [0, 2], "add_label": [0, 2], "pipelin": [0, 6, 15], "insqlitepipelin": [0, 2], "_create_t": [0, 2, 6], "model": [0, 1, 3, 6, 15], "detector": [0, 3, 8], "icecub": [0, 4, 8, 13], "prototyp": [0, 8], "gnn": [0, 2, 3, 8], "convnet": [0, 8], "dynedg": [0, 8], "task": [0, 8], "reconstruct": [0, 2, 8], "callback": [0, 8], "coarsen": [0, 1, 10, 15], "_additional_featur": [0, 8], "_perform_clust": [0, 8], "_transfer_attribut": [0, 8], "reduce_opt": [0, 8], "customdomcoarsen": [0, 8], "domcoarsen": [0, 8], "loopbasedcoarsen": [0, 8], "unbatch_edge_index": [0, 8], "graph_build": [0, 9, 15], "euclideangraphbuild": [0, 8], "graphbuild": [0, 8, 9], "knngraphbuild": [0, 8], "radialgraphbuild": [0, 8], "compute_loss": [0, 8, 11], "configure_optim": [0, 8], "infer": [0, 2, 8, 11], "load": [0, 3, 7, 8], "load_state_dict": [0, 8], "save": [0, 1, 2, 3, 4, 5, 6, 8, 13], "save_state_dict": [0, 8], "shared_step": [0, 8], "training_step": [0, 8], "validation_step": [0, 8], "calculate_distance_matrix": [0, 8], "calculate_xyzt_homophili": [0, 8], "knn_graph_batch": [0, 8], "filesi": [0, 15], "find_i3_fil": [0, 13], "has_extens": [0, 13], "is_gcd_fil": [0, 13], "is_i3_fil": [0, 13], "import": [0, 3, 6, 15], "has_icecube_packag": [0, 13], "has_torch_packag": [0, 13], "requires_icecub": [0, 13], "log": [0, 1, 8, 11, 15], "loggermixin": [0, 2, 3, 8, 9, 13], "logger": [0, 8, 13], "repeatfilt": [0, 13], "filter": [0, 13], "get_formatt": [0, 13], "get_logg": [0, 13], "set_logging_level": [0, 13], "warn_onc": [0, 13], "math": [0, 15], "eps_lik": [0, 13], "graph": [0, 1, 2, 8, 9, 10], "neural": 0, "network": 0, "neutrino": [0, 1, 3, 6], "telescop": 0, "event": [0, 1, 2, 6, 8], "i": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13], "python": [0, 2, 3, 4], "provid": [0, 1, 3], "conveni": 0, "common": [0, 8, 13], "collabor": 0, "develop": 0, "tool": 0, "build": [0, 8, 9], "solv": 0, "physic": [0, 3, 4, 6, 11], "experi": [0, 8], "It": [0, 1, 4, 8], "aim": 0, "physicist": 0, "leverag": 0, "advanc": [0, 1], "machin": 0, "learn": [0, 8, 12], "ml": 0, "without": [0, 1, 8, 11], "have": [0, 1, 2, 3, 8, 11], "expert": 0, "themselv": 0, "therebi": [0, 6], "acceler": 0, "scientif": 0, "area": 0, "phyic": 0, "design": 0, "principl": 0, "end": [0, 2, 8, 12], "all": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13], "streamlin": 0, "process": [0, 2, 6, 9, 10, 12], "ingest": [0, 9], "transform": [0, 1, 11], "optimis": 0, "deploi": 0, "them": [0, 2, 4, 11], "chain": [0, 8], "extens": [0, 13], "basic": 0, "block": 0, "improv": [0, 8], "classif": [0, 2, 11], "across": [0, 1, 2, 4, 8, 12, 13], "variou": 0, "configur": [0, 8, 13], "can": [0, 1, 3, 8], "easili": 0, "extend": 0, "new": 0, "architectur": [0, 8, 10], "main": [0, 2, 8], "convert": [0, 2, 4, 6], "from": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12], "domain": 0, "specif": [0, 1, 2, 4, 5, 6, 8, 9], "format": [0, 2, 3, 4], "i3": [0, 2, 3, 4, 7, 13], "more": [0, 2, 7], "index": [0, 1, 2, 4, 6, 8, 12, 14], "e": [0, 1, 2, 3, 4, 6, 8, 10, 11], "g": [0, 1, 2, 3, 4, 6, 8, 11], "suitabl": 0, "intermedi": [0, 2, 5, 6, 10], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 13], "plug": 0, "plai": 0, "abstract": [0, 1, 2, 3, 8, 9, 10, 11], "awai": 0, "implement": [0, 1, 2, 5, 6, 8, 10, 12], "detail": [0, 8], "onli": [0, 1, 2, 8, 11, 13], "expos": [0, 13], "ar": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11], "most": [0, 8], "relev": [0, 3, 4, 6, 7, 13], "physicst": 0, "what": [0, 8, 10], "us": [0, 1, 2, 3, 6, 8, 9, 11, 12, 13], "i3modul": 0, "includ": [0, 1, 6, 8], "docker": 0, "imag": [0, 6, 8], "run": [0, 2, 8], "containeris": 0, "fashion": 0, "class": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "nn": [1, 11], "callabl": [1, 2, 4, 11], "aggr": 1, "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13], "max": [1, 3, 8], "nb_neighbor": 1, "int": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13], "8": 1, "features_subset": 1, "option": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "sequenc": 1, "none": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "kwarg": [1, 11], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "base": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13], "edgeconv": 1, "x": [1, 2, 3, 8, 9, 11], "tensor": [1, 8, 10, 11, 13], "edge_index": [1, 8], "union": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13], "sparsetensor": 1, "batch": [1, 2, 8, 12], "collect": [1, 2, 3, 12, 13], "loss": [1, 2, 8, 11, 12], "function": [1, 2, 4, 6, 7, 8, 11, 13], "inherit": [1, 2, 4, 9, 11], "which": [1, 2, 6, 8], "comput": [1, 2, 8, 11], "binari": 1, "cross": 1, "entropi": 1, "vector": [1, 3, 8], "predict": [1, 2, 6, 10, 11, 12], "between": [1, 8, 12], "0": [1, 2, 3, 5, 6, 8, 10, 12], "1": [1, 2, 3, 5, 6, 8, 11, 12], "target": [1, 2, 11], "should": [1, 2, 8], "muon": [1, 3, 6], "respect": 1, "where": [1, 3], "prob": 1, "pid": [1, 2], "12": 1, "14": 1, "16": [1, 8], "report": 1, "elementwis": 1, "so": [1, 8], "set": [1, 2, 8, 11, 13], "calcul": [1, 3, 8], "3d": 1, "euclidean": [1, 8], "distanc": [1, 8], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "output": [1, 2, 5, 6, 8, 10, 11, 12, 13], "must": [1, 6, 8, 12], "shape": [1, 8], "n": [1, 8], "3": [1, 8, 10, 11], "extract": [1, 2, 3, 6, 7, 11], "object": [1, 2, 3, 4, 8, 9, 11, 13], "return": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "type": [1, 2, 3, 6, 7, 8, 9, 10, 13], "arg": [1, 2, 11], "mit": 1, "licens": 1, "copyright": 1, "c": 1, "2019": 1, "ryabinin": 1, "permiss": 1, "herebi": 1, "grant": 1, "free": 1, "charg": [1, 2, 3, 9], "ani": [1, 2, 3, 4, 6, 8], "person": 1, "obtain": 1, "copi": 1, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "softwar": 1, "associ": [1, 2, 3, 8, 11], "document": [1, 8], "deal": 1, "restrict": [1, 11], "limit": 1, "right": 1, "modifi": 1, "merg": [1, 2, 5, 6], "publish": 1, "distribut": 1, "sublicens": 1, "sell": 1, "permit": 1, "whom": 1, "furnish": 1, "do": [1, 8], "subject": 1, "follow": [1, 2, 3], "condit": [1, 8], "The": [1, 2, 3, 4, 8, 11, 12, 13], "abov": [1, 2, 8], "notic": [1, 8], "shall": 1, "substanti": 1, "portion": 1, "THE": 1, "AS": 1, "warranti": 1, "OF": 1, "kind": 1, "express": [1, 2], "OR": [1, 12], "impli": 1, "BUT": 1, "NOT": 1, "TO": 1, "merchant": 1, "fit": [1, 8], "FOR": 1, "A": [1, 2, 3, 8, 10], "particular": [1, 8], "purpos": 1, "AND": 1, "noninfring": 1, "IN": 1, "NO": 1, "author": [1, 10], "holder": 1, "BE": 1, "liabl": 1, "claim": 1, "damag": 1, "other": [1, 3], "liabil": 1, "whether": [1, 4, 6, 8, 13], "an": [1, 2, 3, 4, 8, 12, 13], "action": 1, "contract": 1, "tort": 1, "otherwis": [1, 3, 4], "aris": 1, "out": [1, 2, 8, 13], "connect": [1, 6, 9], "WITH": 1, "_____________________": 1, "http": [1, 8], "github": 1, "com": 1, "mryab": 1, "vmf_loss": 1, "blob": 1, "master": 1, "py": 1, "bessel": 1, "instead": [1, 6], "exponenti": 1, "scale": [1, 10, 11], "ditto": 1, "iv": 1, "indici": [1, 4], "1812": 1, "04616": 1, "spite": 1, "suggest": 1, "sec": 1, "2": [1, 3, 8, 11], "paper": 1, "chang": 1, "ha": [1, 2, 3, 4, 8, 10, 13], "been": [1, 2, 8], "valid": [1, 4, 8, 11, 12], "through": [1, 8], "comparison": 1, "exact": 1, "m": 1, "found": [1, 4, 8], "yield": 1, "correct": 1, "result": [1, 2, 3, 5, 6, 12], "static": 1, "ctx": 1, "grad_output": 1, "defin": [1, 2, 5, 8], "formula": 1, "differenti": 1, "oper": [1, 8], "mode": [1, 8, 11], "automat": [1, 3, 8], "alia": 1, "vjp": 1, "overridden": [1, 9], "subclass": 1, "accept": 1, "context": 1, "first": [1, 3, 8, 12], "argument": [1, 8, 11], "mani": [1, 8], "pass": [1, 6, 8, 10, 11], "non": [1, 4, 6, 13], "were": 1, "input": [1, 2, 3, 8, 9, 10, 11], "each": [1, 2, 3, 4, 6, 7, 8, 12, 13], "gradient": [1, 8], "w": 1, "r": 1, "t": [1, 4, 8, 9, 12], "given": [1, 8], "valu": [1, 2, 3, 6, 8], "correspond": [1, 2, 3, 4, 6, 7, 8, 11, 13], "If": [1, 2, 3, 6, 8, 12], "requir": [1, 6, 8], "grad": 1, "you": [1, 8, 11], "just": [1, 2], "retriev": [1, 6], "dure": 1, "also": [1, 8, 11, 13], "attribut": [1, 2, 3, 8], "needs_input_grad": 1, "tupl": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13], "boolean": [1, 3], "repres": 1, "need": [1, 2, 4, 8], "true": [1, 6, 8, 12], "kappa": [1, 11], "perform": [1, 2, 8, 11], "number": [1, 2, 6, 8, 10, 11, 12], "store": [1, 2, 6], "arbitrari": 1, "directli": [1, 2], "though": 1, "current": [1, 2, 3, 5, 6, 8, 12], "enforc": [1, 8], "compat": 1, "either": [1, 3, 8, 12], "save_for_backward": 1, "thei": [1, 8, 10], "intend": 1, "equival": [1, 4], "save_for_forward": 1, "jvp": 1, "cosh": 1, "act": 1, "like": [1, 3, 4, 8, 13], "small": 1, "larg": 1, "classmethod": [1, 8], "numer": [1, 11], "stabl": [1, 11], "version": [1, 11, 12], "avoid": [1, 2, 6], "inf": 1, "even": [1, 7], "moder": 1, "differ": [1, 2, 8], "see": [1, 3, 8, 12], "kera": 1, "team": 1, "v2": 1, "6": [1, 8], "l1580": 1, "l1617": 1, "_weightedloss": 1, "syntax": [1, 9, 11], "similar": [1, 3, 4, 8], "implent": [1, 9, 11], "final": [1, 2, 3, 6, 9, 11], "return_el": 1, "bool": [1, 4, 6, 8, 9, 10, 11, 12, 13], "fals": [1, 4, 6, 8, 12], "param": [1, 2, 6, 8, 10], "contain": [1, 2, 3, 5, 6, 8], "p": [1, 6], "term": 1, "altern": 1, "averag": [1, 8], "exampl": [1, 3, 8, 12], "default": [1, 2, 5, 6, 8, 9, 10, 11, 12, 13], "scalar": [1, 2, 8], "mean": [1, 2, 5, 6], "squar": 1, "error": [1, 2, 3, 6], "root": 1, "von": 1, "mise": 1, "fisher": 1, "2d": 1, "plane": [1, 3], "angl": [1, 11], "0th": 1, "column": [1, 2, 6, 8], "1st": 1, "estim": 1, "gener": [1, 2, 3, 6, 7, 8], "dimens": [1, 10], "prepar": 1, "d": [1, 8], "dimenson": 1, "space": 1, "utilis": 1, "probabl": 1, "sphere": [1, 8], "dimension": 1, "batch_siz": [1, 2, 8, 12], "unit": [1, 2, 8, 13], "kappa_switch": 1, "float": [1, 2, 3, 5, 6, 8, 10, 12], "100": [1, 2, 3], "c_": 1, "k": [1, 8], "sinc": 1, "diverg": 1, "700": 1, "float64": 1, "precis": [1, 8, 9, 11], "unaccur": 1, "method": [1, 2, 4, 5, 6, 8, 11], "switch": [1, 8], "two": [1, 3, 8, 12], "ensur": [1, 4, 7], "continu": [1, 8], "point": 1, "approx": 1, "arxiv": [1, 8], "org": [1, 8], "ab": [1, 8], "addit": [1, 8], "minu": 1, "sign": 1, "longtensor": [1, 8], "group": [1, 2], "row": 1, "ident": 1, "f": 1, "indic": [1, 2, 6, 8, 12], "within": [1, 2], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13], "num": 1, "assign": [1, 8], "same": [1, 2, 3, 4, 8, 9, 11, 12], "kei": [1, 2, 3, 4, 6, 8], "node": [1, 2, 8, 10, 11], "done": [1, 3], "case": [1, 2, 3, 8, 11], "allow": [1, 2, 12], "puls": [1, 2, 3, 4, 6, 8], "pmt": 1, "dom": [1, 8], "level": [1, 2, 8, 13], "aggreg": 1, "f1": 1, "f2": 1, "7": 1, "call": [1, 2, 3, 4, 6, 8, 12], "groupbi": 1, "string": [1, 2, 3, 4, 9], "cluster": [1, 8], "max_pool": [1, 8], "negat": 1, "size": [1, 2, 8, 10], "max_pool_x": [1, 8], "torch_geometr": [1, 8], "accord": [1, 2, 5, 6, 8], "one": [1, 2, 6, 8, 13], "std": 1, "posit": [1, 3], "edg": [1, 8], "mathbf": [1, 8], "ldot": [1, 8], "take": [1, 4, 6], "matrix": [1, 8], "mathbb": 1, "n_1": 1, "n_b": 1, "time": [1, 6, 8], "b": [1, 8], "maximum": [1, 11], "singl": [1, 2, 8], "properti": [1, 2, 3, 4, 9, 10, 11, 13], "wise": 1, "dens": 1, "represent": [1, 2, 4], "appli": 1, "fc": 1, "per": [1, 3], "known": 1, "els": 1, "sum": [1, 8], "cluster_index": 1, "individu": [1, 2, 8], "db": [1, 6, 12], "pulsemap": [1, 2, 3, 5, 6, 12], "frame": [2, 3, 6], "_load_gcd_data": [2, 3], "name": [2, 3, 4, 5, 6, 8, 11], "set_fil": [2, 3], "i3extractorcollect": [2, 3], "i3featureextractoricecube86": [2, 3], "i3featureextractoricecubedeepcor": [2, 3], "i3featureextractoricecubeupgrad": [2, 3], "i3pulsenoisetruthflagicecubeupgrad": [2, 3], "_cast_mc_tre": [2, 3], "_cast_trigg": [2, 3], "_extract_per_pulse_attribut": [2, 3], "_extract_pulse_series_map": [2, 3], "_flatten_result": [2, 3], "_flatten_result_mctre": [2, 3], "_get_kei": [2, 3], "_try_get_kei": [2, 3], "_find_data_typ": [2, 3], "_get_primary_particle_interaction_type_and_elast": [2, 3], "_get_primary_track_energy_and_inelast": [2, 3], "_muon_stop": [2, 3], "parquetdataconvert": [2, 5], "parquetdataset": [2, 5], "sqlitedataconvert": [2, 6], "_attach_index": [2, 6], "_extract_everyth": [2, 6], "_extract_table_nam": [2, 6], "_merge_temporary_databas": [2, 6], "_submit_to_databas": [2, 6], "any_pulsemap_is_non_empti": [2, 6], "construct_datafram": [2, 6], "is_pulsemap_check": [2, 6], "sqlitedataset": [2, 6], "_close_connect": [2, 6], "_establish_connect": [2, 6], "sqlitedatasetperturb": [2, 6], "get_desired_event_numb": [2, 6], "get_equal_proportion_neutrino_indic": [2, 6], "get_even_dbang_select": [2, 6], "get_even_signal_background_indici": [2, 6], "get_even_track_cascade_indici": [2, 6], "create_t": [2, 6], "run_sql_cod": [2, 6], "save_to_sql": [2, 6], "pairwise_shuffl": [2, 7], "global": 2, "dom_x": [2, 9], "dom_i": [2, 9], "dom_z": [2, 9], "dom_tim": [2, 9], "rde": [2, 9], "pmt_area": [2, 9], "pmt_number": [2, 9], "dom_numb": [2, 9], "pmt_dir_x": [2, 9], "pmt_dir_i": [2, 9], "pmt_dir_z": [2, 9], "dom_typ": [2, 9], "energi": [2, 3, 11], "energy_track": 2, "position_x": [2, 3], "position_i": [2, 3], "position_z": [2, 3], "azimuth": [2, 11], "zenith": [2, 11], "elast": [2, 3], "sim_typ": [2, 3], "interaction_typ": [2, 3], "interaction_tim": 2, "inelast": [2, 3, 11], "stopped_muon": 2, "outdir": [2, 5, 6], "gcd_rescu": [2, 5, 6, 13], "nb_files_to_batch": [2, 5, 6], "sequential_batch_pattern": [2, 5, 6], "input_file_batch_pattern": [2, 5, 6], "worker": [2, 5, 6, 7], "index_column": [2, 5, 6], "event_no": [2, 5, 6], "icetray_verbos": [2, 5, 6], "abc": [2, 3, 8], "specialis": 2, "etc": [2, 8], "directori": [2, 13], "One": 2, "when": [2, 4, 8, 12], "regular": [2, 4], "match": [2, 13], "certain": [2, 8], "pattern": 2, "up": 2, "wildcard": 2, "replac": 2, "period": 2, "special": [2, 3, 8], "interpret": 2, "liter": 2, "charact": 2, "standard": [2, 12], "regex": 2, "For": [2, 4, 12], "instanc": [2, 3, 4, 5, 6, 8, 13], "z": [2, 3, 8, 9], "_": 2, "9": 2, "5": [2, 8], "zst": 2, "find": [2, 13], "whose": [2, 3, 8], "capit": 2, "letter": 2, "underscor": 2, "five": 2, "upgrade_genie_step4_141020_a_000000": 2, "upgrade_genie_step4_141020_a_000001": 2, "upgrade_genie_step4_141020_a_000008": 2, "upgrade_genie_step4_141020_a_000009": 2, "would": 2, "upgrade_genie_step4_141020_a_00000x": 2, "suffix": 2, "upgrade_genie_step4_141020_a_000010": 2, "separ": [2, 4, 12], "upgrade_genie_step4_141020_a_00001x": 2, "ordereddict": [2, 5, 6], "strategi": 2, "distinct": 2, "rather": [2, 11], "than": [2, 11], "send": 2, "back": [2, 8], "path": [2, 3, 5, 6, 7, 8, 13], "gcd": [2, 3, 7, 13], "iter": 2, "over": [2, 8], "applic": 2, "csv": 2, "updat": [2, 8, 11, 12], "self": [2, 8, 12], "_index": 2, "_output_fil": 2, "multiprocess": 2, "wa": [2, 3], "In": [2, 3, 8], "abl": [2, 4], "write": 2, "we": [2, 4, 8], "get": [2, 3, 4, 6, 8, 13], "sync": 2, "nb_file": 2, "": [2, 6, 8, 10, 11, 13], "identifi": 2, "map": [2, 3, 6], "pure": [2, 3, 4], "output_fil": [2, 5, 6], "input_fil": [2, 3, 5, 6], "process_method": 2, "decor": [2, 13], "cach": [2, 12], "make": [2, 6], "global_index": 2, "avail": [2, 3, 8, 13], "except": [2, 3], "miss": 2, "node_truth": [2, 5, 6, 12], "truth_tabl": [2, 5, 6], "node_truth_t": [2, 5, 6, 12], "string_select": [2, 5, 6, 12], "select": [2, 5, 6, 12], "dtype": [2, 5, 6, 13], "torch": [2, 5, 6, 8, 11, 13], "float32": [2, 5, 6], "loss_weight_t": [2, 5, 6, 12], "loss_weight_column": [2, 5, 6, 12], "loss_weight_default_valu": [2, 5, 6], "read": [2, 4, 5, 6, 8, 9], "tabl": [2, 6], "loss_weight": [2, 11], "creat": [2, 6], "pytorch": [2, 5, 6, 8, 12], "No": 2, "preprocess": [2, 9], "stage": 2, "adjanc": 2, "impos": 2, "edge_attr": 2, "edge_weight": 2, "inform": [2, 3], "weigh": 2, "_index_column": 2, "truth_dict": 2, "dict": [2, 3, 4, 6, 8, 9], "label": [2, 6, 10], "doubl": 2, "bang": 2, "dictionari": [2, 3, 4, 6, 8, 12], "ad": 2, "intern": 2, "implemen": 2, "code": [2, 3, 6], "after": [2, 8, 12], "constructor": [2, 3], "queri": [2, 3, 6], "sequenti": [2, 8], "len": [2, 8], "_may_": 2, "_indic": 2, "length": [2, 4, 12], "some": [2, 3, 6, 8], "befor": [2, 6, 10, 11, 12], "rais": 2, "element": [2, 4, 8], "present": [2, 8, 13], "remov": 2, "_featur": 2, "_truth": 2, "fn": [2, 4], "add": [2, 8], "custom": [2, 8, 12], "module_dict": 2, "devic": [2, 8], "retro_table_nam": 2, "retro": [2, 3, 6], "n_worker": 2, "10": [2, 8, 12], "pipeline_nam": 2, "databas": [2, 3, 6], "made": [2, 8], "analysi": 2, "chunk_siz": 2, "1000000": 2, "field": [2, 3], "_module_dict": 2, "slice": 2, "chunk": 2, "control": [2, 8], "memori": 2, "usag": 2, "initi": 2, "gnn_module_for_energy_regress": 2, "modulelist": 2, "_devic": 2, "dataload": [2, 6, 8, 12], "alreadi": [2, 3, 6], "exist": [2, 3, 6], "prompt": 2, "overwrit": [2, 12], "pipeline_databas": [2, 6], "table_nam": [2, 6], "df": [2, 6], "panda": [2, 6], "datafram": [2, 6], "combin": [2, 6, 11, 12], "flatten_nested_dictionari": [3, 4], "serialis": [3, 4], "transpose_list_of_dict": [3, 4], "frame_is_montecarlo": [3, 4], "frame_is_nois": [3, 4], "get_om_keys_and_pulseseri": [3, 4], "break_cyclic_recurs": [3, 4], "cast_object_to_pure_python": [3, 4], "cast_pulse_series_to_pure_python": [3, 4], "get_member_vari": [3, 4], "is_boost_class": [3, 4], "is_boost_enum": [3, 4], "is_icecube_class": [3, 4], "is_method": [3, 4], "is_typ": [3, 4], "geospati": 3, "manag": 3, "multipl": [3, 8, 12], "exclude_kei": 3, "dynam": 3, "pars": 3, "i3fram": [3, 4], "tri": [3, 4], "cast": [3, 4], "recurs": [3, 4, 13], "look": 3, "member": [3, 4], "variabl": [3, 4, 8], "signatur": [3, 4], "handl": [3, 8], "hand": 3, "seri": [3, 4], "mc": 3, "tree": 3, "trigger": 3, "icetrai": [3, 4, 13], "possibl": [3, 4, 11], "check": [3, 4, 6, 13], "obj": [3, 4], "dataclass": [3, 4], "i3mctre": 3, "i3triggerhierarchi": 3, "hierarchi": 3, "i3mapkeyuint": 3, "om": [3, 4], "integ": [3, 8, 10], "flatten": 3, "user": [3, 12], "possibli": 3, "ones": 3, "explicitli": 3, "exclud": 3, "reco": 3, "quantiti": [3, 8, 11], "default_valu": 3, "border": 3, "padding_valu": 3, "determin": 3, "montecarlo": 3, "simul": 3, "primari": 3, "particl": 3, "interact": [3, 11], "handler": 3, "doe": [3, 4, 10], "thing": [3, 8], "catch": 3, "issu": 3, "relat": [3, 7, 13], "doesnt": 3, "pad": 3, "mciniceprimari": 3, "neutral": 3, "neither": 3, "total": 3, "track": [3, 11], "record": [3, 13], "horizontal_pad": 3, "vertical_pad": 3, "stop": [3, 8], "insid": [3, 12], "fiduci": 3, "volum": 3, "analogou": 3, "vertex": 3, "under": 3, "entri": 3, "xy": 3, "outlin": 3, "second": [3, 8], "min": [3, 8], "depth": 3, "hard": 3, "shrink": 3, "further": 3, "exclus": 3, "zone": 3, "height": 3, "y": [3, 8, 9], "co": 3, "ordin": 3, "manipul": 4, "parent_kei": 4, "__": 4, "necessari": [4, 6], "json": 4, "typic": 4, "nest": 4, "therefor": 4, "outer": 4, "order": [4, 8], "de": 4, "arrai": 4, "pulseseri": 4, "calibr": 4, "i3calibr": 4, "gcd_dict": 4, "om_kei": 4, "isn": 4, "mainli": 4, "cannot": 4, "trivial": 4, "try": 4, "similarli": 4, "support": [4, 8], "its": [4, 6, 8], "itself": [4, 11], "deem": 4, "wai": 4, "optic": 4, "return_discard": 4, "ignor": 4, "mangl": 4, "boost": 4, "enum": 4, "attach": 6, "is_pulse_map": 6, "pd": 6, "everyth": 6, "temporari": 6, "submit": 6, "specifi": [6, 8, 11, 12, 13], "data_dict": 6, "empti": 6, "splitinicepuls": 6, "least": 6, "becaus": [6, 7], "alwai": 6, "sure": 6, "sqlite3": 6, "open": 6, "replica": 6, "own": [6, 8], "databaseerror": 6, "disk": 6, "malform": 6, "due": 6, "inabl": 6, "accross": 6, "perturbation_dict": 6, "perturb": 6, "step": [6, 8, 12], "test": [6, 11, 12, 13], "stabil": 6, "desired_s": 6, "fraction_nois": 6, "fraction_muon": 6, "fraction_nu_": 6, "fraction_nu_mu": 6, "fraction_nu_tau": 6, "seed": [6, 12], "fraction": [6, 10], "nois": 6, "nu_e": 6, "nu_mu": 6, "nu_tau": 6, "reed": 6, "42": [6, 12], "equal": 6, "flavour": 6, "proport": 6, "resp": 6, "min_max_decay_length": 6, "dbang": 6, "cc": 6, "nc": 6, "mu": 6, "i3_list": [7, 13], "gcd_list": [7, 13], "shuffl": [7, 12], "correpond": 7, "handi": 7, "files_list": 7, "gcd_shuffl": 7, "i3_shuffl": 7, "nb_input": [8, 9, 10, 11], "nb_output": [8, 9, 10], "allow_zero_length_dataloader_with_multiple_devic": [8, 9, 11], "prepare_data_per_nod": [8, 9, 11], "icecubedeepcor": [8, 9], "icecubeupgrad": [8, 9], "icecubeupgrade_v2": [8, 9], "dynedge_v2": [8, 10], "dynedge_v3": [8, 10], "azimuthreconstruct": [8, 11], "azimuthreconstructionwithkappa": [8, 11], "binaryclassificationtask": [8, 11], "binaryclassificationtasklogit": [8, 11], "energyreconstruct": [8, 11], "energyreconstructionwithuncertainti": [8, 11], "inelasticityreconstruct": [8, 11], "passoutput1": [8, 11], "passoutput2": [8, 11], "passoutput3": [8, 11], "positionreconstruct": [8, 11], "timereconstruct": [8, 11], "vertexreconstruct": [8, 11], "zenithreconstruct": [8, 11], "zenithreconstructionwithkappa": [8, 11], "_validate_and_set_transform": [8, 11], "train_ev": [8, 11], "piecewiselinearlr": [8, 12], "get_lr": [8, 12], "progressbar": [8, 12], "get_metr": [8, 12], "init_predict_tqdm": [8, 12], "init_test_tqdm": [8, 12], "init_train_tqdm": [8, 12], "init_validation_tqdm": [8, 12], "on_train_epoch_end": [8, 12], "on_train_epoch_start": [8, 12], "get_predict": [8, 12], "make_dataload": [8, 12], "make_train_validation_dataload": [8, 12], "save_result": [8, 12], "local": 8, "reduc": 8, "avg": 8, "transfer_attribut": 8, "By": [8, 11], "nomin": 8, "pooling_method": 8, "well": 8, "overwritten": 8, "bespok": 8, "uniqu": 8, "original_data": 8, "pooled_data": 8, "transfer": 8, "avg_pool": 8, "avg_pool_x": 8, "split": 8, "sigma": 8, "threshold": 8, "adjac": [8, 9], "pdf": 8, "1809": 8, "06166": 8, "nb_nearest_neighbour": 8, "nearest": 8, "neighbour": 8, "radiu": 8, "chosen": 8, "centr": 8, "hit": 8, "optimizer_class": 8, "optim": [8, 12], "adam": 8, "optimizer_kwarg": 8, "scheduler_class": 8, "scheduler_kwarg": 8, "scheduler_config": 8, "lightningmodul": [8, 9, 10, 11, 12], "togeth": 8, "complet": 8, "pred": [8, 11], "verbos": [8, 12], "choos": 8, "rate": [8, 12], "schedul": 8, "your": [8, 11], "normal": 8, "But": 8, "gan": 8, "might": 8, "lr": 8, "lr_scheduler_config": 8, "lr_schedul": 8, "describ": 8, "frequenc": 8, "shown": 8, "below": 8, "could": 8, "epoch": [8, 12], "wherea": 8, "interv": 8, "how": [8, 12], "everi": 8, "metric": [8, 12], "monitor": 8, "reducelronplateau": 8, "val_loss": 8, "thu": 8, "produc": 8, "warn": [8, 13], "strict": 8, "learningratemonitor": 8, "progress": [8, 12], "keyword": [8, 11], "lightn": [8, 12], "def": [8, 12], "metric_to_track": 8, "often": 8, "refer": 8, "trainer": [8, 12], "check_val_every_n_epoch": 8, "optimizer1": 8, "optimizer2": 8, "sgd": 8, "scheduler1": 8, "scheduler2": 8, "lambdalr": 8, "simpli": 8, "metric_v": 8, "along": 8, "There": 8, "former": 8, "latter": 8, "mention": 8, "optimizer_on": 8, "01": 8, "optimizer_two": 8, "next": 8, "cycl": 8, "being": [8, 11], "1e": 8, "gen_opt": 8, "model_gen": 8, "dis_opt": 8, "model_di": 8, "02": 8, "dis_sch": 8, "cosineann": 8, "t_max": 8, "gen_sch": 8, "exponentiallr": 8, "99": 8, "procedur": 8, "wasserstein": 8, "algorithm": 8, "1704": 8, "00028": 8, "n_critic": 8, "know": 8, "bit": 8, "optimizer_idx": 8, "lbfg": 8, "closur": 8, "those": 8, "overrid": [8, 12], "optimizer_step": 8, "hook": [8, 12], "entir": 8, "state_dict": 8, "batch_idx": 8, "effect": 8, "behavior": 8, "evalu": 8, "affect": 8, "dropout": 8, "batchnorm": 8, "train_batch": 8, "here": [8, 12], "bar": [8, 12], "displai": [8, 12], "hidden": [8, 10], "paramref": 8, "pytorch_lightn": 8, "core": [8, 10], "truncated_bptt_step": 8, "skip": 8, "multi": 8, "gpu": 8, "tpu": 8, "ipu": 8, "deepspe": 8, "fancier": 8, "someth": 8, "encod": 8, "decod": 8, "truncat": 8, "propag": 8, "state": 8, "previou": [8, 12], "backprop": 8, "lstm": 8, "smooth": 8, "last": [8, 12], "actual": 8, "val_batch": 8, "anyth": 8, "interest": 8, "accuraci": 8, "pseudocod": 8, "val_out": 8, "val_data": 8, "append": 8, "validation_epoch_end": 8, "dataloader_idx": 8, "val": 8, "validation_step_end": 8, "text": 8, "whatev": [8, 11], "sample_img": 8, "grid": 8, "torchvis": 8, "make_grid": 8, "add_imag": 8, "example_imag": 8, "acc": 8, "labels_hat": 8, "argmax": 8, "dim": 8, "val_acc": 8, "item": [8, 12], "log_dict": 8, "recommend": 8, "quickli": 8, "tell": 8, "don": [8, 12], "put": 8, "eval": 8, "disabl": 8, "At": 8, "goe": 8, "enabl": 8, "xyz_coord": 8, "pairwis": 8, "coordin": 8, "nb_dom": 8, "xyzt": 8, "homophili": 8, "measur": 8, "assum": [8, 9, 11], "eg": 8, "scaler": 9, "ins": 9, "pre": 9, "mai": 9, "86": 9, "descript": 10, "martin": 10, "minh": 10, "email": 10, "nb_intermedi": 10, "128": 10, "dropout_ratio": 10, "drop": 10, "rasmu": 10, "oerso": 10, "layer_size_scal": 10, "4": [10, 11], "node_pool": 10, "learnabl": 10, "hidden_s": 11, "target_label": 11, "transform_prediction_and_target": 11, "transform_target": 11, "transform_infer": 11, "transform_support": 11, "var": 11, "uncertainti": 11, "v": 11, "hadron": 11, "interfer": 11, "feed": 11, "construct": 11, "affin": 11, "appropri": 11, "both": 11, "o": 11, "log10": 11, "conjunct": 11, "invers": 11, "recov": 11, "minimum": 11, "rang": 11, "invert": 11, "1e6": 11, "assert": 11, "decid": 11, "deactiv": 11, "mileston": 12, "factor": 12, "last_epoch": 12, "_lrschedul": 12, "interpol": 12, "linearli": 12, "denot": 12, "multipli": 12, "closest": 12, "vice": 12, "versa": 12, "wrap": 12, "increas": 12, "print": [12, 13], "messag": [12, 13], "stdout": 12, "refresh_r": 12, "process_posit": 12, "tqdmprogressbar": 12, "customis": 12, "get_standard_metr": 12, "show": 12, "super": 12, "pop": 12, "v_num": 12, "tqdm": 12, "To": 12, "access": 12, "training_epoch_end": 12, "via": 12, "post": 12, "line": 12, "while": 12, "behaviour": 12, "prediction_column": 12, "node_level": 12, "additional_attribut": 12, "num_work": 12, "persistent_work": 12, "database_indic": 12, "test_siz": 12, "33": 12, "tag": 12, "archiv": 12, "system": 13, "dir": 13, "search": [13, 14], "filenam": 13, "desir": 13, "functionn": 13, "test_funct": 13, "consist": 13, "project": 13, "repeat": 13, "formatt": 13, "coloredformatt": 13, "colour": 13, "log_fold": 13, "place": 13, "termin": 13, "debug": 13, "20": 13, "exactli": 13, "onc": 13, "assort": 13, "ep": 13, "modul": [14, 15], "page": 14, "graphnet": 15, "packag": 15, "subpackag": 15, "content": 15}, "objects": {"": [[0, 0, 0, "-", "graphnet"]], "graphnet": [[1, 0, 0, "-", "components"], [2, 0, 0, "-", "data"], [8, 0, 0, "-", "models"], [13, 0, 0, "-", "utilities"]], "graphnet.components": [[1, 0, 0, "-", "layers"], [1, 0, 0, "-", "loss_functions"], [1, 0, 0, "-", "pool"], [1, 0, 0, "-", "utils"]], "graphnet.components.layers": [[1, 1, 1, "", "DynEdgeConv"]], "graphnet.components.layers.DynEdgeConv": [[1, 2, 1, "", "forward"]], "graphnet.components.loss_functions": [[1, 1, 1, "", "BinaryCrossEntropyLoss"], [1, 1, 1, "", "EuclideanDistanceLoss"], [1, 1, 1, "", "LogCMK"], [1, 1, 1, "", "LogCoshLoss"], [1, 1, 1, "", "LossFunction"], [1, 1, 1, "", "MSELoss"], [1, 1, 1, "", "RMSELoss"], [1, 1, 1, "", "VonMisesFisher2DLoss"], [1, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.components.loss_functions.BinaryCrossEntropyLoss": [[1, 3, 1, "", "reduction"]], "graphnet.components.loss_functions.EuclideanDistanceLoss": [[1, 2, 1, "", "_forward"], [1, 3, 1, "", "reduction"]], "graphnet.components.loss_functions.LogCMK": [[1, 2, 1, "", "backward"], [1, 2, 1, "", "forward"]], "graphnet.components.loss_functions.LogCoshLoss": [[1, 2, 1, "", "_forward"], [1, 2, 1, "", "_log_cosh"], [1, 3, 1, "", "reduction"]], "graphnet.components.loss_functions.LossFunction": [[1, 2, 1, "", "_forward"], [1, 2, 1, "", "forward"], [1, 3, 1, "", "reduction"]], "graphnet.components.loss_functions.MSELoss": [[1, 2, 1, "", "_forward"], [1, 3, 1, "", "reduction"], [1, 3, 1, "", "training"], [1, 3, 1, "", "weight"]], "graphnet.components.loss_functions.RMSELoss": [[1, 2, 1, "", "_forward"], [1, 3, 1, "", "reduction"], [1, 3, 1, "", "training"], [1, 3, 1, "", "weight"]], "graphnet.components.loss_functions.VonMisesFisher2DLoss": [[1, 2, 1, "", "_forward"], [1, 3, 1, "", "reduction"], [1, 3, 1, "", "training"], [1, 3, 1, "", "weight"]], "graphnet.components.loss_functions.VonMisesFisherLoss": [[1, 2, 1, "", "_evaluate"], [1, 2, 1, "", "log_cmk"], [1, 2, 1, "", "log_cmk_approx"], [1, 2, 1, "", "log_cmk_exact"], [1, 3, 1, "", "reduction"], [1, 3, 1, "", "training"], [1, 3, 1, "", "weight"]], "graphnet.components.pool": [[1, 4, 1, "", "_group_identical"], [1, 4, 1, "", "group_by"], [1, 4, 1, "", "group_pulses_to_dom"], [1, 4, 1, "", "group_pulses_to_pmt"], [1, 4, 1, "", "min_pool"], [1, 4, 1, "", "min_pool_x"], [1, 4, 1, "", "std_pool"], [1, 4, 1, "", "std_pool_x"], [1, 4, 1, "", "sum_pool"], [1, 4, 1, "", "sum_pool_and_distribute"], [1, 4, 1, "", "sum_pool_x"]], "graphnet.components.utils": [[1, 4, 1, "", "check_db_size"], [1, 4, 1, "", "fit_scaler"]], "graphnet.data": [[2, 0, 0, "-", "constants"], [2, 0, 0, "-", "dataconverter"], [2, 0, 0, "-", "dataset"], [3, 0, 0, "-", "extractors"], [5, 0, 0, "-", "parquet"], [2, 0, 0, "-", "pipeline"], [6, 0, 0, "-", "sqlite"], [7, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[2, 1, 1, "", "FEATURES"], [2, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[2, 3, 1, "", "DEEPCORE"], [2, 3, 1, "", "ICECUBE86"], [2, 3, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[2, 3, 1, "", "DEEPCORE"], [2, 3, 1, "", "ICECUBE86"], [2, 3, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[2, 1, 1, "", "DataConverter"], [2, 1, 1, "", "FileSet"], [2, 4, 1, "", "cache_output_files"], [2, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[2, 2, 1, "", "__call__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "_extract_data"], [2, 2, 1, "", "_iterate_over_batches_of_files"], [2, 2, 1, "", "_save_filenames"], [2, 2, 1, "", "_update_shared_variables"], [2, 2, 1, "", "execute"], [2, 5, 1, "", "file_suffix"], [2, 2, 1, "", "get_map_function"], [2, 2, 1, "", "merge_files"], [2, 2, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[2, 3, 1, "", "gcd_file"], [2, 3, 1, "", "i3_file"]], "graphnet.data.dataset": [[2, 6, 1, "", "ColumnMissingException"], [2, 1, 1, "", "Dataset"]], "graphnet.data.dataset.Dataset": [[2, 2, 1, "", "_check_missing_columns"], [2, 2, 1, "", "_create_graph"], [2, 2, 1, "", "_get_all_indices"], [2, 2, 1, "", "_get_dbang_label"], [2, 2, 1, "", "_get_labels"], [2, 2, 1, "", "_init"], [2, 2, 1, "", "_post_init"], [2, 2, 1, "", "_query"], [2, 2, 1, "", "_query_table"], [2, 2, 1, "", "_remove_missing_columns"], [2, 2, 1, "", "add_label"]], "graphnet.data.extractors": [[3, 0, 0, "-", "i3extractor"], [3, 0, 0, "-", "i3featureextractor"], [3, 0, 0, "-", "i3genericextractor"], [3, 0, 0, "-", "i3retroextractor"], [3, 0, 0, "-", "i3truthextractor"], [4, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[3, 1, 1, "", "I3Extractor"], [3, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "_load_gcd_data"], [3, 5, 1, "", "name"], [3, 2, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[3, 2, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[3, 1, 1, "", "I3FeatureExtractor"], [3, 1, 1, "", "I3FeatureExtractorIceCube86"], [3, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [3, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [3, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86": [[3, 2, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade": [[3, 2, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade": [[3, 2, 1, "", "__call__"]], "graphnet.data.extractors.i3genericextractor": [[3, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor.I3GenericExtractor": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "_cast_mc_tree"], [3, 2, 1, "", "_cast_triggers"], [3, 2, 1, "", "_extract_per_pulse_attribute"], [3, 2, 1, "", "_extract_pulse_series_map"], [3, 2, 1, "", "_flatten_result"], [3, 2, 1, "", "_flatten_result_mctree"], [3, 2, 1, "", "_get_keys"]], "graphnet.data.extractors.i3retroextractor": [[3, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor.I3RetroExtractor": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "_try_get_key"]], "graphnet.data.extractors.i3truthextractor": [[3, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor.I3TruthExtractor": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "_find_data_type"], [3, 2, 1, "", "_get_primary_particle_interaction_type_and_elasticity"], [3, 2, 1, "", "_get_primary_track_energy_and_inelasticity"], [3, 2, 1, "", "_muon_stopped"]], "graphnet.data.extractors.utilities": [[4, 0, 0, "-", "collections"], [4, 0, 0, "-", "frames"], [4, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[4, 4, 1, "", "flatten_nested_dictionary"], [4, 4, 1, "", "serialise"], [4, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[4, 4, 1, "", "frame_is_montecarlo"], [4, 4, 1, "", "frame_is_noise"], [4, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[4, 4, 1, "", "break_cyclic_recursion"], [4, 4, 1, "", "cast_object_to_pure_python"], [4, 4, 1, "", "cast_pulse_series_to_pure_python"], [4, 4, 1, "", "get_member_variables"], [4, 4, 1, "", "is_boost_class"], [4, 4, 1, "", "is_boost_enum"], [4, 4, 1, "", "is_icecube_class"], [4, 4, 1, "", "is_method"], [4, 4, 1, "", "is_type"]], "graphnet.data.parquet": [[5, 0, 0, "-", "parquet_dataconverter"], [5, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[5, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[5, 3, 1, "", "file_suffix"], [5, 2, 1, "", "merge_files"], [5, 2, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[5, 1, 1, "", "ParquetDataset"]], "graphnet.data.pipeline": [[2, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pipeline.InSQLitePipeline": [[2, 2, 1, "", "__call__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "_create_table"]], "graphnet.data.sqlite": [[6, 0, 0, "-", "sqlite_dataconverter"], [6, 0, 0, "-", "sqlite_dataset"], [6, 0, 0, "-", "sqlite_dataset_perturbed"], [6, 0, 0, "-", "sqlite_selection"], [6, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, 1, 1, "", "SQLiteDataConverter"], [6, 4, 1, "", "construct_dataframe"], [6, 4, 1, "", "is_pulsemap_check"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[6, 2, 1, "", "_attach_index"], [6, 2, 1, "", "_create_table"], [6, 2, 1, "", "_extract_everything"], [6, 2, 1, "", "_extract_table_names"], [6, 2, 1, "", "_merge_temporary_databases"], [6, 2, 1, "", "_submit_to_database"], [6, 2, 1, "", "any_pulsemap_is_non_empty"], [6, 3, 1, "", "file_suffix"], [6, 2, 1, "", "merge_files"], [6, 2, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[6, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[6, 2, 1, "", "_close_connection"], [6, 2, 1, "", "_establish_connection"], [6, 2, 1, "", "_query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_selection": [[6, 4, 1, "", "get_desired_event_numbers"], [6, 4, 1, "", "get_equal_proportion_neutrino_indices"], [6, 4, 1, "", "get_even_dbang_selection"], [6, 4, 1, "", "get_even_signal_background_indicies"], [6, 4, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[6, 4, 1, "", "create_table"], [6, 4, 1, "", "run_sql_code"], [6, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[7, 0, 0, "-", "random"]], "graphnet.data.utilities.random": [[7, 4, 1, "", "pairwise_shuffle"]], "graphnet.models": [[8, 0, 0, "-", "coarsening"], [9, 0, 0, "-", "detector"], [10, 0, 0, "-", "gnn"], [8, 0, 0, "-", "graph_builders"], [8, 0, 0, "-", "model"], [11, 0, 0, "-", "task"], [12, 0, 0, "-", "training"], [8, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[8, 1, 1, "", "Coarsening"], [8, 1, 1, "", "CustomDOMCoarsening"], [8, 1, 1, "", "DOMCoarsening"], [8, 1, 1, "", "LoopBasedCoarsening"], [8, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[8, 2, 1, "", "__call__"], [8, 2, 1, "", "_additional_features"], [8, 2, 1, "", "_perform_clustering"], [8, 2, 1, "", "_transfer_attributes"], [8, 3, 1, "", "reduce_options"]], "graphnet.models.coarsening.CustomDOMCoarsening": [[8, 2, 1, "", "_additional_features"]], "graphnet.models.coarsening.DOMCoarsening": [[8, 2, 1, "", "_perform_clustering"]], "graphnet.models.coarsening.LoopBasedCoarsening": [[8, 2, 1, "", "__call__"]], "graphnet.models.detector": [[9, 0, 0, "-", "detector"], [9, 0, 0, "-", "icecube"], [9, 0, 0, "-", "prototype"]], "graphnet.models.detector.detector": [[9, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[9, 2, 1, "", "_forward"], [9, 5, 1, "", "features"], [9, 2, 1, "", "forward"], [9, 5, 1, "", "nb_inputs"], [9, 5, 1, "", "nb_outputs"], [9, 3, 1, "", "training"]], "graphnet.models.detector.icecube": [[9, 1, 1, "", "IceCube86"], [9, 1, 1, "", "IceCubeDeepCore"], [9, 1, 1, "", "IceCubeUpgrade"], [9, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[9, 2, 1, "", "_forward"], [9, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 3, 1, "", "features"], [9, 3, 1, "", "precision"], [9, 3, 1, "", "prepare_data_per_node"], [9, 3, 1, "", "training"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[9, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 3, 1, "", "precision"], [9, 3, 1, "", "prepare_data_per_node"], [9, 3, 1, "", "training"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[9, 2, 1, "", "_forward"], [9, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 3, 1, "", "features"], [9, 3, 1, "", "precision"], [9, 3, 1, "", "prepare_data_per_node"], [9, 3, 1, "", "training"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[9, 2, 1, "", "_forward"], [9, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 3, 1, "", "features"], [9, 5, 1, "", "nb_outputs"], [9, 3, 1, "", "precision"], [9, 3, 1, "", "prepare_data_per_node"], [9, 3, 1, "", "training"]], "graphnet.models.detector.prototype": [[9, 1, 1, "", "Prototype"]], "graphnet.models.detector.prototype.Prototype": [[9, 2, 1, "", "_forward"], [9, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 3, 1, "", "features"], [9, 3, 1, "", "precision"], [9, 3, 1, "", "prepare_data_per_node"], [9, 3, 1, "", "training"]], "graphnet.models.gnn": [[10, 0, 0, "-", "convnet"], [10, 0, 0, "-", "dynedge"], [10, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[10, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "forward"], [10, 3, 1, "", "training"]], "graphnet.models.gnn.dynedge": [[10, 1, 1, "", "DynEdge"], [10, 1, 1, "", "DynEdge_V2"], [10, 1, 1, "", "DynEdge_V3"]], "graphnet.models.gnn.dynedge.DynEdge": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "forward"], [10, 3, 1, "", "training"]], "graphnet.models.gnn.dynedge.DynEdge_V2": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "forward"], [10, 3, 1, "", "training"]], "graphnet.models.gnn.dynedge.DynEdge_V3": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "forward"], [10, 3, 1, "", "training"]], "graphnet.models.gnn.gnn": [[10, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[10, 2, 1, "", "forward"], [10, 5, 1, "", "nb_inputs"], [10, 5, 1, "", "nb_outputs"], [10, 3, 1, "", "training"]], "graphnet.models.graph_builders": [[8, 1, 1, "", "EuclideanGraphBuilder"], [8, 1, 1, "", "GraphBuilder"], [8, 1, 1, "", "KNNGraphBuilder"], [8, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.model": [[8, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[8, 2, 1, "", "compute_loss"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 2, 1, "", "inference"], [8, 2, 1, "", "load"], [8, 2, 1, "", "load_state_dict"], [8, 2, 1, "", "save"], [8, 2, 1, "", "save_state_dict"], [8, 2, 1, "", "shared_step"], [8, 2, 1, "", "train"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 2, 1, "", "validation_step"]], "graphnet.models.task": [[11, 0, 0, "-", "reconstruction"], [11, 0, 0, "-", "task"]], "graphnet.models.task.reconstruction": [[11, 1, 1, "", "AzimuthReconstruction"], [11, 1, 1, "", "AzimuthReconstructionWithKappa"], [11, 1, 1, "", "BinaryClassificationTask"], [11, 1, 1, "", "BinaryClassificationTaskLogits"], [11, 1, 1, "", "EnergyReconstruction"], [11, 1, 1, "", "EnergyReconstructionWithUncertainty"], [11, 1, 1, "", "InelasticityReconstruction"], [11, 1, 1, "", "PassOutput1"], [11, 1, 1, "", "PassOutput2"], [11, 1, 1, "", "PassOutput3"], [11, 1, 1, "", "PositionReconstruction"], [11, 1, 1, "", "TimeReconstruction"], [11, 1, 1, "", "VertexReconstruction"], [11, 1, 1, "", "ZenithReconstruction"], [11, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.BinaryClassificationTask": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[11, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "precision"], [11, 3, 1, "", "prepare_data_per_node"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.PassOutput1": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.PassOutput2": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.PassOutput3": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "training"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[11, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [11, 3, 1, "", "nb_inputs"], [11, 3, 1, "", "precision"], [11, 3, 1, "", "prepare_data_per_node"], [11, 3, 1, "", "training"]], "graphnet.models.task.task": [[11, 1, 1, "", "Task"]], "graphnet.models.task.task.Task": [[11, 2, 1, "", "_forward"], [11, 2, 1, "", "_validate_and_set_transforms"], [11, 2, 1, "", "compute_loss"], [11, 2, 1, "", "forward"], [11, 2, 1, "", "inference"], [11, 5, 1, "", "nb_inputs"], [11, 2, 1, "", "train_eval"], [11, 3, 1, "", "training"]], "graphnet.models.training": [[12, 0, 0, "-", "callbacks"], [12, 0, 0, "-", "utils"]], "graphnet.models.training.callbacks": [[12, 1, 1, "", "PiecewiseLinearLR"], [12, 1, 1, "", "ProgressBar"]], "graphnet.models.training.callbacks.PiecewiseLinearLR": [[12, 2, 1, "", "get_lr"]], "graphnet.models.training.callbacks.ProgressBar": [[12, 2, 1, "", "get_metrics"], [12, 2, 1, "", "init_predict_tqdm"], [12, 2, 1, "", "init_test_tqdm"], [12, 2, 1, "", "init_train_tqdm"], [12, 2, 1, "", "init_validation_tqdm"], [12, 2, 1, "", "on_train_epoch_end"], [12, 2, 1, "", "on_train_epoch_start"]], "graphnet.models.training.utils": [[12, 4, 1, "", "get_predictions"], [12, 4, 1, "", "make_dataloader"], [12, 4, 1, "", "make_train_validation_dataloader"], [12, 4, 1, "", "save_results"]], "graphnet.models.utils": [[8, 4, 1, "", "calculate_distance_matrix"], [8, 4, 1, "", "calculate_xyzt_homophily"], [8, 4, 1, "", "knn_graph_batch"]], "graphnet.utilities": [[13, 0, 0, "-", "filesys"], [13, 0, 0, "-", "imports"], [13, 0, 0, "-", "logging"], [13, 0, 0, "-", "maths"]], "graphnet.utilities.filesys": [[13, 4, 1, "", "find_i3_files"], [13, 4, 1, "", "has_extension"], [13, 4, 1, "", "is_gcd_file"], [13, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[13, 4, 1, "", "has_icecube_package"], [13, 4, 1, "", "has_torch_package"], [13, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[13, 1, 1, "", "LoggerMixin"], [13, 1, 1, "", "RepeatFilter"], [13, 4, 1, "", "get_formatters"], [13, 4, 1, "", "get_logger"], [13, 4, 1, "", "set_logging_level"], [13, 4, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[13, 5, 1, "", "logger"]], "graphnet.utilities.logging.RepeatFilter": [[13, 2, 1, "", "filter"]], "graphnet.utilities.maths": [[13, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "subpackag": [0, 2, 3, 8], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "compon": 1, "submodul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "layer": 1, "loss_funct": 1, "pool": 1, "util": [1, 4, 7, 8, 12, 13], "data": [2, 3, 4, 5, 6, 7], "constant": 2, "dataconvert": 2, "dataset": 2, "pipelin": 2, "extractor": [3, 4], "i3extractor": 3, "i3featureextractor": 3, "i3genericextractor": 3, "i3retroextractor": 3, "i3truthextractor": 3, "collect": 4, "frame": 4, "type": 4, "parquet": 5, "parquet_dataconvert": 5, "parquet_dataset": 5, "sqlite": 6, "sqlite_dataconvert": 6, "sqlite_dataset": 6, "sqlite_dataset_perturb": 6, "sqlite_select": 6, "sqlite_util": 6, "random": 7, "model": [8, 9, 10, 11, 12], "coarsen": 8, "graph_build": 8, "detector": 9, "icecub": 9, "prototyp": 9, "gnn": [10, 14], "convnet": 10, "dynedg": 10, "task": 11, "reconstruct": 11, "train": 12, "callback": 12, "filesi": 13, "import": 13, "log": 13, "math": 13, "welcom": 14, "reco": 14, "": 14, "document": 14, "indic": 14, "tabl": 14, "src": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"graphnet package": [[0, "graphnet-package"]], "Subpackages": [[0, "subpackages"], [2, "subpackages"], [3, "subpackages"], [8, "subpackages"]], "Module contents": [[0, "module-graphnet"], [1, "module-graphnet.components"], [2, "module-graphnet.data"], [3, "module-graphnet.data.extractors"], [4, "module-graphnet.data.extractors.utilities"], [5, "module-graphnet.data.parquet"], [6, "module-graphnet.data.sqlite"], [7, "module-graphnet.data.utilities"], [8, "module-graphnet.models"], [9, "module-graphnet.models.detector"], [10, "module-graphnet.models.gnn"], [11, "module-graphnet.models.task"], [12, "module-graphnet.models.training"], [13, "module-graphnet.utilities"]], "graphnet.components package": [[1, "graphnet-components-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"]], "graphnet.components.layers module": [[1, "module-graphnet.components.layers"]], "graphnet.components.loss_functions module": [[1, "module-graphnet.components.loss_functions"]], "graphnet.components.pool module": [[1, "module-graphnet.components.pool"]], "graphnet.components.utils module": [[1, "module-graphnet.components.utils"]], "graphnet.data package": [[2, "graphnet-data-package"]], "graphnet.data.constants module": [[2, "module-graphnet.data.constants"]], "graphnet.data.dataconverter module": [[2, "module-graphnet.data.dataconverter"]], "graphnet.data.dataset module": [[2, "module-graphnet.data.dataset"]], "graphnet.data.pipeline module": [[2, "module-graphnet.data.pipeline"]], "graphnet.data.extractors package": [[3, "graphnet-data-extractors-package"]], "graphnet.data.extractors.i3extractor module": [[3, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor module": [[3, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor module": [[3, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3retroextractor module": [[3, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3truthextractor module": [[3, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.utilities package": [[4, "graphnet-data-extractors-utilities-package"]], "graphnet.data.extractors.utilities.collections module": [[4, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames module": [[4, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types module": [[4, "module-graphnet.data.extractors.utilities.types"]], "graphnet.data.parquet package": [[5, "graphnet-data-parquet-package"]], "graphnet.data.parquet.parquet_dataconverter module": [[5, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset module": [[5, "module-graphnet.data.parquet.parquet_dataset"]], "graphnet.data.sqlite package": [[6, "graphnet-data-sqlite-package"]], "graphnet.data.sqlite.sqlite_dataconverter module": [[6, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset module": [[6, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed module": [[6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection module": [[6, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities module": [[6, "module-graphnet.data.sqlite.sqlite_utilities"]], "graphnet.data.utilities package": [[7, "graphnet-data-utilities-package"]], "graphnet.data.utilities.random module": [[7, "module-graphnet.data.utilities.random"]], "graphnet.models package": [[8, "graphnet-models-package"]], "graphnet.models.coarsening module": [[8, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders module": [[8, "module-graphnet.models.graph_builders"]], "graphnet.models.model module": [[8, "module-graphnet.models.model"]], "graphnet.models.utils module": [[8, "module-graphnet.models.utils"]], "graphnet.models.detector package": [[9, "graphnet-models-detector-package"]], "graphnet.models.detector.detector module": [[9, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube module": [[9, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prototype module": [[9, "module-graphnet.models.detector.prototype"]], "graphnet.models.gnn package": [[10, "graphnet-models-gnn-package"]], "graphnet.models.gnn.convnet module": [[10, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge module": [[10, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.gnn module": [[10, "module-graphnet.models.gnn.gnn"]], "graphnet.models.task package": [[11, "graphnet-models-task-package"]], "graphnet.models.task.reconstruction module": [[11, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task module": [[11, "module-graphnet.models.task.task"]], "graphnet.models.training package": [[12, "graphnet-models-training-package"]], "graphnet.models.training.callbacks module": [[12, "module-graphnet.models.training.callbacks"]], "graphnet.models.training.utils module": [[12, "module-graphnet.models.training.utils"]], "graphnet.utilities package": [[13, "graphnet-utilities-package"]], "graphnet.utilities.filesys module": [[13, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports module": [[13, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging module": [[13, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths module": [[13, "module-graphnet.utilities.maths"]], "Welcome to gnn-reco\u2019s documentation!": [[14, "welcome-to-gnn-reco-s-documentation"]], "Indices and tables": [[14, "indices-and-tables"]], "src": [[15, "src"]]}, "indexentries": {"graphnet": [[0, "module-graphnet"]], "module": [[0, "module-graphnet"], [1, "module-graphnet.components"], [1, "module-graphnet.components.layers"], [1, "module-graphnet.components.loss_functions"], [1, "module-graphnet.components.pool"], [1, "module-graphnet.components.utils"], [2, "module-graphnet.data"], [2, "module-graphnet.data.constants"], [2, "module-graphnet.data.dataconverter"], [2, "module-graphnet.data.dataset"], [2, "module-graphnet.data.pipeline"], [3, "module-graphnet.data.extractors"], [3, "module-graphnet.data.extractors.i3extractor"], [3, "module-graphnet.data.extractors.i3featureextractor"], [3, "module-graphnet.data.extractors.i3genericextractor"], [3, "module-graphnet.data.extractors.i3retroextractor"], [3, "module-graphnet.data.extractors.i3truthextractor"], [4, "module-graphnet.data.extractors.utilities"], [4, "module-graphnet.data.extractors.utilities.collections"], [4, "module-graphnet.data.extractors.utilities.frames"], [4, "module-graphnet.data.extractors.utilities.types"], [5, "module-graphnet.data.parquet"], [5, "module-graphnet.data.parquet.parquet_dataconverter"], [5, "module-graphnet.data.parquet.parquet_dataset"], [6, "module-graphnet.data.sqlite"], [6, "module-graphnet.data.sqlite.sqlite_dataconverter"], [6, "module-graphnet.data.sqlite.sqlite_dataset"], [6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [6, "module-graphnet.data.sqlite.sqlite_selection"], [6, "module-graphnet.data.sqlite.sqlite_utilities"], [7, "module-graphnet.data.utilities"], [7, "module-graphnet.data.utilities.random"], [8, "module-graphnet.models"], [8, "module-graphnet.models.coarsening"], [8, "module-graphnet.models.graph_builders"], [8, "module-graphnet.models.model"], [8, "module-graphnet.models.utils"], [9, "module-graphnet.models.detector"], [9, "module-graphnet.models.detector.detector"], [9, "module-graphnet.models.detector.icecube"], [9, "module-graphnet.models.detector.prototype"], [10, "module-graphnet.models.gnn"], [10, "module-graphnet.models.gnn.convnet"], [10, "module-graphnet.models.gnn.dynedge"], [10, "module-graphnet.models.gnn.gnn"], [11, "module-graphnet.models.task"], [11, "module-graphnet.models.task.reconstruction"], [11, "module-graphnet.models.task.task"], [12, "module-graphnet.models.training"], [12, "module-graphnet.models.training.callbacks"], [12, "module-graphnet.models.training.utils"], [13, "module-graphnet.utilities"], [13, "module-graphnet.utilities.filesys"], [13, "module-graphnet.utilities.imports"], [13, "module-graphnet.utilities.logging"], [13, "module-graphnet.utilities.maths"]], "binarycrossentropyloss (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.BinaryCrossEntropyLoss"]], "dynedgeconv (class in graphnet.components.layers)": [[1, "graphnet.components.layers.DynEdgeConv"]], "euclideandistanceloss (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.LossFunction"]], "mseloss (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.MSELoss"]], "rmseloss (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisherloss (class in graphnet.components.loss_functions)": [[1, "graphnet.components.loss_functions.VonMisesFisherLoss"]], "_evaluate() (graphnet.components.loss_functions.vonmisesfisherloss method)": [[1, "graphnet.components.loss_functions.VonMisesFisherLoss._evaluate"]], "_forward() (graphnet.components.loss_functions.euclideandistanceloss method)": [[1, "graphnet.components.loss_functions.EuclideanDistanceLoss._forward"]], "_forward() (graphnet.components.loss_functions.logcoshloss method)": [[1, "graphnet.components.loss_functions.LogCoshLoss._forward"]], "_forward() (graphnet.components.loss_functions.lossfunction method)": [[1, "graphnet.components.loss_functions.LossFunction._forward"]], "_forward() (graphnet.components.loss_functions.mseloss method)": [[1, "graphnet.components.loss_functions.MSELoss._forward"]], "_forward() (graphnet.components.loss_functions.rmseloss method)": [[1, "graphnet.components.loss_functions.RMSELoss._forward"]], "_forward() (graphnet.components.loss_functions.vonmisesfisher2dloss method)": [[1, "graphnet.components.loss_functions.VonMisesFisher2DLoss._forward"]], "_group_identical() (in module graphnet.components.pool)": [[1, "graphnet.components.pool._group_identical"]], "_log_cosh() (graphnet.components.loss_functions.logcoshloss class method)": [[1, "graphnet.components.loss_functions.LogCoshLoss._log_cosh"]], "backward() (graphnet.components.loss_functions.logcmk static method)": [[1, "graphnet.components.loss_functions.LogCMK.backward"]], "check_db_size() (in module graphnet.components.utils)": [[1, "graphnet.components.utils.check_db_size"]], "fit_scaler() (in module graphnet.components.utils)": [[1, "graphnet.components.utils.fit_scaler"]], "forward() (graphnet.components.layers.dynedgeconv method)": [[1, "graphnet.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.components.loss_functions.logcmk static method)": [[1, "graphnet.components.loss_functions.LogCMK.forward"]], "forward() (graphnet.components.loss_functions.lossfunction method)": [[1, "graphnet.components.loss_functions.LossFunction.forward"]], "graphnet.components": [[1, "module-graphnet.components"]], "graphnet.components.layers": [[1, "module-graphnet.components.layers"]], "graphnet.components.loss_functions": [[1, "module-graphnet.components.loss_functions"]], "graphnet.components.pool": [[1, "module-graphnet.components.pool"]], "graphnet.components.utils": [[1, "module-graphnet.components.utils"]], "group_by() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.group_pulses_to_pmt"]], "log_cmk() (graphnet.components.loss_functions.vonmisesfisherloss class method)": [[1, "graphnet.components.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.components.loss_functions.vonmisesfisherloss class method)": [[1, "graphnet.components.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.components.loss_functions.vonmisesfisherloss class method)": [[1, "graphnet.components.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "min_pool() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.min_pool"]], "min_pool_x() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.min_pool_x"]], "reduction (graphnet.components.loss_functions.binarycrossentropyloss attribute)": [[1, "graphnet.components.loss_functions.BinaryCrossEntropyLoss.reduction"]], "reduction (graphnet.components.loss_functions.euclideandistanceloss attribute)": [[1, "graphnet.components.loss_functions.EuclideanDistanceLoss.reduction"]], "reduction (graphnet.components.loss_functions.logcoshloss attribute)": [[1, "graphnet.components.loss_functions.LogCoshLoss.reduction"]], "reduction (graphnet.components.loss_functions.lossfunction attribute)": [[1, "graphnet.components.loss_functions.LossFunction.reduction"]], "reduction (graphnet.components.loss_functions.mseloss attribute)": [[1, "graphnet.components.loss_functions.MSELoss.reduction"]], "reduction (graphnet.components.loss_functions.rmseloss attribute)": [[1, "graphnet.components.loss_functions.RMSELoss.reduction"]], "reduction (graphnet.components.loss_functions.vonmisesfisher2dloss attribute)": [[1, "graphnet.components.loss_functions.VonMisesFisher2DLoss.reduction"]], "reduction (graphnet.components.loss_functions.vonmisesfisherloss attribute)": [[1, "graphnet.components.loss_functions.VonMisesFisherLoss.reduction"]], "std_pool() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.std_pool"]], "std_pool_x() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.components.pool)": [[1, "graphnet.components.pool.sum_pool_x"]], "training (graphnet.components.loss_functions.mseloss attribute)": [[1, "graphnet.components.loss_functions.MSELoss.training"]], "training (graphnet.components.loss_functions.rmseloss attribute)": [[1, "graphnet.components.loss_functions.RMSELoss.training"]], "training (graphnet.components.loss_functions.vonmisesfisher2dloss attribute)": [[1, "graphnet.components.loss_functions.VonMisesFisher2DLoss.training"]], "training (graphnet.components.loss_functions.vonmisesfisherloss attribute)": [[1, "graphnet.components.loss_functions.VonMisesFisherLoss.training"]], "weight (graphnet.components.loss_functions.mseloss attribute)": [[1, "graphnet.components.loss_functions.MSELoss.weight"]], "weight (graphnet.components.loss_functions.rmseloss attribute)": [[1, "graphnet.components.loss_functions.RMSELoss.weight"]], "weight (graphnet.components.loss_functions.vonmisesfisher2dloss attribute)": [[1, "graphnet.components.loss_functions.VonMisesFisher2DLoss.weight"]], "weight (graphnet.components.loss_functions.vonmisesfisherloss attribute)": [[1, "graphnet.components.loss_functions.VonMisesFisherLoss.weight"]], "columnmissingexception": [[2, "graphnet.data.dataset.ColumnMissingException"]], "deepcore (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.DEEPCORE"]], "dataconverter (class in graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.DataConverter"]], "dataset (class in graphnet.data.dataset)": [[2, "graphnet.data.dataset.Dataset"]], "features (class in graphnet.data.constants)": [[2, "graphnet.data.constants.FEATURES"]], "fileset (class in graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.FileSet"]], "icecube86 (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.ICECUBE86"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[2, "graphnet.data.pipeline.InSQLitePipeline"]], "truth (class in graphnet.data.constants)": [[2, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.UPGRADE"]], "__call__() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.__call__"]], "__call__() (graphnet.data.pipeline.insqlitepipeline method)": [[2, "graphnet.data.pipeline.InSQLitePipeline.__call__"]], "__init__() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.__init__"]], "__init__() (graphnet.data.pipeline.insqlitepipeline method)": [[2, "graphnet.data.pipeline.InSQLitePipeline.__init__"]], "_check_missing_columns() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._check_missing_columns"]], "_create_graph() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._create_graph"]], "_create_table() (graphnet.data.pipeline.insqlitepipeline method)": [[2, "graphnet.data.pipeline.InSQLitePipeline._create_table"]], "_extract_data() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter._extract_data"]], "_get_all_indices() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._get_all_indices"]], "_get_dbang_label() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._get_dbang_label"]], "_get_labels() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._get_labels"]], "_init() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._init"]], "_iterate_over_batches_of_files() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter._iterate_over_batches_of_files"]], "_post_init() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._post_init"]], "_query() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._query"]], "_query_table() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._query_table"]], "_remove_missing_columns() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._remove_missing_columns"]], "_save_filenames() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter._save_filenames"]], "_update_shared_variables() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter._update_shared_variables"]], "add_label() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.add_label"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[2, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[2, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data": [[2, "module-graphnet.data"]], "graphnet.data.constants": [[2, "module-graphnet.data.constants"]], "graphnet.data.dataconverter": [[2, "module-graphnet.data.dataconverter"]], "graphnet.data.dataset": [[2, "module-graphnet.data.dataset"]], "graphnet.data.pipeline": [[2, "module-graphnet.data.pipeline"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[2, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.save_data"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "__call__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecube86 method)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecubeupgrade method)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3pulsenoisetruthflagicecubeupgrade method)": [[3, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__call__"]], "__init__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__init__"]], "_cast_mc_tree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_mc_tree"]], "_cast_triggers() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_triggers"]], "_extract_per_pulse_attribute() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_per_pulse_attribute"]], "_extract_pulse_series_map() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_pulse_series_map"]], "_find_data_type() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._find_data_type"]], "_flatten_result() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result"]], "_flatten_result_mctree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result_mctree"]], "_get_keys() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._get_keys"]], "_get_primary_particle_interaction_type_and_elasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_particle_interaction_type_and_elasticity"]], "_get_primary_track_energy_and_inelasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_track_energy_and_inelasticity"]], "_load_gcd_data() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor._load_gcd_data"]], "_muon_stopped() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._muon_stopped"]], "_try_get_key() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor._try_get_key"]], "graphnet.data.extractors": [[3, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor": [[3, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor": [[3, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor": [[3, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3retroextractor": [[3, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3truthextractor": [[3, "module-graphnet.data.extractors.i3truthextractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.get_member_variables"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities": [[4, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[4, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[4, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[4, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_type"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet": [[5, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[5, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[5, "module-graphnet.data.parquet.parquet_dataset"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "_attach_index() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._attach_index"]], "_close_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._close_connection"]], "_create_table() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._create_table"]], "_establish_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._establish_connection"]], "_extract_everything() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_everything"]], "_extract_table_names() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_table_names"]], "_merge_temporary_databases() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._merge_temporary_databases"]], "_query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._query_table"]], "_submit_to_database() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._submit_to_database"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite": [[6, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[6, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[6, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[6, "module-graphnet.data.sqlite.sqlite_utilities"]], "is_pulsemap_check() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.is_pulsemap_check"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[7, "module-graphnet.data.utilities"]], "graphnet.data.utilities.random": [[7, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[7, "graphnet.data.utilities.random.pairwise_shuffle"]], "coarsening (class in graphnet.models.coarsening)": [[8, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[8, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[8, "graphnet.models.coarsening.DOMCoarsening"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[8, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[8, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[8, "graphnet.models.graph_builders.KNNGraphBuilder"]], "loopbasedcoarsening (class in graphnet.models.coarsening)": [[8, "graphnet.models.coarsening.LoopBasedCoarsening"]], "model (class in graphnet.models.model)": [[8, "graphnet.models.model.Model"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[8, "graphnet.models.graph_builders.RadialGraphBuilder"]], "__call__() (graphnet.models.coarsening.coarsening method)": [[8, "graphnet.models.coarsening.Coarsening.__call__"]], "__call__() (graphnet.models.coarsening.loopbasedcoarsening method)": [[8, "graphnet.models.coarsening.LoopBasedCoarsening.__call__"]], "_additional_features() (graphnet.models.coarsening.coarsening method)": [[8, "graphnet.models.coarsening.Coarsening._additional_features"]], "_additional_features() (graphnet.models.coarsening.customdomcoarsening method)": [[8, "graphnet.models.coarsening.CustomDOMCoarsening._additional_features"]], "_perform_clustering() (graphnet.models.coarsening.coarsening method)": [[8, "graphnet.models.coarsening.Coarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domcoarsening method)": [[8, "graphnet.models.coarsening.DOMCoarsening._perform_clustering"]], "_transfer_attributes() (graphnet.models.coarsening.coarsening method)": [[8, "graphnet.models.coarsening.Coarsening._transfer_attributes"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[8, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[8, "graphnet.models.utils.calculate_xyzt_homophily"]], "compute_loss() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.compute_loss"]], "configure_optimizers() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.configure_optimizers"]], "forward() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.forward"]], "graphnet.models": [[8, "module-graphnet.models"]], "graphnet.models.coarsening": [[8, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders": [[8, "module-graphnet.models.graph_builders"]], "graphnet.models.model": [[8, "module-graphnet.models.model"]], "graphnet.models.utils": [[8, "module-graphnet.models.utils"]], "inference() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.inference"]], "knn_graph_batch() (in module graphnet.models.utils)": [[8, "graphnet.models.utils.knn_graph_batch"]], "load() (graphnet.models.model.model class method)": [[8, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.load_state_dict"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[8, "graphnet.models.coarsening.Coarsening.reduce_options"]], "save() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.save_state_dict"]], "shared_step() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.shared_step"]], "train() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.train"]], "training (graphnet.models.model.model attribute)": [[8, "graphnet.models.model.Model.training"]], "training_step() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.training_step"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[8, "graphnet.models.coarsening.unbatch_edge_index"]], "validation_step() (graphnet.models.model.model method)": [[8, "graphnet.models.model.Model.validation_step"]], "detector (class in graphnet.models.detector.detector)": [[9, "graphnet.models.detector.detector.Detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[9, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[9, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "prototype (class in graphnet.models.detector.prototype)": [[9, "graphnet.models.detector.prototype.Prototype"]], "_forward() (graphnet.models.detector.detector.detector method)": [[9, "graphnet.models.detector.detector.Detector._forward"]], "_forward() (graphnet.models.detector.icecube.icecube86 method)": [[9, "graphnet.models.detector.icecube.IceCube86._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade method)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade_v2 method)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade_V2._forward"]], "_forward() (graphnet.models.detector.prototype.prototype method)": [[9, "graphnet.models.detector.prototype.Prototype._forward"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.icecube.icecube86 attribute)": [[9, "graphnet.models.detector.icecube.IceCube86.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[9, "graphnet.models.detector.icecube.IceCubeDeepCore.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.prototype.prototype attribute)": [[9, "graphnet.models.detector.prototype.Prototype.allow_zero_length_dataloader_with_multiple_devices"]], "features (graphnet.models.detector.detector.detector property)": [[9, "graphnet.models.detector.detector.Detector.features"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[9, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "features (graphnet.models.detector.prototype.prototype attribute)": [[9, "graphnet.models.detector.prototype.Prototype.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[9, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector": [[9, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[9, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[9, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prototype": [[9, "module-graphnet.models.detector.prototype"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[9, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[9, "graphnet.models.detector.detector.Detector.nb_outputs"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "precision (graphnet.models.detector.icecube.icecube86 attribute)": [[9, "graphnet.models.detector.icecube.IceCube86.precision"]], "precision (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[9, "graphnet.models.detector.icecube.IceCubeDeepCore.precision"]], "precision (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade.precision"]], "precision (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.precision"]], "precision (graphnet.models.detector.prototype.prototype attribute)": [[9, "graphnet.models.detector.prototype.Prototype.precision"]], "prepare_data_per_node (graphnet.models.detector.icecube.icecube86 attribute)": [[9, "graphnet.models.detector.icecube.IceCube86.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[9, "graphnet.models.detector.icecube.IceCubeDeepCore.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.prototype.prototype attribute)": [[9, "graphnet.models.detector.prototype.Prototype.prepare_data_per_node"]], "training (graphnet.models.detector.detector.detector attribute)": [[9, "graphnet.models.detector.detector.Detector.training"]], "training (graphnet.models.detector.icecube.icecube86 attribute)": [[9, "graphnet.models.detector.icecube.IceCube86.training"]], "training (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[9, "graphnet.models.detector.icecube.IceCubeDeepCore.training"]], "training (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade.training"]], "training (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[9, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.training"]], "training (graphnet.models.detector.prototype.prototype attribute)": [[9, "graphnet.models.detector.prototype.Prototype.training"]], "convnet (class in graphnet.models.gnn.convnet)": [[10, "graphnet.models.gnn.convnet.ConvNet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[10, "graphnet.models.gnn.dynedge.DynEdge"]], "dynedge_v2 (class in graphnet.models.gnn.dynedge)": [[10, "graphnet.models.gnn.dynedge.DynEdge_V2"]], "dynedge_v3 (class in graphnet.models.gnn.dynedge)": [[10, "graphnet.models.gnn.dynedge.DynEdge_V3"]], "gnn (class in graphnet.models.gnn.gnn)": [[10, "graphnet.models.gnn.gnn.GNN"]], "__init__() (graphnet.models.gnn.convnet.convnet method)": [[10, "graphnet.models.gnn.convnet.ConvNet.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge method)": [[10, "graphnet.models.gnn.dynedge.DynEdge.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge_v2 method)": [[10, "graphnet.models.gnn.dynedge.DynEdge_V2.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge_v3 method)": [[10, "graphnet.models.gnn.dynedge.DynEdge_V3.__init__"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[10, "graphnet.models.gnn.convnet.ConvNet.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[10, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge_v2 method)": [[10, "graphnet.models.gnn.dynedge.DynEdge_V2.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge_v3 method)": [[10, "graphnet.models.gnn.dynedge.DynEdge_V3.forward"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[10, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn": [[10, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[10, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[10, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.gnn": [[10, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[10, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[10, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "training (graphnet.models.gnn.convnet.convnet attribute)": [[10, "graphnet.models.gnn.convnet.ConvNet.training"]], "training (graphnet.models.gnn.dynedge.dynedge attribute)": [[10, "graphnet.models.gnn.dynedge.DynEdge.training"]], "training (graphnet.models.gnn.dynedge.dynedge_v2 attribute)": [[10, "graphnet.models.gnn.dynedge.DynEdge_V2.training"]], "training (graphnet.models.gnn.dynedge.dynedge_v3 attribute)": [[10, "graphnet.models.gnn.dynedge.DynEdge_V3.training"]], "training (graphnet.models.gnn.gnn.gnn attribute)": [[10, "graphnet.models.gnn.gnn.GNN.training"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "binaryclassificationtask (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "passoutput1 (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.PassOutput1"]], "passoutput2 (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.PassOutput2"]], "passoutput3 (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.PassOutput3"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.PositionReconstruction"]], "task (class in graphnet.models.task.task)": [[11, "graphnet.models.task.task.Task"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[11, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "_forward() (graphnet.models.task.task.task method)": [[11, "graphnet.models.task.task.Task._forward"]], "_validate_and_set_transforms() (graphnet.models.task.task.task method)": [[11, "graphnet.models.task.task.Task._validate_and_set_transforms"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[11, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[11, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.allow_zero_length_dataloader_with_multiple_devices"]], "compute_loss() (graphnet.models.task.task.task method)": [[11, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[11, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task": [[11, "module-graphnet.models.task"]], "graphnet.models.task.reconstruction": [[11, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[11, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[11, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[11, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.binaryclassificationtask attribute)": [[11, "graphnet.models.task.reconstruction.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.binaryclassificationtasklogits attribute)": [[11, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[11, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.passoutput1 attribute)": [[11, "graphnet.models.task.reconstruction.PassOutput1.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.passoutput2 attribute)": [[11, "graphnet.models.task.reconstruction.PassOutput2.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.passoutput3 attribute)": [[11, "graphnet.models.task.reconstruction.PassOutput3.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[11, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[11, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[11, "graphnet.models.task.task.Task.nb_inputs"]], "precision (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[11, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.precision"]], "precision (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[11, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.precision"]], "prepare_data_per_node (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[11, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[11, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.prepare_data_per_node"]], "train_eval() (graphnet.models.task.task.task method)": [[11, "graphnet.models.task.task.Task.train_eval"]], "training (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.AzimuthReconstruction.training"]], "training (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[11, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.training"]], "training (graphnet.models.task.reconstruction.binaryclassificationtask attribute)": [[11, "graphnet.models.task.reconstruction.BinaryClassificationTask.training"]], "training (graphnet.models.task.reconstruction.binaryclassificationtasklogits attribute)": [[11, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits.training"]], "training (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.EnergyReconstruction.training"]], "training (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[11, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.training"]], "training (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.InelasticityReconstruction.training"]], "training (graphnet.models.task.reconstruction.passoutput1 attribute)": [[11, "graphnet.models.task.reconstruction.PassOutput1.training"]], "training (graphnet.models.task.reconstruction.passoutput2 attribute)": [[11, "graphnet.models.task.reconstruction.PassOutput2.training"]], "training (graphnet.models.task.reconstruction.passoutput3 attribute)": [[11, "graphnet.models.task.reconstruction.PassOutput3.training"]], "training (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.PositionReconstruction.training"]], "training (graphnet.models.task.reconstruction.timereconstruction attribute)": [[11, "graphnet.models.task.reconstruction.TimeReconstruction.training"]], "training (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.VertexReconstruction.training"]], "training (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[11, "graphnet.models.task.reconstruction.ZenithReconstruction.training"]], "training (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[11, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.training"]], "training (graphnet.models.task.task.task attribute)": [[11, "graphnet.models.task.task.Task.training"]], "piecewiselinearlr (class in graphnet.models.training.callbacks)": [[12, "graphnet.models.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.models.training.callbacks)": [[12, "graphnet.models.training.callbacks.ProgressBar"]], "get_lr() (graphnet.models.training.callbacks.piecewiselinearlr method)": [[12, "graphnet.models.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.models.training.callbacks.progressbar method)": [[12, "graphnet.models.training.callbacks.ProgressBar.get_metrics"]], "get_predictions() (in module graphnet.models.training.utils)": [[12, "graphnet.models.training.utils.get_predictions"]], "graphnet.models.training": [[12, "module-graphnet.models.training"]], "graphnet.models.training.callbacks": [[12, "module-graphnet.models.training.callbacks"]], "graphnet.models.training.utils": [[12, "module-graphnet.models.training.utils"]], "init_predict_tqdm() (graphnet.models.training.callbacks.progressbar method)": [[12, "graphnet.models.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.models.training.callbacks.progressbar method)": [[12, "graphnet.models.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.models.training.callbacks.progressbar method)": [[12, "graphnet.models.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.models.training.callbacks.progressbar method)": [[12, "graphnet.models.training.callbacks.ProgressBar.init_validation_tqdm"]], "make_dataloader() (in module graphnet.models.training.utils)": [[12, "graphnet.models.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.models.training.utils)": [[12, "graphnet.models.training.utils.make_train_validation_dataloader"]], "on_train_epoch_end() (graphnet.models.training.callbacks.progressbar method)": [[12, "graphnet.models.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.models.training.callbacks.progressbar method)": [[12, "graphnet.models.training.callbacks.ProgressBar.on_train_epoch_start"]], "save_results() (in module graphnet.models.training.utils)": [[12, "graphnet.models.training.utils.save_results"]], "loggermixin (class in graphnet.utilities.logging)": [[13, "graphnet.utilities.logging.LoggerMixin"]], "repeatfilter (class in graphnet.utilities.logging)": [[13, "graphnet.utilities.logging.RepeatFilter"]], "eps_like() (in module graphnet.utilities.maths)": [[13, "graphnet.utilities.maths.eps_like"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[13, "graphnet.utilities.logging.RepeatFilter.filter"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[13, "graphnet.utilities.filesys.find_i3_files"]], "get_formatters() (in module graphnet.utilities.logging)": [[13, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[13, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities": [[13, "module-graphnet.utilities"]], "graphnet.utilities.filesys": [[13, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports": [[13, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging": [[13, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths": [[13, "module-graphnet.utilities.maths"]], "has_extension() (in module graphnet.utilities.filesys)": [[13, "graphnet.utilities.filesys.has_extension"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[13, "graphnet.utilities.imports.has_icecube_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[13, "graphnet.utilities.imports.has_torch_package"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[13, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[13, "graphnet.utilities.filesys.is_i3_file"]], "logger (graphnet.utilities.logging.loggermixin property)": [[13, "graphnet.utilities.logging.LoggerMixin.logger"]], "requires_icecube() (in module graphnet.utilities.imports)": [[13, "graphnet.utilities.imports.requires_icecube"]], "set_logging_level() (in module graphnet.utilities.logging)": [[13, "graphnet.utilities.logging.set_logging_level"]], "warn_once() (in module graphnet.utilities.logging)": [[13, "graphnet.utilities.logging.warn_once"]]}})