Search.setIndex({"docnames": ["graphnet", "graphnet.data", "graphnet.data.extractors", "graphnet.data.extractors.utilities", "graphnet.data.parquet", "graphnet.data.sqlite", "graphnet.data.utilities", "graphnet.deployment", "graphnet.deployment.i3modules", "graphnet.models", "graphnet.models.components", "graphnet.models.detector", "graphnet.models.gnn", "graphnet.models.task", "graphnet.training", "graphnet.utilities", "index", "modules"], "filenames": ["graphnet.rst", "graphnet.data.rst", "graphnet.data.extractors.rst", "graphnet.data.extractors.utilities.rst", "graphnet.data.parquet.rst", "graphnet.data.sqlite.rst", "graphnet.data.utilities.rst", "graphnet.deployment.rst", "graphnet.deployment.i3modules.rst", "graphnet.models.rst", "graphnet.models.components.rst", "graphnet.models.detector.rst", "graphnet.models.gnn.rst", "graphnet.models.task.rst", "graphnet.training.rst", "graphnet.utilities.rst", "index.rst", "modules.rst"], "titles": ["graphnet package", "graphnet.data package", "graphnet.data.extractors package", "graphnet.data.extractors.utilities package", "graphnet.data.parquet package", "graphnet.data.sqlite package", "graphnet.data.utilities package", "graphnet.deployment package", "graphnet.deployment.i3modules package", "graphnet.models package", "graphnet.models.components package", "graphnet.models.detector package", "graphnet.models.gnn package", "graphnet.models.task package", "graphnet.training package", "graphnet.utilities package", "Welcome to gnn-reco\u2019s documentation!", "src"], "terms": {"data": [0, 9, 10, 11, 12, 13, 14, 15, 17], "extractor": [0, 1, 4, 5], "submodul": [0, 7, 17], "i3extractor": [0, 1, 4, 5], "i3featureextractor": [0, 1, 5], "i3genericextractor": [0, 1, 5], "i3hybridrecoextractor": [0, 1], "i3retroextractor": [0, 1], "i3splinempeextractor": [0, 1], "i3truthextractor": [0, 1], "i3tumextractor": [0, 1], "parquet": [0, 1, 6], "parquet_dataconvert": [0, 1], "parquet_dataset": [0, 1], "sqlite": [0, 1, 6], "sqlite_dataconvert": [0, 1], "sqlite_dataset": [0, 1], "sqlite_dataset_perturb": [0, 1], "sqlite_select": [0, 1], "sqlite_util": [0, 1], "util": [0, 1, 2, 5, 17], "parquet_to_sqlit": [0, 1], "random": [0, 1, 5], "constant": [0, 17], "featur": [0, 1, 2, 4, 5, 9, 10, 11, 12, 14], "deepcor": [0, 1, 11], "icecube86": [0, 1, 9, 11], "upgrad": [0, 1, 11], "truth": [0, 1, 2, 4, 5, 10, 14], "dataconvert": [0, 4, 5, 17], "__call__": [0, 1, 2, 9, 14], "__init__": [0, 1, 2, 9, 12, 14], "_extract_data": [0, 1], "_iterate_over_batches_of_fil": [0, 1], "_save_filenam": [0, 1], "_update_shared_vari": [0, 1], "execut": [0, 1, 5], "file_suffix": [0, 1, 4, 5], "get_map_funct": [0, 1], "merge_fil": [0, 1, 4, 5], "save_data": [0, 1, 4, 5], "fileset": [0, 1], "gcd_file": [0, 1, 2], "i3_fil": [0, 1, 2], "cache_output_fil": [0, 1], "init_global_index": [0, 1], "dataset": [0, 4, 5, 9, 17], "columnmissingexcept": [0, 1], "_check_missing_column": [0, 1], "_create_graph": [0, 1], "_get_all_indic": [0, 1], "_get_dbang_label": [0, 1], "_get_label": [0, 1], "_init": [0, 1], "_post_init": [0, 1], "_queri": [0, 1], "_query_t": [0, 1, 5], "_remove_missing_column": [0, 1], "add_label": [0, 1], "pipelin": [0, 17], "insqlitepipelin": [0, 1], "_create_t": [0, 1, 5], "deploy": [0, 17], "i3modul": [0, 7], "graphnet_modul": [0, 7], "model": [0, 2, 5, 14, 17], "compon": [0, 9], "layer": [0, 9, 12, 13], "pool": [0, 1, 9, 12], "detector": [0, 2, 9], "icecub": [0, 3, 9, 15], "prototyp": [0, 9], "gnn": [0, 1, 2, 9], "convnet": [0, 9], "dynedg": [0, 9], "dynedge_jinst": [0, 9], "task": [0, 9], "reconstruct": [0, 1, 9], "coarsen": [0, 10, 17], "_additional_featur": [0, 9], "_perform_clust": [0, 9], "_transfer_attribut": [0, 9], "forward": [0, 9, 10, 11, 12, 13, 14], "reduce_opt": [0, 9], "train": [0, 5, 9, 11, 12, 13, 17], "customdomcoarsen": [0, 9], "allow_zero_length_dataloader_with_multiple_devic": [0, 9, 11, 12, 13, 14], "precis": [0, 9, 11, 12, 13, 14], "prepare_data_per_nod": [0, 9, 11, 12, 13, 14], "domandtimewindowcoarsen": [0, 9], "domcoarsen": [0, 9], "loopbasedcoarsen": [0, 9], "unbatch_edge_index": [0, 9], "config": [0, 17], "modelconfig": [0, 9], "_as_dict": [0, 9], "_serialis": [0, 9], "argument": [0, 6, 9, 13, 14], "class_nam": [0, 9], "construct_model": [0, 9], "dump": [0, 9], "load": [0, 2, 6, 9], "get_namespace_class": [0, 9], "is_graphnet_class": [0, 9], "is_graphnet_modul": [0, 9], "save_config": [0, 9], "traverse_and_appli": [0, 9], "graph_build": [0, 11, 17], "euclideangraphbuild": [0, 9], "graphbuild": [0, 9, 11], "knngraphbuild": [0, 9], "radialgraphbuild": [0, 9], "from_config": [0, 9], "load_state_dict": [0, 9], "save": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15], "save_state_dict": [0, 9], "standard_model": [0, 17], "standardmodel": [0, 9], "compute_loss": [0, 9, 13], "configure_optim": [0, 9], "infer": [0, 1, 9, 13], "shared_step": [0, 9], "training_step": [0, 9], "validation_step": [0, 9], "calculate_distance_matrix": [0, 9], "calculate_xyzt_homophili": [0, 9], "knn_graph_batch": [0, 9], "callback": [0, 9, 17], "piecewiselinearlr": [0, 14], "get_lr": [0, 14], "progressbar": [0, 14], "get_metr": [0, 14], "init_predict_tqdm": [0, 14], "init_test_tqdm": [0, 14], "init_train_tqdm": [0, 14], "init_validation_tqdm": [0, 14], "on_train_epoch_end": [0, 14], "on_train_epoch_start": [0, 14], "label": [0, 1, 5, 12, 17], "direct": [0, 13, 14], "loss_funct": [0, 13, 17], "binarycrossentropyloss": [0, 14], "euclideandistanceloss": [0, 14], "_forward": [0, 9, 11, 13, 14], "logcmk": [0, 14], "backward": [0, 9, 14], "logcoshloss": [0, 14], "_log_cosh": [0, 14], "lossfunct": [0, 13, 14], "mseloss": [0, 14], "rmseloss": [0, 14], "vonmisesfisher2dloss": [0, 14], "vonmisesfisher3dloss": [0, 14], "vonmisesfisherloss": [0, 14], "_evalu": [0, 14], "log_cmk": [0, 14], "log_cmk_approx": [0, 14], "log_cmk_exact": [0, 14], "get_predict": [0, 14], "make_dataload": [0, 14], "make_train_validation_dataload": [0, 14], "save_result": [0, 14], "weight_fit": [0, 17], "filesi": [0, 17], "find_i3_fil": [0, 15], "has_extens": [0, 15], "is_gcd_fil": [0, 15], "is_i3_fil": [0, 15], "import": [0, 2, 5, 17], "has_icecube_packag": [0, 15], "has_torch_packag": [0, 15], "requires_icecub": [0, 15], "log": [0, 9, 13, 14, 17], "loggermixin": [0, 1, 2, 6, 9, 14, 15], "_get_logg": [0, 15], "critic": [0, 15], "debug": [0, 15], "error": [0, 1, 2, 5, 14, 15], "info": [0, 15], "warn": [0, 9, 15], "repeatfilt": [0, 15], "filter": [0, 15], "get_formatt": [0, 15], "get_logg": [0, 15], "set_logging_level": [0, 15], "warn_onc": [0, 15], "math": [0, 17], "eps_lik": [0, 15], "graph": [0, 1, 9, 10, 11, 12, 14], "neural": 0, "network": 0, "neutrino": [0, 2, 5, 14], "telescop": 0, "event": [0, 1, 5, 6, 9, 10, 14], "i": [0, 1, 2, 3, 5, 6, 9, 10, 12, 13, 14, 15], "python": [0, 1, 2, 3], "provid": [0, 2, 14], "conveni": 0, "common": [0, 9, 15], "collabor": 0, "develop": 0, "tool": 0, "build": [0, 9, 11], "solv": 0, "physic": [0, 2, 3, 5, 13], "experi": [0, 9], "It": [0, 3, 9, 14], "aim": 0, "physicist": 0, "leverag": 0, "advanc": [0, 10], "machin": 0, "learn": [0, 9, 14], "ml": 0, "without": [0, 9, 13, 14], "have": [0, 1, 2, 9, 10, 13, 14], "expert": 0, "themselv": [0, 9], "therebi": [0, 5, 9], "acceler": 0, "scientif": 0, "area": 0, "phyic": 0, "design": 0, "principl": 0, "end": [0, 1, 9, 14], "all": [0, 1, 2, 4, 5, 9, 10, 11, 12, 13, 14, 15], "streamlin": 0, "process": [0, 1, 5, 11, 12, 14], "ingest": [0, 11], "transform": [0, 10, 13], "optimis": 0, "deploi": 0, "them": [0, 1, 3, 12, 13], "chain": [0, 9], "extens": [0, 15], "basic": 0, "block": 0, "improv": [0, 9], "classif": [0, 1, 13], "across": [0, 1, 3, 9, 10, 14, 15], "variou": 0, "configur": [0, 9, 15], "can": [0, 2, 6, 9, 10, 14], "easili": 0, "extend": 0, "new": 0, "architectur": [0, 9, 12], "main": [0, 1, 9], "convert": [0, 1, 3, 5, 6], "from": [0, 1, 2, 3, 4, 5, 9, 10, 12, 13, 14], "domain": 0, "specif": [0, 1, 3, 4, 5, 9, 10, 11, 14], "format": [0, 1, 2, 3, 9], "i3": [0, 1, 2, 3, 6, 15], "more": [0, 1, 6, 9], "index": [0, 1, 3, 5, 9, 10, 14, 16], "e": [0, 1, 2, 3, 5, 9, 10, 12, 13, 14], "g": [0, 1, 2, 3, 5, 9, 10, 13, 14], "suitabl": 0, "intermedi": [0, 1, 4, 5, 12], "file": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15], "plug": 0, "plai": 0, "abstract": [0, 1, 2, 9, 11, 12, 13, 14], "awai": 0, "implement": [0, 1, 4, 5, 9, 12, 14], "detail": [0, 9], "onli": [0, 1, 9, 10, 13, 15], "expos": [0, 15], "ar": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14], "most": [0, 9], "relev": [0, 2, 3, 5, 6, 15], "physicst": 0, "what": [0, 9, 12], "us": [0, 1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15], "includ": [0, 5, 9, 14], "docker": 0, "imag": [0, 5, 9], "run": [0, 1, 6, 9], "containeris": 0, "fashion": 0, "collect": [1, 2, 14, 15], "frame": [1, 2, 5], "type": [1, 2, 5, 6, 9, 10, 11, 12, 14, 15], "_load_gcd_data": [1, 2], "name": [1, 2, 3, 4, 5, 9, 13, 14], "set_fil": [1, 2], "i3extractorcollect": [1, 2], "i3featureextractoricecube86": [1, 2], "i3featureextractoricecubedeepcor": [1, 2], "i3featureextractoricecubeupgrad": [1, 2], "i3pulsenoisetruthflagicecubeupgrad": [1, 2], "_cast_mc_tre": [1, 2], "_cast_trigg": [1, 2], "_extract_per_pulse_attribut": [1, 2], "_extract_pulse_series_map": [1, 2], "_flatten_result": [1, 2], "_flatten_result_mctre": [1, 2], "_get_kei": [1, 2], "i3galacticplanehybridrecoextractor": [1, 2], "_try_get_kei": [1, 2], "i3splinempeicextractor": [1, 2], "_find_data_typ": [1, 2], "_get_primary_particle_interaction_type_and_elast": [1, 2], "_get_primary_track_energy_and_inelast": [1, 2], "_muon_stop": [1, 2], "parquetdataconvert": [1, 4], "parquetdataset": [1, 4], "sqlitedataconvert": [1, 5], "_attach_index": [1, 5], "_extract_everyth": [1, 5], "_extract_table_nam": [1, 5], "_merge_temporary_databas": [1, 5], "_submit_to_databas": [1, 5], "any_pulsemap_is_non_empti": [1, 5], "construct_datafram": [1, 5], "is_pulsemap_check": [1, 5], "sqlitedataset": [1, 5], "_close_connect": [1, 5], "_establish_connect": [1, 5], "sqlitedatasetperturb": [1, 5], "get_desired_event_numb": [1, 5], "get_equal_proportion_neutrino_indic": [1, 5], "get_even_dbang_select": [1, 5], "get_even_signal_background_indici": [1, 5], "get_even_track_cascade_indici": [1, 5], "attach_index": [1, 5], "create_t": [1, 5], "run_sql_cod": [1, 5], "save_to_sql": [1, 5], "parquettosqliteconvert": [1, 6], "_save_config": [1, 6], "pairwise_shuffl": [1, 6], "global": [1, 12], "class": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "sourc": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "base": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "object": [1, 2, 3, 9, 10, 11, 13, 14, 15], "dom_x": [1, 11], "dom_i": [1, 11], "dom_z": [1, 11], "dom_tim": [1, 11], "charg": [1, 2, 11, 14], "rde": [1, 11], "pmt_area": [1, 11], "string": [1, 2, 3, 9, 10, 11], "pmt_number": [1, 11], "dom_numb": [1, 11], "pmt_dir_x": [1, 11], "pmt_dir_i": [1, 11], "pmt_dir_z": [1, 11], "dom_typ": [1, 11], "energi": [1, 2, 13], "energy_track": 1, "position_x": [1, 2], "position_i": [1, 2], "position_z": [1, 2], "azimuth": [1, 13, 14], "zenith": [1, 13, 14], "pid": [1, 14], "elast": [1, 2], "sim_typ": [1, 2], "interaction_typ": [1, 2], "interaction_tim": 1, "inelast": [1, 2, 13], "stopped_muon": 1, "list": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "outdir": [1, 4, 5, 6], "str": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "gcd_rescu": [1, 4, 5, 15], "option": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 15], "none": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "nb_files_to_batch": [1, 4, 5], "int": [1, 2, 4, 5, 9, 10, 11, 12, 13, 14, 15], "sequential_batch_pattern": [1, 4, 5], "input_file_batch_pattern": [1, 4, 5], "worker": [1, 4, 5, 6], "1": [1, 2, 4, 5, 9, 10, 13, 14], "index_column": [1, 4, 5], "event_no": [1, 4, 5], "icetray_verbos": [1, 4, 5], "0": [1, 2, 4, 5, 9, 10, 12, 14], "abc": [1, 2, 9, 14], "specialis": 1, "etc": [1, 9], "final": [1, 2, 5, 9, 10, 11, 13, 14], "directori": [1, 15], "union": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 15], "call": [1, 2, 3, 5, 9, 10, 14, 15], "paramet": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "One": [1, 6], "within": [1, 9, 10, 12], "which": [1, 5, 9, 10, 12, 14], "should": [1, 9, 10, 14], "an": [1, 2, 3, 9, 14, 15], "when": [1, 3, 9, 12, 14], "regular": [1, 3], "express": [1, 9, 14], "group": [1, 10], "accord": [1, 4, 5, 9, 10], "match": [1, 15], "certain": [1, 6, 9], "pattern": 1, "up": 1, "wildcard": 1, "same": [1, 2, 3, 9, 10, 11, 13, 14], "output": [1, 4, 5, 9, 12, 13, 14, 15], "thi": [1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14], "ha": [1, 2, 3, 9, 12, 14, 15], "input": [1, 2, 9, 11, 12, 13, 14], "replac": 1, "x": [1, 2, 9, 10, 11, 12, 13, 14], "period": 1, "special": [1, 2, 9], "mean": [1, 4, 5, 9, 12, 14], "interpret": 1, "liter": 1, "ani": [1, 2, 3, 5, 9, 10, 12, 14], "charact": 1, "standard": [1, 9, 14], "regex": 1, "For": [1, 3, 14], "instanc": [1, 2, 3, 4, 5, 9, 14, 15], "A": [1, 2, 9, 10, 14], "z": [1, 2, 9, 11], "_": 1, "9": 1, "5": [1, 9], "zst": 1, "find": [1, 15], "whose": [1, 2, 9], "contain": [1, 2, 4, 5, 9, 12, 14], "one": [1, 5, 9, 10, 15], "capit": 1, "letter": 1, "follow": [1, 2, 12, 14], "underscor": 1, "five": 1, "number": [1, 5, 9, 10, 12, 13, 14], "upgrade_genie_step4_141020_a_000000": 1, "upgrade_genie_step4_141020_a_000001": 1, "upgrade_genie_step4_141020_a_000008": 1, "upgrade_genie_step4_141020_a_000009": 1, "would": 1, "upgrade_genie_step4_141020_a_00000x": 1, "suffix": 1, "upgrade_genie_step4_141020_a_000010": 1, "separ": [1, 3, 14], "upgrade_genie_step4_141020_a_00001x": 1, "ordereddict": [1, 4, 5], "extract": [1, 2, 5, 6, 13, 14], "singl": [1, 9, 10, 12, 14], "If": [1, 2, 5, 9, 14], "strategi": 1, "each": [1, 2, 3, 5, 6, 9, 10, 12, 14, 15], "correspond": [1, 2, 3, 5, 6, 9, 12, 13, 14, 15], "return": [1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15], "method": [1, 3, 4, 5, 9, 10, 14], "The": [1, 2, 3, 9, 10, 12, 13, 14, 15], "abov": [1, 9, 14], "distinct": 1, "allow": [1, 10, 14], "rather": [1, 13], "than": [1, 13], "send": 1, "back": [1, 9], "path": [1, 2, 4, 5, 6, 9, 15], "gcd": [1, 2, 6, 15], "arg": [1, 9, 14, 15], "tupl": [1, 2, 3, 5, 6, 9, 12, 13, 14, 15], "iter": 1, "over": [1, 9], "batch": [1, 9, 10, 12, 14], "result": [1, 2, 4, 5, 9, 14], "applic": 1, "csv": [1, 6], "updat": [1, 9, 13, 14], "self": [1, 9, 14], "_index": 1, "_output_fil": 1, "set": [1, 9, 13, 14, 15], "multiprocess": 1, "wa": [1, 2], "In": [1, 2, 9], "case": [1, 2, 9, 10, 13], "been": [1, 9, 14], "abl": [1, 3], "write": 1, "directli": [1, 14], "we": [1, 3, 9], "need": [1, 3, 9, 14], "get": [1, 2, 3, 5, 9, 14, 15], "sync": 1, "gener": [1, 2, 5, 6, 9, 14], "individu": [1, 9, 10, 12], "inherit": [1, 3, 11, 13, 14], "properti": [1, 2, 3, 9, 10, 11, 12, 13], "nb_file": 1, "unit": [1, 9, 14, 15], "": [1, 5, 6, 9, 12, 15], "callabl": [1, 3, 9, 10, 13], "identifi": [1, 9], "map": [1, 2, 5], "function": [1, 3, 5, 6, 9, 10, 13, 14, 15], "pure": [1, 2, 3], "output_fil": [1, 4, 5], "input_fil": [1, 2, 4, 5], "merg": [1, 4, 5, 14], "default": [1, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "current": [1, 2, 4, 5, 9, 14], "process_method": 1, "decor": [1, 15], "cach": [1, 14], "valu": [1, 2, 5, 9, 10, 14], "make": [1, 5, 9], "global_index": 1, "avail": [1, 2, 9, 15], "defin": [1, 4, 9, 10, 14], "except": [1, 2], "indic": [1, 5, 9, 10, 14], "miss": 1, "column": [1, 5, 9, 14], "pulsemap": [1, 2, 4, 5, 10, 14], "node_truth": [1, 4, 5, 14], "truth_tabl": [1, 4, 5], "node_truth_t": [1, 4, 5, 14], "string_select": [1, 4, 5, 14], "select": [1, 4, 5, 14], "dtype": [1, 4, 5, 15], "torch": [1, 4, 5, 9, 12, 15], "float32": [1, 4, 5], "loss_weight_t": [1, 4, 5, 14], "loss_weight_column": [1, 4, 5, 14], "loss_weight_default_valu": [1, 4, 5], "float": [1, 2, 4, 5, 9, 12, 14], "read": [1, 3, 4, 5, 9, 11, 12], "tabl": [1, 5], "loss_weight": [1, 13], "creat": [1, 5, 9], "pytorch": [1, 4, 5, 9, 14], "No": 1, "preprocess": [1, 11], "perform": [1, 9, 12, 13, 14], "stage": 1, "just": [1, 10, 14], "node": [1, 9, 10, 12, 13], "adjanc": 1, "impos": 1, "edge_attr": 1, "edge_weight": 1, "attribut": [1, 2, 9, 14], "inform": [1, 2], "level": [1, 9, 10, 15], "weight": [1, 9, 14], "associ": [1, 2, 9, 13, 14], "weigh": 1, "loss": [1, 9, 13, 14], "_index_column": 1, "truth_dict": 1, "dict": [1, 2, 3, 5, 9, 11], "doubl": 1, "bang": 1, "dictionari": [1, 2, 3, 5, 9, 14], "ad": [1, 12], "intern": 1, "represent": [1, 3, 10], "implemen": 1, "code": [1, 2, 5, 9], "after": [1, 9, 12, 14], "constructor": [1, 2], "queri": [1, 2, 5], "sequenti": [1, 9], "len": [1, 9], "_may_": 1, "differ": [1, 9, 14], "_indic": 1, "puls": [1, 2, 3, 5, 9, 10], "length": [1, 3, 14], "some": [1, 2, 5, 9], "out": [1, 9, 12, 14, 15], "befor": [1, 5, 12, 13, 14], "scalar": [1, 9, 14], "rais": [1, 9], "element": [1, 3, 9], "present": [1, 9, 15], "remov": 1, "_featur": 1, "_truth": 1, "kei": [1, 2, 3, 5, 9, 10, 14], "fn": [1, 3, 9], "add": [1, 9, 12], "custom": [1, 9, 14], "module_dict": 1, "devic": [1, 9], "retro_table_nam": 1, "retro": [1, 2, 5], "batch_siz": [1, 9, 14], "100": [1, 2, 14], "n_worker": 1, "10": [1, 9, 14], "pipeline_nam": 1, "databas": [1, 2, 5, 6], "predict": [1, 2, 12, 13, 14], "made": [1, 9], "analysi": 1, "chunk_siz": 1, "1000000": 1, "field": [1, 2, 6, 14], "_module_dict": 1, "target": [1, 13, 14], "slice": [1, 12], "chunk": 1, "size": [1, 9, 10, 12], "control": [1, 9], "memori": 1, "usag": 1, "initi": 1, "gnn_module_for_energy_regress": 1, "modulelist": 1, "_devic": 1, "comput": [1, 9, 13, 14], "store": [1, 5, 14], "dataload": [1, 5, 9, 14], "alreadi": [1, 2, 5, 15], "exist": [1, 2, 5], "prompt": 1, "avoid": [1, 5, 14], "overwrit": [1, 14], "pipeline_databas": 1, "table_nam": [1, 5], "df": [1, 5], "param": [1, 9, 12, 14], "panda": [1, 5], "datafram": [1, 5, 14], "combin": [1, 13, 14], "flatten_nested_dictionari": [2, 3], "serialis": [2, 3, 9], "transpose_list_of_dict": [2, 3], "frame_is_montecarlo": [2, 3], "frame_is_nois": [2, 3], "get_om_keys_and_pulseseri": [2, 3], "break_cyclic_recurs": [2, 3], "cast_object_to_pure_python": [2, 3], "cast_pulse_series_to_pure_python": [2, 3], "get_member_vari": [2, 3], "is_boost_class": [2, 3], "is_boost_enum": [2, 3], "is_icecube_class": [2, 3], "is_method": [2, 3], "is_typ": [2, 3], "geospati": 2, "manag": 2, "multipl": [2, 9, 14], "exclude_kei": 2, "dynam": [2, 12], "pars": 2, "i3fram": [2, 3], "tri": [2, 3], "automat": [2, 9, 14], "cast": [2, 3], "done": [2, 10, 15], "recurs": [2, 3, 15], "look": 2, "member": [2, 3, 9, 15], "variabl": [2, 3, 9, 12], "signatur": [2, 3], "similar": [2, 3, 9, 14], "handl": [2, 9], "hand": 2, "seri": [2, 3], "per": [2, 10], "mc": 2, "tree": 2, "trigger": 2, "icetrai": [2, 3, 15], "possibl": [2, 3], "other": [2, 14], "check": [2, 3, 5, 15], "obj": [2, 3, 9], "dataclass": [2, 3], "i3mctre": 2, "i3triggerhierarchi": 2, "hierarchi": 2, "i3mapkeyuint": 2, "like": [2, 3, 9, 10, 14, 15], "om": [2, 3], "integ": [2, 9, 12], "vector": [2, 9, 10, 14], "flatten": 2, "user": [2, 14], "otherwis": [2, 3, 14], "possibli": 2, "ones": 2, "explicitli": 2, "exclud": [2, 6], "dnn_hybrid": 2, "tum": 2, "dnn": 2, "reco": 2, "quantiti": [2, 9, 13], "default_valu": 2, "spline_mpe_": 2, "splinemp": 2, "point": [2, 14], "border": 2, "padding_valu": 2, "determin": 2, "boolean": [2, 14], "montecarlo": 2, "simul": 2, "primari": 2, "particl": 2, "interact": [2, 13], "handler": 2, "doe": [2, 3, 9, 12], "two": [2, 9, 12, 14], "thing": [2, 9], "catch": 2, "issu": 2, "relat": [2, 6, 15], "where": [2, 14], "doesnt": 2, "pad": 2, "mciniceprimari": 2, "either": [2, 9, 14], "2": [2, 9, 10, 13, 14], "neutral": 2, "neither": 2, "total": 2, "track": [2, 13], "record": [2, 15], "horizontal_pad": 2, "vertical_pad": 2, "calcul": [2, 9, 12, 14], "muon": [2, 5, 14], "stop": [2, 9], "insid": [2, 14], "fiduci": 2, "volum": 2, "posit": [2, 10], "analogou": 2, "vertex": 2, "under": 2, "first": [2, 9, 14], "entri": [2, 12], "xy": 2, "outlin": 2, "second": [2, 9], "min": [2, 9, 12], "max": [2, 9, 10, 12, 14], "depth": 2, "see": [2, 9, 14], "hard": 2, "exampl": [2, 9, 10, 14], "shrink": 2, "plane": [2, 14], "further": 2, "exclus": 2, "zone": 2, "height": 2, "y": [2, 9, 11], "co": 2, "ordin": 2, "tum_dnn": 2, "manipul": 3, "parent_kei": 3, "__": 3, "necessari": [3, 5], "json": 3, "typic": 3, "nest": 3, "therefor": 3, "outer": 3, "order": [3, 9], "de": 3, "arrai": 3, "bool": [3, 5, 9, 11, 12, 13, 14, 15], "pulseseri": 3, "calibr": 3, "i3calibr": 3, "indici": [3, 14], "gcd_dict": 3, "om_kei": 3, "ensur": [3, 6, 14], "isn": 3, "t": [3, 9, 11, 14], "take": [3, 5, 10], "mainli": 3, "cannot": 3, "trivial": 3, "whether": [3, 5, 9, 12, 14, 15], "try": 3, "similarli": 3, "support": [3, 9], "equival": [3, 14], "its": [3, 5, 9], "non": [3, 5, 14, 15], "itself": [3, 13], "deem": 3, "wai": 3, "optic": 3, "found": [3, 9, 14], "return_discard": 3, "fals": [3, 5, 9, 12, 14], "valid": [3, 9, 13, 14], "ignor": 3, "mangl": 3, "boost": 3, "enum": 3, "attach": 5, "time": [5, 9, 10], "is_pulse_map": 5, "db": [5, 10, 14], "pd": 5, "everyth": 5, "temporari": 5, "submit": 5, "specifi": [5, 9, 13, 14, 15], "data_dict": 5, "empti": 5, "p": [5, 14], "retriev": [5, 14], "splitinicepuls": 5, "least": 5, "true": [5, 9, 14], "becaus": [5, 6], "instead": [5, 14], "alwai": 5, "sure": 5, "sqlite3": 5, "connect": [5, 11, 14], "open": 5, "pass": [5, 9, 12, 13, 14], "replica": 5, "requir": [5, 9, 14], "own": [5, 9], "databaseerror": 5, "disk": 5, "malform": 5, "due": 5, "inabl": 5, "accross": 5, "perturbation_dict": 5, "perturb": 5, "step": [5, 9, 14], "test": [5, 13, 14, 15], "stabil": 5, "desired_s": 5, "fraction_nois": 5, "fraction_muon": 5, "fraction_nu_": 5, "fraction_nu_mu": 5, "fraction_nu_tau": 5, "seed": [5, 14], "fraction": [5, 12], "nois": 5, "nu_e": 5, "nu_mu": 5, "nu_tau": 5, "reed": 5, "42": [5, 14], "equal": 5, "flavour": 5, "proport": 5, "resp": 5, "min_max_decay_length": 5, "dbang": 5, "cc": 5, "nc": 5, "mu": 5, "database_path": 5, "must": [5, 9, 14], "parquet_path": 6, "mc_truth_tabl": 6, "mc_truth": 6, "excluded_field": 6, "assign": [6, 9, 10], "uniqu": [6, 9], "id": 6, "By": [6, 9, 13], "everi": [6, 9], "choos": [6, 9], "exclude_field": 6, "database_nam": 6, "i3_list": [6, 15], "gcd_list": [6, 15], "shuffl": [6, 14], "correpond": 6, "handi": 6, "even": [6, 14], "files_list": 6, "gcd_shuffl": 6, "i3_shuffl": 6, "dynedgeconv": [9, 10, 12], "_group_ident": [9, 10], "group_bi": [9, 10], "group_pulses_to_dom": [9, 10], "group_pulses_to_pmt": [9, 10], "min_pool": [9, 10], "min_pool_x": [9, 10], "std_pool": [9, 10], "std_pool_x": [9, 10], "sum_pool": [9, 10], "sum_pool_and_distribut": [9, 10], "sum_pool_x": [9, 10], "check_db_siz": [9, 10], "fit_scal": [9, 10], "nb_input": [9, 11, 12, 13], "nb_output": [9, 11, 12], "icecubedeepcor": [9, 11], "icecubeupgrad": [9, 11], "icecubeupgrade_v2": [9, 11], "_calculate_global_vari": [9, 12], "_construct_lay": [9, 12], "_global_pool": [9, 12], "dynedgejinst": [9, 12], "azimuthreconstruct": [9, 13], "azimuthreconstructionwithkappa": [9, 13], "binaryclassificationtask": [9, 13], "binaryclassificationtasklogit": [9, 13], "directionreconstructionwithkappa": [9, 13], "energyreconstruct": [9, 13], "energyreconstructionwithuncertainti": [9, 13], "inelasticityreconstruct": [9, 13], "passoutput1": [9, 13], "passoutput2": [9, 13], "passoutput3": [9, 13], "positionreconstruct": [9, 13], "timereconstruct": [9, 13], "vertexreconstruct": [9, 13], "zenithreconstruct": [9, 13], "zenithreconstructionwithkappa": [9, 13], "_validate_and_set_transform": [9, 13], "train_ev": [9, 13], "oper": [9, 12, 14], "cluster": [9, 10, 12], "local": 9, "reduc": 9, "avg": 9, "transfer_attribut": 9, "longtensor": [9, 10, 12], "tensor": [9, 10, 12, 13, 14, 15], "addit": [9, 14], "nomin": 9, "pooling_method": 9, "well": 9, "overwritten": 9, "bespok": 9, "original_data": 9, "pooled_data": 9, "transfer": 9, "avg_pool": 9, "avg_pool_x": 9, "max_pool": [9, 10], "max_pool_x": [9, 10], "sum": [9, 10, 12], "time_window": 9, "dom": [9, 10], "edge_index": [9, 10, 12], "split": 9, "mathbf": [9, 10], "b": [9, 10], "ldot": [9, 10], "n": [9, 10, 14], "basemodel": 9, "construct": [9, 12, 13, 14, 15], "transpar": 9, "reproduc": 9, "note": 9, "trainabl": 9, "hyperparamet": 9, "instanti": 9, "randomli": 9, "initialis": 9, "thu": 9, "session": 9, "do": [9, 14], "yml": 9, "anoth": 9, "you": [9, 14], "Or": 9, "ident": [9, 10], "repres": [9, 10, 14], "wrap": [9, 14], "unambigu": 9, "classmethod": [9, 14], "trust": 9, "load_modul": 9, "enough": 9, "eval": 9, "lambda": 9, "valueerror": 9, "yaml": 9, "lookup": 9, "init_fn": 9, "fn_kwarg": 9, "appli": [9, 10, 12], "structur": 9, "sigma": 9, "threshold": 9, "adjac": [9, 11], "euclidean": [9, 14], "distanc": [9, 14], "http": [9, 14], "arxiv": [9, 14], "org": [9, 14], "pdf": 9, "1809": 9, "06166": 9, "kwarg": [9, 10, 14, 15], "nb_nearest_neighbour": 9, "k": [9, 12, 14], "nearest": [9, 12], "neighbour": [9, 12], "radiu": 9, "sphere": [9, 14], "chosen": 9, "centr": 9, "hit": 9, "lightningmodul": [9, 14], "re": 9, "entir": 9, "state_dict": 9, "optimizer_class": 9, "optim": [9, 14], "adam": 9, "optimizer_kwarg": 9, "scheduler_class": 9, "scheduler_kwarg": 9, "scheduler_config": 9, "togeth": 9, "complet": 9, "pred": [9, 13], "verbos": [9, 14], "rate": [9, 14], "schedul": 9, "your": 9, "normal": 9, "d": [9, 14], "But": 9, "gan": 9, "might": 9, "6": [9, 10, 14], "lr": 9, "lr_scheduler_config": 9, "lr_schedul": 9, "describ": 9, "frequenc": 9, "fit": [9, 14], "shown": 9, "below": 9, "could": 9, "also": [9, 14, 15], "epoch": [9, 14], "wherea": 9, "interv": 9, "how": [9, 14], "mani": [9, 14], "between": [9, 14], "metric": [9, 12, 14], "monitor": 9, "reducelronplateau": 9, "val_loss": 9, "enforc": [9, 14], "produc": [9, 14], "strict": 9, "learningratemonitor": 9, "progress": [9, 14], "keyword": 9, "condit": [9, 14], "lightn": [9, 14], "def": [9, 14], "metric_to_track": 9, "often": 9, "refer": 9, "trainer": [9, 14], "check_val_every_n_epoch": 9, "optimizer1": 9, "optimizer2": 9, "sgd": 9, "scheduler1": 9, "scheduler2": 9, "lambdalr": 9, "simpli": 9, "metric_v": 9, "along": 9, "given": [9, 10, 14], "There": 9, "former": 9, "latter": 9, "mention": 9, "optimizer_on": 9, "01": 9, "optimizer_two": 9, "next": 9, "cycl": 9, "continu": [9, 14], "being": [9, 13], "1e": 9, "3": [9, 10, 12, 13, 14], "gen_opt": 9, "model_gen": 9, "dis_opt": 9, "model_di": 9, "02": 9, "dis_sch": 9, "cosineann": 9, "t_max": 9, "gen_sch": 9, "exponentiallr": 9, "99": 9, "procedur": 9, "wasserstein": 9, "algorithm": 9, "ab": [9, 14], "1704": 9, "00028": 9, "n_critic": 9, "know": 9, "16": [9, 14], "bit": 9, "optimizer_idx": 9, "lbfg": 9, "closur": 9, "gradient": [9, 14], "those": 9, "overrid": [9, 14], "optimizer_step": 9, "hook": [9, 14], "mode": [9, 13, 14], "batch_idx": 9, "effect": 9, "document": [9, 14], "particular": [9, 14], "behavior": 9, "evalu": 9, "thei": [9, 14], "affect": 9, "dropout": 9, "batchnorm": 9, "train_batch": 9, "here": [9, 14], "bar": [9, 14], "logger": [9, 15], "displai": [9, 14], "hidden": [9, 12], "paramref": 9, "pytorch_lightn": 9, "core": [9, 12], "truncated_bptt_step": 9, "skip": [9, 12], "multi": [9, 12], "gpu": 9, "tpu": 9, "ipu": 9, "deepspe": 9, "fancier": 9, "someth": 9, "encod": 9, "decod": 9, "truncat": 9, "propag": 9, "through": [9, 14], "state": 9, "previou": [9, 14], "backprop": 9, "lstm": 9, "smooth": 9, "averag": [9, 10, 14], "last": [9, 12, 14], "so": [9, 14], "actual": 9, "val_batch": 9, "anyth": 9, "interest": 9, "accuraci": 9, "pseudocod": 9, "val_out": 9, "val_data": 9, "append": 9, "validation_epoch_end": 9, "dataloader_idx": 9, "val": 9, "validation_step_end": 9, "text": 9, "whatev": 9, "sample_img": 9, "grid": 9, "torchvis": 9, "make_grid": 9, "add_imag": 9, "example_imag": 9, "acc": 9, "labels_hat": 9, "argmax": 9, "dim": 9, "val_acc": 9, "item": [9, 14], "log_dict": 9, "recommend": 9, "quickli": 9, "switch": [9, 14], "tell": 9, "don": [9, 14], "put": 9, "disabl": 9, "At": 9, "goe": 9, "enabl": 9, "xyz_coord": 9, "matrix": [9, 10], "pairwis": 9, "coordin": 9, "shape": [9, 10, 14], "nb_dom": 9, "xyzt": 9, "homophili": 9, "measur": 9, "notic": [9, 14], "assum": [9, 11, 13], "torch_geometr": [9, 10], "eg": 9, "edg": [9, 10, 12], "nn": [10, 12], "aggr": 10, "nb_neighbor": 10, "8": [10, 12, 14], "features_subset": [10, 12], "sequenc": 10, "edgeconv": 10, "sparsetensor": 10, "row": 10, "f": 10, "num": 10, "pmt": 10, "aggreg": 10, "f1": 10, "f2": 10, "7": 10, "groupbi": 10, "negat": 10, "std": 10, "c": [10, 14], "version": [10, 13, 14], "mathbb": 10, "r": [10, 14], "n_1": 10, "n_b": 10, "maximum": [10, 13], "obtain": [10, 14], "wise": 10, "dens": 10, "fc": 10, "known": 10, "els": 10, "cluster_index": 10, "distribut": [10, 12, 13, 14], "scaler": 11, "ins": 11, "syntax": [11, 13, 14], "implent": [11, 13, 14], "pre": 11, "mai": 11, "overridden": [11, 14], "86": 11, "descript": 12, "author": [12, 14], "martin": 12, "minh": 12, "email": 12, "nb_intermedi": 12, "128": 12, "dropout_ratio": 12, "dimens": [12, 14], "drop": 12, "nb_neighbour": 12, "dynedge_layer_s": 12, "post_processing_layer_s": 12, "readout_layer_s": 12, "global_pooling_schem": 12, "add_global_variables_after_pool": 12, "convolut": 12, "subset": 12, "latent": 12, "dimenion": 12, "perceptron": 12, "mlp": 12, "That": 12, "256": 12, "336": 12, "concaten": 12, "post": [12, 14], "_and_": 12, "As": 12, "yield": [12, 14], "scheme": 12, "altern": [12, 14], "additional_attribut": [12, 14], "exact": [12, 14], "2209": 12, "03042": 12, "rasmu": 12, "oerso": 12, "layer_size_scal": 12, "4": [12, 13, 14], "scale": [12, 13, 14], "learnabl": 12, "hidden_s": 13, "target_label": 13, "transform_prediction_and_target": 13, "transform_target": 13, "transform_infer": 13, "transform_support": 13, "angl": [13, 14], "kappa": [13, 14], "var": 13, "3dvonmisesfish": 13, "uncertainti": 13, "v": 13, "hadron": 13, "interfer": 13, "feed": 13, "affin": 13, "appropri": 13, "both": 13, "o": 13, "numer": [13, 14], "stabl": [13, 14], "log10": 13, "conjunct": 13, "invers": 13, "recov": 13, "minimum": 13, "rang": 13, "restrict": [13, 14], "invert": 13, "1e6": 13, "assert": 13, "deactiv": 13, "mileston": 14, "factor": 14, "last_epoch": 14, "_lrschedul": 14, "interpol": 14, "linearli": 14, "denot": 14, "multipli": 14, "closest": 14, "vice": 14, "versa": 14, "increas": 14, "print": [14, 15], "messag": [14, 15], "stdout": 14, "refresh_r": 14, "process_posit": 14, "tqdmprogressbar": 14, "customis": 14, "get_standard_metr": 14, "show": 14, "super": 14, "pop": 14, "v_num": 14, "tqdm": 14, "To": 14, "access": 14, "training_epoch_end": 14, "via": 14, "OR": 14, "line": 14, "while": 14, "behaviour": 14, "azimuth_kei": 14, "zenith_kei": 14, "ie": 14, "binari": 14, "cross": 14, "entropi": 14, "respect": 14, "prob": 14, "12": 14, "14": 14, "report": 14, "elementwis": 14, "reduct": 14, "3d": 14, "mit": 14, "licens": 14, "copyright": 14, "2019": 14, "ryabinin": 14, "permiss": 14, "herebi": 14, "grant": 14, "free": 14, "person": 14, "copi": 14, "softwar": 14, "deal": 14, "limit": 14, "right": 14, "modifi": 14, "publish": 14, "sublicens": 14, "sell": 14, "permit": 14, "whom": 14, "furnish": 14, "subject": 14, "shall": 14, "substanti": 14, "portion": 14, "THE": 14, "AS": 14, "warranti": 14, "OF": 14, "kind": 14, "impli": 14, "BUT": 14, "NOT": 14, "TO": 14, "merchant": 14, "FOR": 14, "purpos": 14, "AND": 14, "noninfring": 14, "IN": 14, "NO": 14, "holder": 14, "BE": 14, "liabl": 14, "claim": 14, "damag": 14, "liabil": 14, "action": 14, "contract": 14, "tort": 14, "aris": 14, "WITH": 14, "_____________________": 14, "github": 14, "com": 14, "mryab": 14, "vmf_loss": 14, "blob": 14, "master": 14, "py": 14, "bessel": 14, "exponenti": 14, "ditto": 14, "iv": 14, "1812": 14, "04616": 14, "spite": 14, "suggest": 14, "sec": 14, "paper": 14, "chang": 14, "comparison": 14, "m": 14, "correct": 14, "static": 14, "ctx": 14, "grad_output": 14, "formula": 14, "differenti": 14, "alia": 14, "vjp": 14, "subclass": 14, "accept": 14, "context": 14, "were": 14, "w": 14, "grad": 14, "dure": 14, "needs_input_grad": 14, "arbitrari": 14, "though": 14, "compat": 14, "save_for_backward": 14, "intend": 14, "save_for_forward": 14, "jvp": 14, "cosh": 14, "act": 14, "small": 14, "larg": 14, "inf": 14, "moder": 14, "kera": 14, "team": 14, "v2": 14, "l1580": 14, "l1617": 14, "return_el": 14, "term": 14, "squar": 14, "root": 14, "von": 14, "mise": 14, "fisher": 14, "2d": 14, "0th": 14, "1st": 14, "estim": 14, "prepar": 14, "dimenson": 14, "space": 14, "utilis": 14, "probabl": 14, "dimension": 14, "kappa_switch": 14, "c_": 14, "sinc": 14, "diverg": 14, "700": 14, "float64": 14, "unaccur": 14, "approx": 14, "minu": 14, "sign": 14, "prediction_column": 14, "node_level": 14, "num_work": 14, "persistent_work": 14, "database_indic": 14, "test_siz": 14, "33": 14, "tag": 14, "archiv": 14, "system": 15, "dir": 15, "search": [15, 16], "filenam": 15, "desir": 15, "functionn": 15, "test_funct": 15, "consist": 15, "project": 15, "msg": 15, "deleg": 15, "repeat": 15, "formatt": 15, "coloredformatt": 15, "colour": 15, "log_fold": 15, "place": 15, "termin": 15, "20": 15, "exactli": 15, "onc": 15, "assort": 15, "ep": 15, "modul": [16, 17], "page": 16, "graphnet": 17, "packag": 17, "subpackag": 17, "content": 17}, "objects": {"": [[0, 0, 0, "-", "graphnet"]], "graphnet": [[1, 0, 0, "-", "data"], [7, 0, 0, "-", "deployment"], [9, 0, 0, "-", "models"], [14, 0, 0, "-", "training"], [15, 0, 0, "-", "utilities"]], "graphnet.data": [[1, 0, 0, "-", "constants"], [1, 0, 0, "-", "dataconverter"], [1, 0, 0, "-", "dataset"], [2, 0, 0, "-", "extractors"], [4, 0, 0, "-", "parquet"], [1, 0, 0, "-", "pipeline"], [5, 0, 0, "-", "sqlite"], [6, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[1, 1, 1, "", "FEATURES"], [1, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[1, 2, 1, "", "DEEPCORE"], [1, 2, 1, "", "ICECUBE86"], [1, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[1, 2, 1, "", "DEEPCORE"], [1, 2, 1, "", "ICECUBE86"], [1, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[1, 1, 1, "", "DataConverter"], [1, 1, 1, "", "FileSet"], [1, 5, 1, "", "cache_output_files"], [1, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[1, 3, 1, "", "__call__"], [1, 3, 1, "", "__init__"], [1, 3, 1, "", "_extract_data"], [1, 3, 1, "", "_iterate_over_batches_of_files"], [1, 3, 1, "", "_save_filenames"], [1, 3, 1, "", "_update_shared_variables"], [1, 3, 1, "", "execute"], [1, 4, 1, "", "file_suffix"], [1, 3, 1, "", "get_map_function"], [1, 3, 1, "", "merge_files"], [1, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[1, 2, 1, "", "gcd_file"], [1, 2, 1, "", "i3_file"]], "graphnet.data.dataset": [[1, 6, 1, "", "ColumnMissingException"], [1, 1, 1, "", "Dataset"]], "graphnet.data.dataset.Dataset": [[1, 3, 1, "", "_check_missing_columns"], [1, 3, 1, "", "_create_graph"], [1, 3, 1, "", "_get_all_indices"], [1, 3, 1, "", "_get_dbang_label"], [1, 3, 1, "", "_get_labels"], [1, 3, 1, "", "_init"], [1, 3, 1, "", "_post_init"], [1, 3, 1, "", "_query"], [1, 3, 1, "", "_query_table"], [1, 3, 1, "", "_remove_missing_columns"], [1, 3, 1, "", "add_label"]], "graphnet.data.extractors": [[2, 0, 0, "-", "i3extractor"], [2, 0, 0, "-", "i3featureextractor"], [2, 0, 0, "-", "i3genericextractor"], [2, 0, 0, "-", "i3hybridrecoextractor"], [2, 0, 0, "-", "i3retroextractor"], [2, 0, 0, "-", "i3splinempeextractor"], [2, 0, 0, "-", "i3truthextractor"], [2, 0, 0, "-", "i3tumextractor"], [3, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[2, 1, 1, "", "I3Extractor"], [2, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "_load_gcd_data"], [2, 4, 1, "", "name"], [2, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[2, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[2, 1, 1, "", "I3FeatureExtractor"], [2, 1, 1, "", "I3FeatureExtractorIceCube86"], [2, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [2, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [2, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3genericextractor": [[2, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor.I3GenericExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "_cast_mc_tree"], [2, 3, 1, "", "_cast_triggers"], [2, 3, 1, "", "_extract_per_pulse_attribute"], [2, 3, 1, "", "_extract_pulse_series_map"], [2, 3, 1, "", "_flatten_result"], [2, 3, 1, "", "_flatten_result_mctree"], [2, 3, 1, "", "_get_keys"]], "graphnet.data.extractors.i3hybridrecoextractor": [[2, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3retroextractor": [[2, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor.I3RetroExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "_try_get_key"]], "graphnet.data.extractors.i3splinempeextractor": [[2, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3truthextractor": [[2, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor.I3TruthExtractor": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "_find_data_type"], [2, 3, 1, "", "_get_primary_particle_interaction_type_and_elasticity"], [2, 3, 1, "", "_get_primary_track_energy_and_inelasticity"], [2, 3, 1, "", "_muon_stopped"]], "graphnet.data.extractors.i3tumextractor": [[2, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor.I3TUMExtractor": [[2, 3, 1, "", "__call__"]], "graphnet.data.extractors.utilities": [[3, 0, 0, "-", "collections"], [3, 0, 0, "-", "frames"], [3, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[3, 5, 1, "", "flatten_nested_dictionary"], [3, 5, 1, "", "serialise"], [3, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[3, 5, 1, "", "frame_is_montecarlo"], [3, 5, 1, "", "frame_is_noise"], [3, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[3, 5, 1, "", "break_cyclic_recursion"], [3, 5, 1, "", "cast_object_to_pure_python"], [3, 5, 1, "", "cast_pulse_series_to_pure_python"], [3, 5, 1, "", "get_member_variables"], [3, 5, 1, "", "is_boost_class"], [3, 5, 1, "", "is_boost_enum"], [3, 5, 1, "", "is_icecube_class"], [3, 5, 1, "", "is_method"], [3, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[4, 0, 0, "-", "parquet_dataconverter"], [4, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[4, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[4, 2, 1, "", "file_suffix"], [4, 3, 1, "", "merge_files"], [4, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[4, 1, 1, "", "ParquetDataset"]], "graphnet.data.pipeline": [[1, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pipeline.InSQLitePipeline": [[1, 3, 1, "", "__call__"], [1, 3, 1, "", "__init__"], [1, 3, 1, "", "_create_table"]], "graphnet.data.sqlite": [[5, 0, 0, "-", "sqlite_dataconverter"], [5, 0, 0, "-", "sqlite_dataset"], [5, 0, 0, "-", "sqlite_dataset_perturbed"], [5, 0, 0, "-", "sqlite_selection"], [5, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[5, 1, 1, "", "SQLiteDataConverter"], [5, 5, 1, "", "construct_dataframe"], [5, 5, 1, "", "is_pulsemap_check"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[5, 3, 1, "", "_attach_index"], [5, 3, 1, "", "_create_table"], [5, 3, 1, "", "_extract_everything"], [5, 3, 1, "", "_extract_table_names"], [5, 3, 1, "", "_merge_temporary_databases"], [5, 3, 1, "", "_submit_to_database"], [5, 3, 1, "", "any_pulsemap_is_non_empty"], [5, 2, 1, "", "file_suffix"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[5, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[5, 3, 1, "", "_close_connection"], [5, 3, 1, "", "_establish_connection"], [5, 3, 1, "", "_query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[5, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_selection": [[5, 5, 1, "", "get_desired_event_numbers"], [5, 5, 1, "", "get_equal_proportion_neutrino_indices"], [5, 5, 1, "", "get_even_dbang_selection"], [5, 5, 1, "", "get_even_signal_background_indicies"], [5, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[5, 5, 1, "", "attach_index"], [5, 5, 1, "", "create_table"], [5, 5, 1, "", "run_sql_code"], [5, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[6, 0, 0, "-", "parquet_to_sqlite"], [6, 0, 0, "-", "random"]], "graphnet.data.utilities.parquet_to_sqlite": [[6, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[6, 3, 1, "", "_save_config"], [6, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[6, 5, 1, "", "pairwise_shuffle"]], "graphnet.models": [[9, 0, 0, "-", "coarsening"], [10, 0, 0, "-", "components"], [9, 0, 0, "-", "config"], [11, 0, 0, "-", "detector"], [12, 0, 0, "-", "gnn"], [9, 0, 0, "-", "graph_builders"], [9, 0, 0, "-", "model"], [9, 0, 0, "-", "standard_model"], [13, 0, 0, "-", "task"], [9, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[9, 1, 1, "", "Coarsening"], [9, 1, 1, "", "CustomDOMCoarsening"], [9, 1, 1, "", "DOMAndTimeWindowCoarsening"], [9, 1, 1, "", "DOMCoarsening"], [9, 1, 1, "", "LoopBasedCoarsening"], [9, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[9, 3, 1, "", "_additional_features"], [9, 3, 1, "", "_perform_clustering"], [9, 3, 1, "", "_transfer_attributes"], [9, 3, 1, "", "forward"], [9, 2, 1, "", "reduce_options"], [9, 2, 1, "", "training"]], "graphnet.models.coarsening.CustomDOMCoarsening": [[9, 3, 1, "", "_additional_features"], [9, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 2, 1, "", "precision"], [9, 2, 1, "", "prepare_data_per_node"], [9, 2, 1, "", "training"]], "graphnet.models.coarsening.DOMAndTimeWindowCoarsening": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "_perform_clustering"], [9, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 2, 1, "", "precision"], [9, 2, 1, "", "prepare_data_per_node"], [9, 2, 1, "", "training"]], "graphnet.models.coarsening.DOMCoarsening": [[9, 3, 1, "", "_perform_clustering"], [9, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 2, 1, "", "precision"], [9, 2, 1, "", "prepare_data_per_node"], [9, 2, 1, "", "training"]], "graphnet.models.coarsening.LoopBasedCoarsening": [[9, 3, 1, "", "__call__"]], "graphnet.models.components": [[10, 0, 0, "-", "layers"], [10, 0, 0, "-", "pool"], [10, 0, 0, "-", "utils"]], "graphnet.models.components.layers": [[10, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[10, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[10, 5, 1, "", "_group_identical"], [10, 5, 1, "", "group_by"], [10, 5, 1, "", "group_pulses_to_dom"], [10, 5, 1, "", "group_pulses_to_pmt"], [10, 5, 1, "", "min_pool"], [10, 5, 1, "", "min_pool_x"], [10, 5, 1, "", "std_pool"], [10, 5, 1, "", "std_pool_x"], [10, 5, 1, "", "sum_pool"], [10, 5, 1, "", "sum_pool_and_distribute"], [10, 5, 1, "", "sum_pool_x"]], "graphnet.models.components.utils": [[10, 5, 1, "", "check_db_size"], [10, 5, 1, "", "fit_scaler"]], "graphnet.models.config": [[9, 1, 1, "", "ModelConfig"], [9, 5, 1, "", "get_namespace_classes"], [9, 5, 1, "", "is_graphnet_class"], [9, 5, 1, "", "is_graphnet_module"], [9, 5, 1, "", "save_config"], [9, 5, 1, "", "traverse_and_apply"]], "graphnet.models.config.ModelConfig": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "_as_dict"], [9, 3, 1, "", "_serialise"], [9, 2, 1, "", "arguments"], [9, 2, 1, "", "class_name"], [9, 3, 1, "", "construct_model"], [9, 3, 1, "", "dump"], [9, 3, 1, "", "load"]], "graphnet.models.detector": [[11, 0, 0, "-", "detector"], [11, 0, 0, "-", "icecube"], [11, 0, 0, "-", "prototype"]], "graphnet.models.detector.detector": [[11, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [11, 4, 1, "", "features"], [11, 3, 1, "", "forward"], [11, 4, 1, "", "nb_inputs"], [11, 4, 1, "", "nb_outputs"], [11, 2, 1, "", "precision"], [11, 2, 1, "", "prepare_data_per_node"], [11, 2, 1, "", "training"]], "graphnet.models.detector.icecube": [[11, 1, 1, "", "IceCube86"], [11, 1, 1, "", "IceCubeDeepCore"], [11, 1, 1, "", "IceCubeUpgrade"], [11, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [11, 2, 1, "", "features"], [11, 2, 1, "", "precision"], [11, 2, 1, "", "prepare_data_per_node"], [11, 2, 1, "", "training"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[11, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [11, 2, 1, "", "precision"], [11, 2, 1, "", "prepare_data_per_node"], [11, 2, 1, "", "training"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [11, 2, 1, "", "features"], [11, 2, 1, "", "precision"], [11, 2, 1, "", "prepare_data_per_node"], [11, 2, 1, "", "training"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [11, 2, 1, "", "features"], [11, 4, 1, "", "nb_outputs"], [11, 2, 1, "", "precision"], [11, 2, 1, "", "prepare_data_per_node"], [11, 2, 1, "", "training"]], "graphnet.models.detector.prototype": [[11, 1, 1, "", "Prototype"]], "graphnet.models.detector.prototype.Prototype": [[11, 3, 1, "", "_forward"], [11, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [11, 2, 1, "", "features"], [11, 2, 1, "", "precision"], [11, 2, 1, "", "prepare_data_per_node"], [11, 2, 1, "", "training"]], "graphnet.models.gnn": [[12, 0, 0, "-", "convnet"], [12, 0, 0, "-", "dynedge"], [12, 0, 0, "-", "dynedge_jinst"], [12, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[12, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[12, 3, 1, "", "__init__"], [12, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [12, 3, 1, "", "forward"], [12, 2, 1, "", "precision"], [12, 2, 1, "", "prepare_data_per_node"], [12, 2, 1, "", "training"]], "graphnet.models.gnn.dynedge": [[12, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "_calculate_global_variables"], [12, 3, 1, "", "_construct_layers"], [12, 3, 1, "", "_global_pooling"], [12, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [12, 3, 1, "", "forward"], [12, 2, 1, "", "precision"], [12, 2, 1, "", "prepare_data_per_node"], [12, 2, 1, "", "training"]], "graphnet.models.gnn.dynedge_jinst": [[12, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[12, 3, 1, "", "__init__"], [12, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [12, 3, 1, "", "forward"], [12, 2, 1, "", "precision"], [12, 2, 1, "", "prepare_data_per_node"], [12, 2, 1, "", "training"]], "graphnet.models.gnn.gnn": [[12, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[12, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [12, 3, 1, "", "forward"], [12, 4, 1, "", "nb_inputs"], [12, 4, 1, "", "nb_outputs"], [12, 2, 1, "", "precision"], [12, 2, 1, "", "prepare_data_per_node"], [12, 2, 1, "", "training"]], "graphnet.models.graph_builders": [[9, 1, 1, "", "EuclideanGraphBuilder"], [9, 1, 1, "", "GraphBuilder"], [9, 1, 1, "", "KNNGraphBuilder"], [9, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[9, 3, 1, "", "forward"], [9, 2, 1, "", "training"]], "graphnet.models.graph_builders.GraphBuilder": [[9, 2, 1, "", "training"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[9, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 3, 1, "", "forward"], [9, 2, 1, "", "precision"], [9, 2, 1, "", "prepare_data_per_node"], [9, 2, 1, "", "training"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[9, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 3, 1, "", "forward"], [9, 2, 1, "", "precision"], [9, 2, 1, "", "prepare_data_per_node"], [9, 2, 1, "", "training"]], "graphnet.models.model": [[9, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[9, 4, 1, "", "config"], [9, 3, 1, "", "forward"], [9, 3, 1, "", "from_config"], [9, 3, 1, "", "load"], [9, 3, 1, "", "load_state_dict"], [9, 3, 1, "", "save"], [9, 3, 1, "", "save_config"], [9, 3, 1, "", "save_state_dict"], [9, 2, 1, "", "training"]], "graphnet.models.standard_model": [[9, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[9, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [9, 3, 1, "", "compute_loss"], [9, 3, 1, "", "configure_optimizers"], [9, 3, 1, "", "forward"], [9, 3, 1, "", "inference"], [9, 2, 1, "", "precision"], [9, 2, 1, "", "prepare_data_per_node"], [9, 3, 1, "", "shared_step"], [9, 3, 1, "", "train"], [9, 2, 1, "", "training"], [9, 3, 1, "", "training_step"], [9, 3, 1, "", "validation_step"]], "graphnet.models.task": [[13, 0, 0, "-", "reconstruction"], [13, 0, 0, "-", "task"]], "graphnet.models.task.reconstruction": [[13, 1, 1, "", "AzimuthReconstruction"], [13, 1, 1, "", "AzimuthReconstructionWithKappa"], [13, 1, 1, "", "BinaryClassificationTask"], [13, 1, 1, "", "BinaryClassificationTaskLogits"], [13, 1, 1, "", "DirectionReconstructionWithKappa"], [13, 1, 1, "", "EnergyReconstruction"], [13, 1, 1, "", "EnergyReconstructionWithUncertainty"], [13, 1, 1, "", "InelasticityReconstruction"], [13, 1, 1, "", "PassOutput1"], [13, 1, 1, "", "PassOutput2"], [13, 1, 1, "", "PassOutput3"], [13, 1, 1, "", "PositionReconstruction"], [13, 1, 1, "", "TimeReconstruction"], [13, 1, 1, "", "VertexReconstruction"], [13, 1, 1, "", "ZenithReconstruction"], [13, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.BinaryClassificationTask": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.PassOutput1": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.PassOutput2": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.PassOutput3": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 2, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 2, 1, "", "training"]], "graphnet.models.task.task": [[13, 1, 1, "", "Task"]], "graphnet.models.task.task.Task": [[13, 3, 1, "", "_forward"], [13, 3, 1, "", "_validate_and_set_transforms"], [13, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [13, 3, 1, "", "compute_loss"], [13, 3, 1, "", "forward"], [13, 3, 1, "", "inference"], [13, 4, 1, "", "nb_inputs"], [13, 2, 1, "", "precision"], [13, 2, 1, "", "prepare_data_per_node"], [13, 3, 1, "", "train_eval"], [13, 2, 1, "", "training"]], "graphnet.models.utils": [[9, 5, 1, "", "calculate_distance_matrix"], [9, 5, 1, "", "calculate_xyzt_homophily"], [9, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[14, 0, 0, "-", "callbacks"], [14, 0, 0, "-", "labels"], [14, 0, 0, "-", "loss_functions"], [14, 0, 0, "-", "utils"]], "graphnet.training.callbacks": [[14, 1, 1, "", "PiecewiseLinearLR"], [14, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[14, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[14, 3, 1, "", "get_metrics"], [14, 3, 1, "", "init_predict_tqdm"], [14, 3, 1, "", "init_test_tqdm"], [14, 3, 1, "", "init_train_tqdm"], [14, 3, 1, "", "init_validation_tqdm"], [14, 3, 1, "", "on_train_epoch_end"], [14, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[14, 1, 1, "", "Direction"], [14, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[14, 3, 1, "", "__call__"], [14, 3, 1, "", "__init__"]], "graphnet.training.loss_functions": [[14, 1, 1, "", "BinaryCrossEntropyLoss"], [14, 1, 1, "", "EuclideanDistanceLoss"], [14, 1, 1, "", "LogCMK"], [14, 1, 1, "", "LogCoshLoss"], [14, 1, 1, "", "LossFunction"], [14, 1, 1, "", "MSELoss"], [14, 1, 1, "", "RMSELoss"], [14, 1, 1, "", "VonMisesFisher2DLoss"], [14, 1, 1, "", "VonMisesFisher3DLoss"], [14, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.BinaryCrossEntropyLoss": [[14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.loss_functions.EuclideanDistanceLoss": [[14, 3, 1, "", "_forward"], [14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.loss_functions.LogCMK": [[14, 3, 1, "", "backward"], [14, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LogCoshLoss": [[14, 3, 1, "", "_forward"], [14, 3, 1, "", "_log_cosh"], [14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.loss_functions.LossFunction": [[14, 3, 1, "", "_forward"], [14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 3, 1, "", "forward"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.loss_functions.MSELoss": [[14, 3, 1, "", "_forward"], [14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.loss_functions.RMSELoss": [[14, 3, 1, "", "_forward"], [14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.loss_functions.VonMisesFisher2DLoss": [[14, 3, 1, "", "_forward"], [14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.loss_functions.VonMisesFisher3DLoss": [[14, 3, 1, "", "_forward"], [14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[14, 3, 1, "", "_evaluate"], [14, 2, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [14, 3, 1, "", "log_cmk"], [14, 3, 1, "", "log_cmk_approx"], [14, 3, 1, "", "log_cmk_exact"], [14, 2, 1, "", "precision"], [14, 2, 1, "", "prepare_data_per_node"], [14, 2, 1, "", "training"]], "graphnet.training.utils": [[14, 5, 1, "", "get_predictions"], [14, 5, 1, "", "make_dataloader"], [14, 5, 1, "", "make_train_validation_dataloader"], [14, 5, 1, "", "save_results"]], "graphnet.utilities": [[15, 0, 0, "-", "filesys"], [15, 0, 0, "-", "imports"], [15, 0, 0, "-", "logging"], [15, 0, 0, "-", "maths"]], "graphnet.utilities.filesys": [[15, 5, 1, "", "find_i3_files"], [15, 5, 1, "", "has_extension"], [15, 5, 1, "", "is_gcd_file"], [15, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[15, 5, 1, "", "has_icecube_package"], [15, 5, 1, "", "has_torch_package"], [15, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[15, 1, 1, "", "LoggerMixin"], [15, 1, 1, "", "RepeatFilter"], [15, 5, 1, "", "get_formatters"], [15, 5, 1, "", "get_logger"], [15, 5, 1, "", "set_logging_level"], [15, 5, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[15, 3, 1, "", "_get_logger"], [15, 3, 1, "", "critical"], [15, 3, 1, "", "debug"], [15, 3, 1, "", "error"], [15, 3, 1, "", "info"], [15, 3, 1, "", "warning"]], "graphnet.utilities.logging.RepeatFilter": [[15, 3, 1, "", "filter"]], "graphnet.utilities.maths": [[15, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "subpackag": [0, 1, 2, 7, 9], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "data": [1, 2, 3, 4, 5, 6], "submodul": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "constant": 1, "dataconvert": 1, "dataset": 1, "pipelin": 1, "extractor": [2, 3], "i3extractor": 2, "i3featureextractor": 2, "i3genericextractor": 2, "i3hybridrecoextractor": 2, "i3retroextractor": 2, "i3splinempeextractor": 2, "i3truthextractor": 2, "i3tumextractor": 2, "util": [3, 6, 9, 10, 14, 15], "collect": 3, "frame": 3, "type": 3, "parquet": 4, "parquet_dataconvert": 4, "parquet_dataset": 4, "sqlite": 5, "sqlite_dataconvert": 5, "sqlite_dataset": 5, "sqlite_dataset_perturb": 5, "sqlite_select": 5, "sqlite_util": 5, "parquet_to_sqlit": 6, "random": 6, "deploy": [7, 8], "i3modul": 8, "graphnet_modul": 8, "model": [9, 10, 11, 12, 13], "coarsen": 9, "config": 9, "graph_build": 9, "standard_model": 9, "compon": 10, "layer": 10, "pool": 10, "detector": 11, "icecub": 11, "prototyp": 11, "gnn": [12, 16], "convnet": 12, "dynedg": 12, "dynedge_jinst": 12, "task": 13, "reconstruct": 13, "train": 14, "callback": 14, "label": 14, "loss_funct": 14, "weight_fit": 14, "filesi": 15, "import": 15, "log": 15, "math": 15, "welcom": 16, "reco": 16, "": 16, "document": 16, "indic": 16, "tabl": 16, "src": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"graphnet package": [[0, "graphnet-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [2, "subpackages"], [7, "subpackages"], [9, "subpackages"]], "Module contents": [[0, "module-graphnet"], [1, "module-graphnet.data"], [2, "module-graphnet.data.extractors"], [3, "module-graphnet.data.extractors.utilities"], [4, "module-graphnet.data.parquet"], [5, "module-graphnet.data.sqlite"], [6, "module-graphnet.data.utilities"], [7, "module-graphnet.deployment"], [8, "module-contents"], [9, "module-graphnet.models"], [10, "module-graphnet.models.components"], [11, "module-graphnet.models.detector"], [12, "module-graphnet.models.gnn"], [13, "module-graphnet.models.task"], [14, "module-graphnet.training"], [15, "module-graphnet.utilities"]], "graphnet.data package": [[1, "graphnet-data-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"]], "graphnet.data.constants module": [[1, "module-graphnet.data.constants"]], "graphnet.data.dataconverter module": [[1, "module-graphnet.data.dataconverter"]], "graphnet.data.dataset module": [[1, "module-graphnet.data.dataset"]], "graphnet.data.pipeline module": [[1, "module-graphnet.data.pipeline"]], "graphnet.data.extractors package": [[2, "graphnet-data-extractors-package"]], "graphnet.data.extractors.i3extractor module": [[2, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor module": [[2, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor module": [[2, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor module": [[2, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3retroextractor module": [[2, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor module": [[2, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor module": [[2, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor module": [[2, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities package": [[3, "graphnet-data-extractors-utilities-package"]], "graphnet.data.extractors.utilities.collections module": [[3, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames module": [[3, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types module": [[3, "module-graphnet.data.extractors.utilities.types"]], "graphnet.data.parquet package": [[4, "graphnet-data-parquet-package"]], "graphnet.data.parquet.parquet_dataconverter module": [[4, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset module": [[4, "module-graphnet.data.parquet.parquet_dataset"]], "graphnet.data.sqlite package": [[5, "graphnet-data-sqlite-package"]], "graphnet.data.sqlite.sqlite_dataconverter module": [[5, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset module": [[5, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed module": [[5, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection module": [[5, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities module": [[5, "module-graphnet.data.sqlite.sqlite_utilities"]], "graphnet.data.utilities package": [[6, "graphnet-data-utilities-package"]], "graphnet.data.utilities.parquet_to_sqlite module": [[6, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random module": [[6, "module-graphnet.data.utilities.random"]], "graphnet.deployment package": [[7, "graphnet-deployment-package"]], "graphnet.deployment.i3modules package": [[8, "graphnet-deployment-i3modules-package"]], "graphnet.deployment.i3modules.graphnet_module module": [[8, "graphnet-deployment-i3modules-graphnet-module-module"]], "graphnet.models package": [[9, "graphnet-models-package"]], "graphnet.models.coarsening module": [[9, "module-graphnet.models.coarsening"]], "graphnet.models.config module": [[9, "module-graphnet.models.config"]], "graphnet.models.graph_builders module": [[9, "module-graphnet.models.graph_builders"]], "graphnet.models.model module": [[9, "module-graphnet.models.model"]], "graphnet.models.standard_model module": [[9, "module-graphnet.models.standard_model"]], "graphnet.models.utils module": [[9, "module-graphnet.models.utils"]], "graphnet.models.components package": [[10, "graphnet-models-components-package"]], "graphnet.models.components.layers module": [[10, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool module": [[10, "module-graphnet.models.components.pool"]], "graphnet.models.components.utils module": [[10, "module-graphnet.models.components.utils"]], "graphnet.models.detector package": [[11, "graphnet-models-detector-package"]], "graphnet.models.detector.detector module": [[11, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube module": [[11, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prototype module": [[11, "module-graphnet.models.detector.prototype"]], "graphnet.models.gnn package": [[12, "graphnet-models-gnn-package"]], "graphnet.models.gnn.convnet module": [[12, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge module": [[12, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst module": [[12, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn module": [[12, "module-graphnet.models.gnn.gnn"]], "graphnet.models.task package": [[13, "graphnet-models-task-package"]], "graphnet.models.task.reconstruction module": [[13, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task module": [[13, "module-graphnet.models.task.task"]], "graphnet.training package": [[14, "graphnet-training-package"]], "graphnet.training.callbacks module": [[14, "module-graphnet.training.callbacks"]], "graphnet.training.labels module": [[14, "module-graphnet.training.labels"]], "graphnet.training.loss_functions module": [[14, "module-graphnet.training.loss_functions"]], "graphnet.training.utils module": [[14, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting module": [[14, "graphnet-training-weight-fitting-module"]], "graphnet.utilities package": [[15, "graphnet-utilities-package"]], "graphnet.utilities.filesys module": [[15, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports module": [[15, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging module": [[15, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths module": [[15, "module-graphnet.utilities.maths"]], "Welcome to gnn-reco\u2019s documentation!": [[16, "welcome-to-gnn-reco-s-documentation"]], "Indices and tables": [[16, "indices-and-tables"]], "src": [[17, "src"]]}, "indexentries": {"graphnet": [[0, "module-graphnet"]], "module": [[0, "module-graphnet"], [1, "module-graphnet.data"], [1, "module-graphnet.data.constants"], [1, "module-graphnet.data.dataconverter"], [1, "module-graphnet.data.dataset"], [1, "module-graphnet.data.pipeline"], [2, "module-graphnet.data.extractors"], [2, "module-graphnet.data.extractors.i3extractor"], [2, "module-graphnet.data.extractors.i3featureextractor"], [2, "module-graphnet.data.extractors.i3genericextractor"], [2, "module-graphnet.data.extractors.i3hybridrecoextractor"], [2, "module-graphnet.data.extractors.i3retroextractor"], [2, "module-graphnet.data.extractors.i3splinempeextractor"], [2, "module-graphnet.data.extractors.i3truthextractor"], [2, "module-graphnet.data.extractors.i3tumextractor"], [3, "module-graphnet.data.extractors.utilities"], [3, "module-graphnet.data.extractors.utilities.collections"], [3, "module-graphnet.data.extractors.utilities.frames"], [3, "module-graphnet.data.extractors.utilities.types"], [4, "module-graphnet.data.parquet"], [4, "module-graphnet.data.parquet.parquet_dataconverter"], [4, "module-graphnet.data.parquet.parquet_dataset"], [5, "module-graphnet.data.sqlite"], [5, "module-graphnet.data.sqlite.sqlite_dataconverter"], [5, "module-graphnet.data.sqlite.sqlite_dataset"], [5, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [5, "module-graphnet.data.sqlite.sqlite_selection"], [5, "module-graphnet.data.sqlite.sqlite_utilities"], [6, "module-graphnet.data.utilities"], [6, "module-graphnet.data.utilities.parquet_to_sqlite"], [6, "module-graphnet.data.utilities.random"], [7, "module-graphnet.deployment"], [9, "module-graphnet.models"], [9, "module-graphnet.models.coarsening"], [9, "module-graphnet.models.config"], [9, "module-graphnet.models.graph_builders"], [9, "module-graphnet.models.model"], [9, "module-graphnet.models.standard_model"], [9, "module-graphnet.models.utils"], [10, "module-graphnet.models.components"], [10, "module-graphnet.models.components.layers"], [10, "module-graphnet.models.components.pool"], [10, "module-graphnet.models.components.utils"], [11, "module-graphnet.models.detector"], [11, "module-graphnet.models.detector.detector"], [11, "module-graphnet.models.detector.icecube"], [11, "module-graphnet.models.detector.prototype"], [12, "module-graphnet.models.gnn"], [12, "module-graphnet.models.gnn.convnet"], [12, "module-graphnet.models.gnn.dynedge"], [12, "module-graphnet.models.gnn.dynedge_jinst"], [12, "module-graphnet.models.gnn.gnn"], [13, "module-graphnet.models.task"], [13, "module-graphnet.models.task.reconstruction"], [13, "module-graphnet.models.task.task"], [14, "module-graphnet.training"], [14, "module-graphnet.training.callbacks"], [14, "module-graphnet.training.labels"], [14, "module-graphnet.training.loss_functions"], [14, "module-graphnet.training.utils"], [15, "module-graphnet.utilities"], [15, "module-graphnet.utilities.filesys"], [15, "module-graphnet.utilities.imports"], [15, "module-graphnet.utilities.logging"], [15, "module-graphnet.utilities.maths"]], "columnmissingexception": [[1, "graphnet.data.dataset.ColumnMissingException"]], "deepcore (graphnet.data.constants.features attribute)": [[1, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[1, "graphnet.data.constants.TRUTH.DEEPCORE"]], "dataconverter (class in graphnet.data.dataconverter)": [[1, "graphnet.data.dataconverter.DataConverter"]], "dataset (class in graphnet.data.dataset)": [[1, "graphnet.data.dataset.Dataset"]], "features (class in graphnet.data.constants)": [[1, "graphnet.data.constants.FEATURES"]], "fileset (class in graphnet.data.dataconverter)": [[1, "graphnet.data.dataconverter.FileSet"]], "icecube86 (graphnet.data.constants.features attribute)": [[1, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[1, "graphnet.data.constants.TRUTH.ICECUBE86"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[1, "graphnet.data.pipeline.InSQLitePipeline"]], "truth (class in graphnet.data.constants)": [[1, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[1, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[1, "graphnet.data.constants.TRUTH.UPGRADE"]], "__call__() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.__call__"]], "__call__() (graphnet.data.pipeline.insqlitepipeline method)": [[1, "graphnet.data.pipeline.InSQLitePipeline.__call__"]], "__init__() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.__init__"]], "__init__() (graphnet.data.pipeline.insqlitepipeline method)": [[1, "graphnet.data.pipeline.InSQLitePipeline.__init__"]], "_check_missing_columns() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._check_missing_columns"]], "_create_graph() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._create_graph"]], "_create_table() (graphnet.data.pipeline.insqlitepipeline method)": [[1, "graphnet.data.pipeline.InSQLitePipeline._create_table"]], "_extract_data() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter._extract_data"]], "_get_all_indices() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._get_all_indices"]], "_get_dbang_label() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._get_dbang_label"]], "_get_labels() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._get_labels"]], "_init() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._init"]], "_iterate_over_batches_of_files() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter._iterate_over_batches_of_files"]], "_post_init() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._post_init"]], "_query() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._query"]], "_query_table() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._query_table"]], "_remove_missing_columns() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset._remove_missing_columns"]], "_save_filenames() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter._save_filenames"]], "_update_shared_variables() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter._update_shared_variables"]], "add_label() (graphnet.data.dataset.dataset method)": [[1, "graphnet.data.dataset.Dataset.add_label"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[1, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[1, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[1, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data": [[1, "module-graphnet.data"]], "graphnet.data.constants": [[1, "module-graphnet.data.constants"]], "graphnet.data.dataconverter": [[1, "module-graphnet.data.dataconverter"]], "graphnet.data.dataset": [[1, "module-graphnet.data.dataset"]], "graphnet.data.pipeline": [[1, "module-graphnet.data.pipeline"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[1, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[1, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[1, "graphnet.data.dataconverter.DataConverter.save_data"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[2, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[2, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[2, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[2, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[2, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[2, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "__call__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecube86 method)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecubeupgrade method)": [[2, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3pulsenoisetruthflagicecubeupgrade method)": [[2, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3hybridrecoextractor.i3galacticplanehybridrecoextractor method)": [[2, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[2, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3splinempeextractor.i3splinempeicextractor method)": [[2, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3tumextractor.i3tumextractor method)": [[2, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor.__call__"]], "__init__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__init__"]], "_cast_mc_tree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_mc_tree"]], "_cast_triggers() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_triggers"]], "_extract_per_pulse_attribute() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_per_pulse_attribute"]], "_extract_pulse_series_map() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_pulse_series_map"]], "_find_data_type() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._find_data_type"]], "_flatten_result() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result"]], "_flatten_result_mctree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result_mctree"]], "_get_keys() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[2, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._get_keys"]], "_get_primary_particle_interaction_type_and_elasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_particle_interaction_type_and_elasticity"]], "_get_primary_track_energy_and_inelasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_track_energy_and_inelasticity"]], "_load_gcd_data() (graphnet.data.extractors.i3extractor.i3extractor method)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor._load_gcd_data"]], "_muon_stopped() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[2, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._muon_stopped"]], "_try_get_key() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[2, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor._try_get_key"]], "graphnet.data.extractors": [[2, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor": [[2, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor": [[2, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor": [[2, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[2, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3retroextractor": [[2, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor": [[2, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor": [[2, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor": [[2, "module-graphnet.data.extractors.i3tumextractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[2, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[2, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[3, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[3, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[3, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.get_member_variables"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[3, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities": [[3, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[3, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[3, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[3, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[3, "graphnet.data.extractors.utilities.types.is_type"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[3, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[3, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[4, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[4, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[4, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet": [[4, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[4, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[4, "module-graphnet.data.parquet.parquet_dataset"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[4, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[4, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[5, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[5, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "_attach_index() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._attach_index"]], "_close_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[5, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._close_connection"]], "_create_table() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._create_table"]], "_establish_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[5, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._establish_connection"]], "_extract_everything() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_everything"]], "_extract_table_names() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_table_names"]], "_merge_temporary_databases() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._merge_temporary_databases"]], "_query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[5, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._query_table"]], "_submit_to_database() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._submit_to_database"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[5, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[5, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[5, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite": [[5, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[5, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[5, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[5, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[5, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[5, "module-graphnet.data.sqlite.sqlite_utilities"]], "is_pulsemap_check() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.is_pulsemap_check"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[5, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[5, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[5, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[6, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "_save_config() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[6, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter._save_config"]], "graphnet.data.utilities": [[6, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[6, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[6, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[6, "graphnet.data.utilities.random.pairwise_shuffle"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[6, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.deployment": [[7, "module-graphnet.deployment"]], "coarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.DOMCoarsening"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[9, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[9, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder"]], "loopbasedcoarsening (class in graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.LoopBasedCoarsening"]], "model (class in graphnet.models.model)": [[9, "graphnet.models.model.Model"]], "modelconfig (class in graphnet.models.config)": [[9, "graphnet.models.config.ModelConfig"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder"]], "standardmodel (class in graphnet.models.standard_model)": [[9, "graphnet.models.standard_model.StandardModel"]], "__call__() (graphnet.models.coarsening.loopbasedcoarsening method)": [[9, "graphnet.models.coarsening.LoopBasedCoarsening.__call__"]], "__init__() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.__init__"]], "__init__() (graphnet.models.config.modelconfig method)": [[9, "graphnet.models.config.ModelConfig.__init__"]], "_additional_features() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening._additional_features"]], "_additional_features() (graphnet.models.coarsening.customdomcoarsening method)": [[9, "graphnet.models.coarsening.CustomDOMCoarsening._additional_features"]], "_as_dict() (graphnet.models.config.modelconfig method)": [[9, "graphnet.models.config.ModelConfig._as_dict"]], "_perform_clustering() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domcoarsening method)": [[9, "graphnet.models.coarsening.DOMCoarsening._perform_clustering"]], "_serialise() (graphnet.models.config.modelconfig class method)": [[9, "graphnet.models.config.ModelConfig._serialise"]], "_transfer_attributes() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening._transfer_attributes"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.coarsening.customdomcoarsening attribute)": [[9, "graphnet.models.coarsening.CustomDOMCoarsening.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.coarsening.domandtimewindowcoarsening attribute)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.coarsening.domcoarsening attribute)": [[9, "graphnet.models.coarsening.DOMCoarsening.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.graph_builders.knngraphbuilder attribute)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.graph_builders.radialgraphbuilder attribute)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.standard_model.standardmodel attribute)": [[9, "graphnet.models.standard_model.StandardModel.allow_zero_length_dataloader_with_multiple_devices"]], "arguments (graphnet.models.config.modelconfig attribute)": [[9, "graphnet.models.config.ModelConfig.arguments"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[9, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[9, "graphnet.models.utils.calculate_xyzt_homophily"]], "class_name (graphnet.models.config.modelconfig attribute)": [[9, "graphnet.models.config.ModelConfig.class_name"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.compute_loss"]], "config (graphnet.models.model.model property)": [[9, "graphnet.models.model.Model.config"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "construct_model() (graphnet.models.config.modelconfig method)": [[9, "graphnet.models.config.ModelConfig.construct_model"]], "dump() (graphnet.models.config.modelconfig method)": [[9, "graphnet.models.config.ModelConfig.dump"]], "forward() (graphnet.models.coarsening.coarsening method)": [[9, "graphnet.models.coarsening.Coarsening.forward"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[9, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "forward() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.forward"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.forward"]], "from_config() (graphnet.models.model.model class method)": [[9, "graphnet.models.model.Model.from_config"]], "get_namespace_classes() (in module graphnet.models.config)": [[9, "graphnet.models.config.get_namespace_classes"]], "graphnet.models": [[9, "module-graphnet.models"]], "graphnet.models.coarsening": [[9, "module-graphnet.models.coarsening"]], "graphnet.models.config": [[9, "module-graphnet.models.config"]], "graphnet.models.graph_builders": [[9, "module-graphnet.models.graph_builders"]], "graphnet.models.model": [[9, "module-graphnet.models.model"]], "graphnet.models.standard_model": [[9, "module-graphnet.models.standard_model"]], "graphnet.models.utils": [[9, "module-graphnet.models.utils"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.inference"]], "is_graphnet_class() (in module graphnet.models.config)": [[9, "graphnet.models.config.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.models.config)": [[9, "graphnet.models.config.is_graphnet_module"]], "knn_graph_batch() (in module graphnet.models.utils)": [[9, "graphnet.models.utils.knn_graph_batch"]], "load() (graphnet.models.config.modelconfig class method)": [[9, "graphnet.models.config.ModelConfig.load"]], "load() (graphnet.models.model.model class method)": [[9, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.load_state_dict"]], "precision (graphnet.models.coarsening.customdomcoarsening attribute)": [[9, "graphnet.models.coarsening.CustomDOMCoarsening.precision"]], "precision (graphnet.models.coarsening.domandtimewindowcoarsening attribute)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.precision"]], "precision (graphnet.models.coarsening.domcoarsening attribute)": [[9, "graphnet.models.coarsening.DOMCoarsening.precision"]], "precision (graphnet.models.graph_builders.knngraphbuilder attribute)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder.precision"]], "precision (graphnet.models.graph_builders.radialgraphbuilder attribute)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder.precision"]], "precision (graphnet.models.standard_model.standardmodel attribute)": [[9, "graphnet.models.standard_model.StandardModel.precision"]], "prepare_data_per_node (graphnet.models.coarsening.customdomcoarsening attribute)": [[9, "graphnet.models.coarsening.CustomDOMCoarsening.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.coarsening.domandtimewindowcoarsening attribute)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.coarsening.domcoarsening attribute)": [[9, "graphnet.models.coarsening.DOMCoarsening.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.graph_builders.knngraphbuilder attribute)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.graph_builders.radialgraphbuilder attribute)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.standard_model.standardmodel attribute)": [[9, "graphnet.models.standard_model.StandardModel.prepare_data_per_node"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[9, "graphnet.models.coarsening.Coarsening.reduce_options"]], "save() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.save"]], "save_config() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.save_config"]], "save_config() (in module graphnet.models.config)": [[9, "graphnet.models.config.save_config"]], "save_state_dict() (graphnet.models.model.model method)": [[9, "graphnet.models.model.Model.save_state_dict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.train"]], "training (graphnet.models.coarsening.coarsening attribute)": [[9, "graphnet.models.coarsening.Coarsening.training"]], "training (graphnet.models.coarsening.customdomcoarsening attribute)": [[9, "graphnet.models.coarsening.CustomDOMCoarsening.training"]], "training (graphnet.models.coarsening.domandtimewindowcoarsening attribute)": [[9, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.training"]], "training (graphnet.models.coarsening.domcoarsening attribute)": [[9, "graphnet.models.coarsening.DOMCoarsening.training"]], "training (graphnet.models.graph_builders.euclideangraphbuilder attribute)": [[9, "graphnet.models.graph_builders.EuclideanGraphBuilder.training"]], "training (graphnet.models.graph_builders.graphbuilder attribute)": [[9, "graphnet.models.graph_builders.GraphBuilder.training"]], "training (graphnet.models.graph_builders.knngraphbuilder attribute)": [[9, "graphnet.models.graph_builders.KNNGraphBuilder.training"]], "training (graphnet.models.graph_builders.radialgraphbuilder attribute)": [[9, "graphnet.models.graph_builders.RadialGraphBuilder.training"]], "training (graphnet.models.model.model attribute)": [[9, "graphnet.models.model.Model.training"]], "training (graphnet.models.standard_model.standardmodel attribute)": [[9, "graphnet.models.standard_model.StandardModel.training"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.training_step"]], "traverse_and_apply() (in module graphnet.models.config)": [[9, "graphnet.models.config.traverse_and_apply"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[9, "graphnet.models.coarsening.unbatch_edge_index"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[9, "graphnet.models.standard_model.StandardModel.validation_step"]], "dynedgeconv (class in graphnet.models.components.layers)": [[10, "graphnet.models.components.layers.DynEdgeConv"]], "_group_identical() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool._group_identical"]], "check_db_size() (in module graphnet.models.components.utils)": [[10, "graphnet.models.components.utils.check_db_size"]], "fit_scaler() (in module graphnet.models.components.utils)": [[10, "graphnet.models.components.utils.fit_scaler"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[10, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components": [[10, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[10, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[10, "module-graphnet.models.components.pool"]], "graphnet.models.components.utils": [[10, "module-graphnet.models.components.utils"]], "group_by() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[10, "graphnet.models.components.pool.sum_pool_x"]], "detector (class in graphnet.models.detector.detector)": [[11, "graphnet.models.detector.detector.Detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[11, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[11, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "prototype (class in graphnet.models.detector.prototype)": [[11, "graphnet.models.detector.prototype.Prototype"]], "_forward() (graphnet.models.detector.detector.detector method)": [[11, "graphnet.models.detector.detector.Detector._forward"]], "_forward() (graphnet.models.detector.icecube.icecube86 method)": [[11, "graphnet.models.detector.icecube.IceCube86._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade method)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade_v2 method)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2._forward"]], "_forward() (graphnet.models.detector.prototype.prototype method)": [[11, "graphnet.models.detector.prototype.Prototype._forward"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.detector.detector attribute)": [[11, "graphnet.models.detector.detector.Detector.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.icecube.icecube86 attribute)": [[11, "graphnet.models.detector.icecube.IceCube86.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[11, "graphnet.models.detector.icecube.IceCubeDeepCore.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.detector.prototype.prototype attribute)": [[11, "graphnet.models.detector.prototype.Prototype.allow_zero_length_dataloader_with_multiple_devices"]], "features (graphnet.models.detector.detector.detector property)": [[11, "graphnet.models.detector.detector.Detector.features"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[11, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "features (graphnet.models.detector.prototype.prototype attribute)": [[11, "graphnet.models.detector.prototype.Prototype.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[11, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector": [[11, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[11, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[11, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prototype": [[11, "module-graphnet.models.detector.prototype"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[11, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[11, "graphnet.models.detector.detector.Detector.nb_outputs"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "precision (graphnet.models.detector.detector.detector attribute)": [[11, "graphnet.models.detector.detector.Detector.precision"]], "precision (graphnet.models.detector.icecube.icecube86 attribute)": [[11, "graphnet.models.detector.icecube.IceCube86.precision"]], "precision (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[11, "graphnet.models.detector.icecube.IceCubeDeepCore.precision"]], "precision (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade.precision"]], "precision (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.precision"]], "precision (graphnet.models.detector.prototype.prototype attribute)": [[11, "graphnet.models.detector.prototype.Prototype.precision"]], "prepare_data_per_node (graphnet.models.detector.detector.detector attribute)": [[11, "graphnet.models.detector.detector.Detector.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.icecube.icecube86 attribute)": [[11, "graphnet.models.detector.icecube.IceCube86.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[11, "graphnet.models.detector.icecube.IceCubeDeepCore.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.detector.prototype.prototype attribute)": [[11, "graphnet.models.detector.prototype.Prototype.prepare_data_per_node"]], "training (graphnet.models.detector.detector.detector attribute)": [[11, "graphnet.models.detector.detector.Detector.training"]], "training (graphnet.models.detector.icecube.icecube86 attribute)": [[11, "graphnet.models.detector.icecube.IceCube86.training"]], "training (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[11, "graphnet.models.detector.icecube.IceCubeDeepCore.training"]], "training (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade.training"]], "training (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[11, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.training"]], "training (graphnet.models.detector.prototype.prototype attribute)": [[11, "graphnet.models.detector.prototype.Prototype.training"]], "convnet (class in graphnet.models.gnn.convnet)": [[12, "graphnet.models.gnn.convnet.ConvNet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[12, "graphnet.models.gnn.dynedge.DynEdge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "gnn (class in graphnet.models.gnn.gnn)": [[12, "graphnet.models.gnn.gnn.GNN"]], "__init__() (graphnet.models.gnn.convnet.convnet method)": [[12, "graphnet.models.gnn.convnet.ConvNet.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge.__init__"]], "__init__() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.__init__"]], "_calculate_global_variables() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge._calculate_global_variables"]], "_construct_layers() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge._construct_layers"]], "_global_pooling() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge._global_pooling"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.gnn.convnet.convnet attribute)": [[12, "graphnet.models.gnn.convnet.ConvNet.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.gnn.dynedge.dynedge attribute)": [[12, "graphnet.models.gnn.dynedge.DynEdge.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.gnn.dynedge_jinst.dynedgejinst attribute)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.gnn.gnn.gnn attribute)": [[12, "graphnet.models.gnn.gnn.GNN.allow_zero_length_dataloader_with_multiple_devices"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[12, "graphnet.models.gnn.convnet.ConvNet.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[12, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[12, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn": [[12, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[12, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[12, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[12, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[12, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[12, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[12, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "precision (graphnet.models.gnn.convnet.convnet attribute)": [[12, "graphnet.models.gnn.convnet.ConvNet.precision"]], "precision (graphnet.models.gnn.dynedge.dynedge attribute)": [[12, "graphnet.models.gnn.dynedge.DynEdge.precision"]], "precision (graphnet.models.gnn.dynedge_jinst.dynedgejinst attribute)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.precision"]], "precision (graphnet.models.gnn.gnn.gnn attribute)": [[12, "graphnet.models.gnn.gnn.GNN.precision"]], "prepare_data_per_node (graphnet.models.gnn.convnet.convnet attribute)": [[12, "graphnet.models.gnn.convnet.ConvNet.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.gnn.dynedge.dynedge attribute)": [[12, "graphnet.models.gnn.dynedge.DynEdge.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.gnn.dynedge_jinst.dynedgejinst attribute)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.gnn.gnn.gnn attribute)": [[12, "graphnet.models.gnn.gnn.GNN.prepare_data_per_node"]], "training (graphnet.models.gnn.convnet.convnet attribute)": [[12, "graphnet.models.gnn.convnet.ConvNet.training"]], "training (graphnet.models.gnn.dynedge.dynedge attribute)": [[12, "graphnet.models.gnn.dynedge.DynEdge.training"]], "training (graphnet.models.gnn.dynedge_jinst.dynedgejinst attribute)": [[12, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.training"]], "training (graphnet.models.gnn.gnn.gnn attribute)": [[12, "graphnet.models.gnn.gnn.GNN.training"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "binaryclassificationtask (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "passoutput1 (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.PassOutput1"]], "passoutput2 (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.PassOutput2"]], "passoutput3 (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.PassOutput3"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.PositionReconstruction"]], "task (class in graphnet.models.task.task)": [[13, "graphnet.models.task.task.Task"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[13, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "_forward() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task._forward"]], "_validate_and_set_transforms() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task._validate_and_set_transforms"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstruction.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.binaryclassificationtask attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTask.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.binaryclassificationtasklogits attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstruction.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.InelasticityReconstruction.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.passoutput1 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput1.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.passoutput2 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput2.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.passoutput3 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput3.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.PositionReconstruction.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.timereconstruction attribute)": [[13, "graphnet.models.task.reconstruction.TimeReconstruction.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.VertexReconstruction.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstruction.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.models.task.task.task attribute)": [[13, "graphnet.models.task.task.Task.allow_zero_length_dataloader_with_multiple_devices"]], "compute_loss() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task": [[13, "module-graphnet.models.task"]], "graphnet.models.task.reconstruction": [[13, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[13, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.binaryclassificationtask attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.binaryclassificationtasklogits attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.passoutput1 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput1.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.passoutput2 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput2.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.passoutput3 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput3.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[13, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[13, "graphnet.models.task.task.Task.nb_inputs"]], "precision (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstruction.precision"]], "precision (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.precision"]], "precision (graphnet.models.task.reconstruction.binaryclassificationtask attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTask.precision"]], "precision (graphnet.models.task.reconstruction.binaryclassificationtasklogits attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits.precision"]], "precision (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.precision"]], "precision (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstruction.precision"]], "precision (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.precision"]], "precision (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.InelasticityReconstruction.precision"]], "precision (graphnet.models.task.reconstruction.passoutput1 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput1.precision"]], "precision (graphnet.models.task.reconstruction.passoutput2 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput2.precision"]], "precision (graphnet.models.task.reconstruction.passoutput3 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput3.precision"]], "precision (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.PositionReconstruction.precision"]], "precision (graphnet.models.task.reconstruction.timereconstruction attribute)": [[13, "graphnet.models.task.reconstruction.TimeReconstruction.precision"]], "precision (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.VertexReconstruction.precision"]], "precision (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstruction.precision"]], "precision (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.precision"]], "precision (graphnet.models.task.task.task attribute)": [[13, "graphnet.models.task.task.Task.precision"]], "prepare_data_per_node (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstruction.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.binaryclassificationtask attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTask.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.binaryclassificationtasklogits attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstruction.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.InelasticityReconstruction.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.passoutput1 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput1.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.passoutput2 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput2.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.passoutput3 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput3.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.PositionReconstruction.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.timereconstruction attribute)": [[13, "graphnet.models.task.reconstruction.TimeReconstruction.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.VertexReconstruction.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstruction.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.prepare_data_per_node"]], "prepare_data_per_node (graphnet.models.task.task.task attribute)": [[13, "graphnet.models.task.task.Task.prepare_data_per_node"]], "train_eval() (graphnet.models.task.task.task method)": [[13, "graphnet.models.task.task.Task.train_eval"]], "training (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstruction.training"]], "training (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.training"]], "training (graphnet.models.task.reconstruction.binaryclassificationtask attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTask.training"]], "training (graphnet.models.task.reconstruction.binaryclassificationtasklogits attribute)": [[13, "graphnet.models.task.reconstruction.BinaryClassificationTaskLogits.training"]], "training (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.training"]], "training (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstruction.training"]], "training (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[13, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.training"]], "training (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.InelasticityReconstruction.training"]], "training (graphnet.models.task.reconstruction.passoutput1 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput1.training"]], "training (graphnet.models.task.reconstruction.passoutput2 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput2.training"]], "training (graphnet.models.task.reconstruction.passoutput3 attribute)": [[13, "graphnet.models.task.reconstruction.PassOutput3.training"]], "training (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.PositionReconstruction.training"]], "training (graphnet.models.task.reconstruction.timereconstruction attribute)": [[13, "graphnet.models.task.reconstruction.TimeReconstruction.training"]], "training (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.VertexReconstruction.training"]], "training (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstruction.training"]], "training (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[13, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.training"]], "training (graphnet.models.task.task.task attribute)": [[13, "graphnet.models.task.task.Task.training"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "direction (class in graphnet.training.labels)": [[14, "graphnet.training.labels.Direction"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "label (class in graphnet.training.labels)": [[14, "graphnet.training.labels.Label"]], "logcmk (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.MSELoss"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[14, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[14, "graphnet.training.callbacks.ProgressBar"]], "rmseloss (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "__call__() (graphnet.training.labels.label method)": [[14, "graphnet.training.labels.Label.__call__"]], "__init__() (graphnet.training.labels.label method)": [[14, "graphnet.training.labels.Label.__init__"]], "_evaluate() (graphnet.training.loss_functions.vonmisesfisherloss method)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss._evaluate"]], "_forward() (graphnet.training.loss_functions.euclideandistanceloss method)": [[14, "graphnet.training.loss_functions.EuclideanDistanceLoss._forward"]], "_forward() (graphnet.training.loss_functions.logcoshloss method)": [[14, "graphnet.training.loss_functions.LogCoshLoss._forward"]], "_forward() (graphnet.training.loss_functions.lossfunction method)": [[14, "graphnet.training.loss_functions.LossFunction._forward"]], "_forward() (graphnet.training.loss_functions.mseloss method)": [[14, "graphnet.training.loss_functions.MSELoss._forward"]], "_forward() (graphnet.training.loss_functions.rmseloss method)": [[14, "graphnet.training.loss_functions.RMSELoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher2dloss method)": [[14, "graphnet.training.loss_functions.VonMisesFisher2DLoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher3dloss method)": [[14, "graphnet.training.loss_functions.VonMisesFisher3DLoss._forward"]], "_log_cosh() (graphnet.training.loss_functions.logcoshloss class method)": [[14, "graphnet.training.loss_functions.LogCoshLoss._log_cosh"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.binarycrossentropyloss attribute)": [[14, "graphnet.training.loss_functions.BinaryCrossEntropyLoss.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.euclideandistanceloss attribute)": [[14, "graphnet.training.loss_functions.EuclideanDistanceLoss.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.logcoshloss attribute)": [[14, "graphnet.training.loss_functions.LogCoshLoss.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.lossfunction attribute)": [[14, "graphnet.training.loss_functions.LossFunction.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.mseloss attribute)": [[14, "graphnet.training.loss_functions.MSELoss.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.rmseloss attribute)": [[14, "graphnet.training.loss_functions.RMSELoss.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.vonmisesfisher2dloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisher2DLoss.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.vonmisesfisher3dloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisher3DLoss.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (graphnet.training.loss_functions.vonmisesfisherloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss.allow_zero_length_dataloader_with_multiple_devices"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[14, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[14, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[14, "graphnet.training.loss_functions.LossFunction.forward"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[14, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[14, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "get_predictions() (in module graphnet.training.utils)": [[14, "graphnet.training.utils.get_predictions"]], "graphnet.training": [[14, "module-graphnet.training"]], "graphnet.training.callbacks": [[14, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[14, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[14, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[14, "module-graphnet.training.utils"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[14, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[14, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[14, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[14, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "make_dataloader() (in module graphnet.training.utils)": [[14, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[14, "graphnet.training.utils.make_train_validation_dataloader"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[14, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[14, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "precision (graphnet.training.loss_functions.binarycrossentropyloss attribute)": [[14, "graphnet.training.loss_functions.BinaryCrossEntropyLoss.precision"]], "precision (graphnet.training.loss_functions.euclideandistanceloss attribute)": [[14, "graphnet.training.loss_functions.EuclideanDistanceLoss.precision"]], "precision (graphnet.training.loss_functions.logcoshloss attribute)": [[14, "graphnet.training.loss_functions.LogCoshLoss.precision"]], "precision (graphnet.training.loss_functions.lossfunction attribute)": [[14, "graphnet.training.loss_functions.LossFunction.precision"]], "precision (graphnet.training.loss_functions.mseloss attribute)": [[14, "graphnet.training.loss_functions.MSELoss.precision"]], "precision (graphnet.training.loss_functions.rmseloss attribute)": [[14, "graphnet.training.loss_functions.RMSELoss.precision"]], "precision (graphnet.training.loss_functions.vonmisesfisher2dloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisher2DLoss.precision"]], "precision (graphnet.training.loss_functions.vonmisesfisher3dloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisher3DLoss.precision"]], "precision (graphnet.training.loss_functions.vonmisesfisherloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss.precision"]], "prepare_data_per_node (graphnet.training.loss_functions.binarycrossentropyloss attribute)": [[14, "graphnet.training.loss_functions.BinaryCrossEntropyLoss.prepare_data_per_node"]], "prepare_data_per_node (graphnet.training.loss_functions.euclideandistanceloss attribute)": [[14, "graphnet.training.loss_functions.EuclideanDistanceLoss.prepare_data_per_node"]], "prepare_data_per_node (graphnet.training.loss_functions.logcoshloss attribute)": [[14, "graphnet.training.loss_functions.LogCoshLoss.prepare_data_per_node"]], "prepare_data_per_node (graphnet.training.loss_functions.lossfunction attribute)": [[14, "graphnet.training.loss_functions.LossFunction.prepare_data_per_node"]], "prepare_data_per_node (graphnet.training.loss_functions.mseloss attribute)": [[14, "graphnet.training.loss_functions.MSELoss.prepare_data_per_node"]], "prepare_data_per_node (graphnet.training.loss_functions.rmseloss attribute)": [[14, "graphnet.training.loss_functions.RMSELoss.prepare_data_per_node"]], "prepare_data_per_node (graphnet.training.loss_functions.vonmisesfisher2dloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisher2DLoss.prepare_data_per_node"]], "prepare_data_per_node (graphnet.training.loss_functions.vonmisesfisher3dloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisher3DLoss.prepare_data_per_node"]], "prepare_data_per_node (graphnet.training.loss_functions.vonmisesfisherloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss.prepare_data_per_node"]], "save_results() (in module graphnet.training.utils)": [[14, "graphnet.training.utils.save_results"]], "training (graphnet.training.loss_functions.binarycrossentropyloss attribute)": [[14, "graphnet.training.loss_functions.BinaryCrossEntropyLoss.training"]], "training (graphnet.training.loss_functions.euclideandistanceloss attribute)": [[14, "graphnet.training.loss_functions.EuclideanDistanceLoss.training"]], "training (graphnet.training.loss_functions.logcoshloss attribute)": [[14, "graphnet.training.loss_functions.LogCoshLoss.training"]], "training (graphnet.training.loss_functions.lossfunction attribute)": [[14, "graphnet.training.loss_functions.LossFunction.training"]], "training (graphnet.training.loss_functions.mseloss attribute)": [[14, "graphnet.training.loss_functions.MSELoss.training"]], "training (graphnet.training.loss_functions.rmseloss attribute)": [[14, "graphnet.training.loss_functions.RMSELoss.training"]], "training (graphnet.training.loss_functions.vonmisesfisher2dloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisher2DLoss.training"]], "training (graphnet.training.loss_functions.vonmisesfisher3dloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisher3DLoss.training"]], "training (graphnet.training.loss_functions.vonmisesfisherloss attribute)": [[14, "graphnet.training.loss_functions.VonMisesFisherLoss.training"]], "loggermixin (class in graphnet.utilities.logging)": [[15, "graphnet.utilities.logging.LoggerMixin"]], "repeatfilter (class in graphnet.utilities.logging)": [[15, "graphnet.utilities.logging.RepeatFilter"]], "_get_logger() (graphnet.utilities.logging.loggermixin method)": [[15, "graphnet.utilities.logging.LoggerMixin._get_logger"]], "critical() (graphnet.utilities.logging.loggermixin method)": [[15, "graphnet.utilities.logging.LoggerMixin.critical"]], "debug() (graphnet.utilities.logging.loggermixin method)": [[15, "graphnet.utilities.logging.LoggerMixin.debug"]], "eps_like() (in module graphnet.utilities.maths)": [[15, "graphnet.utilities.maths.eps_like"]], "error() (graphnet.utilities.logging.loggermixin method)": [[15, "graphnet.utilities.logging.LoggerMixin.error"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[15, "graphnet.utilities.logging.RepeatFilter.filter"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[15, "graphnet.utilities.filesys.find_i3_files"]], "get_formatters() (in module graphnet.utilities.logging)": [[15, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[15, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities": [[15, "module-graphnet.utilities"]], "graphnet.utilities.filesys": [[15, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports": [[15, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging": [[15, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths": [[15, "module-graphnet.utilities.maths"]], "has_extension() (in module graphnet.utilities.filesys)": [[15, "graphnet.utilities.filesys.has_extension"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[15, "graphnet.utilities.imports.has_icecube_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[15, "graphnet.utilities.imports.has_torch_package"]], "info() (graphnet.utilities.logging.loggermixin method)": [[15, "graphnet.utilities.logging.LoggerMixin.info"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[15, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[15, "graphnet.utilities.filesys.is_i3_file"]], "requires_icecube() (in module graphnet.utilities.imports)": [[15, "graphnet.utilities.imports.requires_icecube"]], "set_logging_level() (in module graphnet.utilities.logging)": [[15, "graphnet.utilities.logging.set_logging_level"]], "warn_once() (in module graphnet.utilities.logging)": [[15, "graphnet.utilities.logging.warn_once"]], "warning() (graphnet.utilities.logging.loggermixin method)": [[15, "graphnet.utilities.logging.LoggerMixin.warning"]]}})