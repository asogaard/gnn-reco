Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.data", "api/graphnet.data.extractors", "api/graphnet.data.extractors.utilities", "api/graphnet.data.parquet", "api/graphnet.data.sqlite", "api/graphnet.data.utilities", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.models", "api/graphnet.models.components", "api/graphnet.models.detector", "api/graphnet.models.gnn", "api/graphnet.models.task", "api/graphnet.pisa", "api/graphnet.training", "api/graphnet.utilities", "api/graphnet.utilities.config", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.data.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.utilities.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.models.rst", "api/graphnet.models.components.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.task.rst", "api/graphnet.pisa.rst", "api/graphnet.training.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.config.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "data", "extractors", "utilities", "parquet", "sqlite", "utilities", "deployment", "i3modules", "models", "components", "detector", "gnn", "task", "pisa", "training", "utilities", "config", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 8, 19, 20, 21, 22], "i": [0, 1, 2, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22], "an": [0, 2, 4, 6, 7, 9, 16, 17, 20, 21, 22], "open": [0, 20, 21], "sourc": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "python": [0, 1, 2, 3, 4, 20, 21, 22], "framework": [0, 21], "aim": [0, 1, 20, 21], "provid": [0, 1, 2, 6, 10, 16, 20, 21, 22], "high": [0, 21], "qualiti": [0, 21], "user": [0, 10, 16, 21, 22], "friendli": [0, 21], "end": [0, 1, 2, 21], "function": [0, 2, 4, 6, 7, 10, 11, 14, 15, 16, 17, 18, 21], "perform": [0, 10, 11, 13, 14, 21], "reconstruct": [0, 1, 2, 3, 8, 9, 10, 21], "task": [0, 1, 10, 16, 20, 21], "neutrino": [0, 1, 6, 15, 21], "telescop": [0, 1, 21], "us": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22], "graph": [0, 1, 2, 6, 10, 11, 12, 16, 20, 21], "neural": [0, 1, 21], "network": [0, 1, 13, 21], "gnn": [0, 1, 2, 9, 10, 15, 21, 22], "make": [0, 2, 16, 18, 20, 21, 22], "fast": [0, 21, 22], "easi": [0, 21], "train": [0, 1, 6, 7, 8, 10, 17, 18, 19, 21, 22], "complex": [0, 10, 21], "model": [0, 1, 6, 8, 9, 15, 16, 17, 18, 19, 21, 22], "can": [0, 1, 2, 3, 6, 7, 11, 15, 16, 18, 20, 21, 22], "event": [0, 1, 2, 6, 7, 10, 11, 14, 15, 16, 18, 21], "state": [0, 21], "art": [0, 21], "arbitrari": [0, 21], "detector": [0, 1, 3, 9, 10, 21], "configur": [0, 1, 2, 9, 10, 15, 17, 21], "infer": [0, 1, 2, 8, 9, 10, 14, 21, 22], "time": [0, 2, 6, 10, 11, 12, 14, 17, 21, 22], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 18, 20, 21, 22], "order": [0, 4, 10, 21], "magnitud": [0, 21], "faster": [0, 21], "than": [0, 2, 14, 16, 17, 21], "tradit": [0, 21], "techniqu": [0, 21], "common": [0, 1, 16, 17, 21], "ml": [0, 1, 21], "develop": [0, 1, 20, 21, 22], "physicist": [0, 1, 21], "wish": [0, 20, 21], "tool": [0, 1, 21], "research": [0, 21], "By": [0, 7, 14, 21], "unit": [0, 2, 17, 20, 21], "both": [0, 3, 14, 15, 21], "group": [0, 2, 11, 21], "increas": [0, 16, 21], "longev": [0, 21], "usabl": [0, 21], "individu": [0, 2, 6, 10, 11, 13, 21], "code": [0, 3, 6, 18, 21], "contribut": [0, 21, 22], "from": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 15, 16, 17, 18, 20, 21, 22], "build": [0, 1, 10, 12, 18, 21], "gener": [0, 2, 3, 6, 14, 16, 21], "reusabl": [0, 21], "softwar": [0, 16, 21], "packag": [0, 1, 7, 17, 18, 20, 21, 22], "base": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "engin": [0, 21], "best": [0, 20, 21], "practic": [0, 20, 21], "lower": [0, 15, 21], "technic": [0, 21], "threshold": [0, 10, 21], "most": [0, 1, 7, 21, 22], "scientif": [0, 1, 21], "problem": [0, 20, 21], "The": [0, 2, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21], "improv": [0, 1, 17, 21], "classif": [0, 1, 10, 16, 21], "yield": [0, 13, 15, 16, 21], "veri": [0, 7, 21], "accur": [0, 21], "e": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22], "g": [0, 1, 2, 3, 4, 6, 7, 10, 11, 14, 16, 20, 21, 22], "low": [0, 21], "energi": [0, 2, 14, 16, 21], "observ": [0, 21], "icecub": [0, 1, 3, 4, 9, 10, 17, 21, 22], "here": [0, 20, 21, 22], "implement": [0, 1, 2, 3, 5, 6, 11, 13, 16, 20, 21], "wa": [0, 21], "appli": [0, 2, 3, 6, 10, 11, 13, 18, 21], "oscil": [0, 15, 21], "lead": [0, 21], "signific": [0, 21], "angular": [0, 21], "rang": [0, 14, 21], "relev": [0, 1, 4, 7, 17, 20, 21], "studi": [0, 21], "furthermor": [0, 21], "shown": [0, 21], "could": [0, 20, 21], "muon": [0, 6, 21], "v": [0, 14, 21], "therebi": [0, 1, 18, 21], "effici": [0, 21], "puriti": [0, 21], "sampl": [0, 7, 21], "analysi": [0, 2, 21, 22], "similarli": [0, 4, 21], "ha": [0, 2, 4, 5, 6, 13, 16, 17, 21, 22], "great": [0, 21], "point": [0, 3, 16, 21], "analys": [0, 8, 15, 21], "final": [0, 11, 16, 18, 21], "millisecond": [0, 21], "allow": [0, 8, 9, 10, 11, 16, 21, 22], "whole": [0, 21], "new": [0, 1, 11, 20, 21], "type": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "cosmic": [0, 21], "alert": [0, 21], "which": [0, 2, 3, 4, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 21, 22], "were": [0, 21], "previous": [0, 21], "unfeas": [0, 21], "possibl": [0, 4, 20, 21], "identifi": [0, 2, 3, 6, 18, 21], "10": [0, 2, 10, 16, 17, 21], "tev": [0, 21], "monitor": [0, 21], "rate": [0, 16, 21], "direct": [0, 14, 16, 21], "real": [0, 21], "thi": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22], "enabl": [0, 2, 17, 21], "first": [0, 16, 20, 21], "ever": [0, 21], "despit": [0, 21], "larg": [0, 16, 21], "background": [0, 21], "origin": [0, 15, 21], "compris": [0, 21], "number": [0, 2, 6, 7, 11, 12, 13, 14, 16, 17, 21], "modul": [0, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "necessari": [0, 4, 20, 21], "workflow": [0, 21], "ingest": [0, 1, 2, 12, 21], "raw": [0, 21], "data": [0, 1, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22], "domain": [0, 1, 2, 8, 21], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 16, 20, 21, 22], "format": [0, 1, 2, 4, 5, 6, 15, 18, 20, 21, 22], "deploi": [0, 1, 8, 9, 21], "chain": [0, 1, 8, 9, 10, 21, 22], "illustr": [0, 20, 21], "figur": [0, 15, 21], "below": [0, 7, 15, 16, 20, 21, 22], "level": [0, 2, 3, 6, 10, 11, 17, 21, 22], "overview": [0, 21], "typic": [0, 4, 21], "convert": [0, 1, 2, 4, 5, 6, 7, 21, 22], "industri": [0, 2, 21], "standard": [0, 2, 6, 7, 9, 10, 17, 20, 21], "intermedi": [0, 1, 2, 5, 6, 13, 21, 22], "file": [0, 1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 17, 18, 21, 22], "read": [0, 2, 4, 5, 6, 10, 12, 13, 14, 21, 22], "simpl": [0, 10, 21], "physic": [0, 1, 3, 4, 6, 8, 9, 10, 14, 21], "orient": [0, 10, 21], "compon": [0, 1, 10, 21], "manag": [0, 3, 16, 21], "experi": [0, 1, 16, 21], "log": [0, 1, 14, 16, 21, 22], "deploy": [0, 1, 19, 21], "modular": [0, 10, 21], "subclass": [0, 10, 21], "torch": [0, 2, 5, 6, 9, 10, 11, 17, 21, 22], "nn": [0, 10, 11, 21], "mean": [0, 2, 5, 6, 10, 13, 16, 18, 21], "onli": [0, 1, 2, 6, 10, 11, 14, 15, 16, 17, 18, 21, 22], "need": [0, 4, 10, 16, 21, 22], "import": [0, 1, 6, 10, 21], "few": [0, 10, 20, 21], "exist": [0, 2, 6, 10, 18, 21], "purpos": [0, 10, 16, 21], "built": [0, 10, 21], "them": [0, 1, 4, 10, 13, 14, 15, 21, 22], "togeth": [0, 10, 21], "form": [0, 10, 14, 21], "complet": [0, 10, 21], "extend": [0, 1, 21], "suit": [0, 21], "through": [0, 16, 21], "layer": [0, 10, 13, 14, 21], "connect": [0, 10, 16, 21], "etc": [0, 16, 21], "optimis": [0, 1, 21], "differ": [0, 2, 3, 6, 9, 10, 20, 21, 22], "track": [0, 3, 14, 20, 21], "These": [0, 20, 21], "prepar": [0, 16, 21], "satisfi": [0, 21], "o": [0, 14, 21], "load": [0, 2, 7, 10, 18, 21], "requir": [0, 3, 6, 14, 16, 21, 22], "when": [0, 2, 4, 6, 11, 13, 20, 21, 22], "batch": [0, 2, 10, 11, 16, 17, 21], "do": [0, 16, 18, 20, 21, 22], "predict": [0, 2, 3, 9, 10, 13, 14, 16, 21], "either": [0, 2, 16, 21, 22], "contain": [0, 2, 4, 5, 6, 9, 10, 13, 14, 16, 17, 21, 22], "imag": [0, 1, 20, 21, 22], "portabl": [0, 21], "depend": [0, 21, 22], "free": [0, 16, 21], "split": [0, 10, 21], "up": [0, 2, 20, 21, 22], "abov": [0, 15, 16, 21, 22], "interfac": [0, 15, 21, 22], "block": [0, 1, 21], "pre": [0, 6, 12, 20, 21], "directli": [0, 3, 17, 21], "while": [0, 3, 16, 21], "continu": [0, 16, 21], "expand": [0, 21], "": [0, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 21, 22], "capabl": [0, 21], "conveni": [1, 20, 22], "collabor": 1, "solv": [1, 20], "It": [1, 4, 6, 20], "leverag": 1, "advanc": [1, 11], "machin": [1, 22], "learn": [1, 16, 22], "without": [1, 15, 16, 22], "have": [1, 2, 3, 6, 7, 11, 14, 20, 22], "expert": 1, "themselv": [1, 18], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 2, 3, 5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22], "streamlin": 1, "process": [1, 2, 3, 6, 9, 12, 13, 20, 22], "transform": [1, 11, 14, 16], "extens": [1, 17], "basic": 1, "across": [1, 2, 4, 6, 7, 10, 11, 16, 17, 18], "variou": [1, 9], "easili": 1, "architectur": [1, 10, 13], "main": [1, 10, 13, 20, 22], "featur": [1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 16, 18, 20], "i3": [1, 2, 3, 4, 5, 6, 7, 17, 22], "more": [1, 2, 6, 7, 17, 18], "index": [1, 2, 4, 5, 6, 11, 16], "sqlite": [1, 2, 7, 22], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 2, 10, 12, 13, 14, 18], "awai": 1, "detail": [1, 22], "expos": 1, "physicst": 1, "what": [1, 20], "i3modul": [1, 8], "includ": [1, 6, 10, 15, 16, 18, 20], "docker": 1, "run": [1, 7, 9], "containeris": 1, "fashion": 1, "subpackag": [1, 2, 3, 8, 10, 17], "extractor": [1, 2, 5, 6], "parquet": [1, 2, 7, 22], "util": [1, 2, 3, 6, 19], "dataconvert": [1, 5, 6], "dataload": [1, 10, 16, 18], "dataset": [1, 5, 6, 7, 17, 18], "pipelin": 1, "coarsen": [1, 11], "graph_build": [1, 12], "standard_model": 1, "pisa": [1, 2, 3, 17, 19, 22], "fit": [1, 10, 16, 18], "plot": 1, "callback": [1, 10], "label": [1, 2, 13, 14, 15], "loss_funct": [1, 14], "weight_fit": 1, "config": [1, 2, 7, 15, 16, 17], "argpars": 1, "decor": [1, 2], "filesi": 1, "math": 1, "submodul": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "global": [1, 2, 10, 13], "i3extractor": [2, 5, 6], "i3featureextractor": [2, 6], "i3genericextractor": [2, 6], "i3hybridrecoextractor": 2, "i3pisaextractor": 2, "i3retroextractor": 2, "i3splinempeextractor": 2, "i3truthextractor": 2, "i3tumextractor": 2, "parquet_dataconvert": 2, "parquet_dataset": 2, "sqlite_dataconvert": 2, "sqlite_dataset": 2, "sqlite_dataset_perturb": 2, "sqlite_select": 2, "sqlite_util": 2, "parquet_to_sqlit": 2, "random": [2, 6, 18], "string_selection_resolv": 2, "class": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "object": [2, 3, 4, 6, 11, 12, 14, 15, 17], "namespac": [2, 10], "name": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 20, 22], "work": [2, 4, 20, 22], "icecube86": [2, 12], "dom_x": [2, 9, 12], "dom_i": [2, 9, 12], "dom_z": [2, 9, 12], "dom_tim": [2, 9, 12], "charg": [2, 9, 12, 16], "rde": [2, 9, 12], "pmt_area": [2, 9, 12], "deepcor": [2, 3, 9, 12], "upgrad": [2, 3, 9, 12, 22], "string": [2, 4, 6, 7, 9, 11, 12, 18], "pmt_number": [2, 9, 12], "dom_numb": [2, 9, 12], "pmt_dir_x": [2, 9, 12], "pmt_dir_i": [2, 9, 12], "pmt_dir_z": [2, 9, 12], "dom_typ": [2, 9, 12], "prometheu": [2, 10], "sensor_pos_x": [2, 12], "sensor_pos_i": [2, 12], "sensor_pos_z": [2, 12], "t": [2, 4, 6, 12, 15, 16, 22], "kaggl": [2, 12], "x": [2, 3, 10, 11, 12, 14, 15, 16], "y": [2, 3, 10, 12, 15, 22], "z": [2, 3, 10, 12, 22], "auxiliari": [2, 12], "truth": [2, 3, 5, 6, 15, 16, 18], "energy_track": 2, "position_x": 2, "position_i": 2, "position_z": 2, "azimuth": [2, 14, 16], "zenith": [2, 14, 16], "pid": [2, 7, 18], "elast": 2, "sim_typ": 2, "interaction_typ": 2, "interaction_tim": 2, "inelast": [2, 14], "stopped_muon": 2, "injection_energi": 2, "injection_typ": 2, "injection_interaction_typ": 2, "injection_zenith": 2, "injection_azimuth": 2, "injection_bjorkenx": 2, "injection_bjorkeni": 2, "injection_position_x": 2, "injection_position_i": 2, "injection_position_z": 2, "injection_column_depth": 2, "primary_lepton_1_typ": 2, "primary_hadron_1_typ": 2, "primary_lepton_1_position_x": 2, "primary_lepton_1_position_i": 2, "primary_lepton_1_position_z": 2, "primary_hadron_1_position_x": 2, "primary_hadron_1_position_i": 2, "primary_hadron_1_position_z": 2, "primary_lepton_1_direction_theta": 2, "primary_lepton_1_direction_phi": 2, "primary_hadron_1_direction_theta": 2, "primary_hadron_1_direction_phi": 2, "primary_lepton_1_energi": 2, "primary_hadron_1_energi": 2, "total_energi": 2, "fileset": 2, "i3_fil": [2, 3], "str": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "gcd_file": [2, 3], "paramet": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "__init__": [2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "return": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "none": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "init_global_index": 2, "output_fil": [2, 5, 6], "global_index": 2, "avail": [2, 3, 17], "pool": [2, 10, 13], "worker": [2, 5, 6, 7, 17], "synchron": 2, "list": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "cache_output_fil": 2, "process_method": 2, "cach": 2, "output": [2, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18, 22], "typevar": 2, "f": [2, 11], "bound": [2, 15], "callabl": [2, 4, 11, 14, 16, 17, 18], "ani": [2, 4, 5, 6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22], "outdir": [2, 5, 6, 7, 15], "gcd_rescu": [2, 5, 6, 17], "nb_files_to_batch": [2, 5, 6], "sequential_batch_pattern": [2, 5, 6], "input_file_batch_pattern": [2, 5, 6], "index_column": [2, 5, 6, 7, 10, 15, 16, 18], "icetray_verbos": [2, 5, 6], "abc": [2, 3, 10, 16, 18], "loggermixin": [2, 3, 7, 10, 16, 17, 18], "option": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "default": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "int": [2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "1": [2, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 18, 22], "event_no": [2, 5, 6, 7, 10, 15, 16, 18], "0": [2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 22], "properti": [2, 3, 4, 11, 12, 13, 14, 18], "file_suffix": [2, 5, 6], "suffix": 2, "construct": [2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "regular": [2, 4], "express": [2, 10, 16], "accord": [2, 5, 6, 10, 11], "match": [2, 16, 17], "certain": [2, 7, 15], "pattern": 2, "wildcard": 2, "same": [2, 4, 6, 10, 11, 14, 16, 18], "input": [2, 6, 10, 12, 13, 14], "replac": 2, "period": 2, "special": [2, 3, 10], "interpret": [2, 14], "liter": 2, "charact": 2, "regex": 2, "For": [2, 4, 16], "instanc": [2, 3, 4, 5, 6, 10, 15, 16, 17, 18, 22], "A": [2, 10, 11, 15, 16, 22], "_": 2, "9": 2, "5": [2, 7, 17, 22], "zst": 2, "find": [2, 17], "whose": 2, "one": [2, 6, 10, 11, 17, 18, 20, 22], "capit": 2, "letter": 2, "follow": [2, 10, 13, 16, 20, 22], "underscor": 2, "five": 2, "upgrade_genie_step4_141020_a_000000": 2, "upgrade_genie_step4_141020_a_000001": 2, "upgrade_genie_step4_141020_a_000008": 2, "upgrade_genie_step4_141020_a_000009": 2, "would": [2, 20], "upgrade_genie_step4_141020_a_00000x": 2, "upgrade_genie_step4_141020_a_000010": 2, "separ": [2, 4, 16, 22], "upgrade_genie_step4_141020_a_00001x": 2, "execut": [2, 6], "method": [2, 3, 4, 5, 6, 11, 14, 16], "set": [2, 3, 17, 20], "inherit": [2, 3, 4, 12, 16, 17], "path": [2, 5, 6, 7, 10, 15, 17, 18, 22], "correspond": [2, 4, 6, 7, 13, 16, 17, 22], "gcd": [2, 3, 4, 7, 17], "save_data": [2, 5, 6], "save": [2, 3, 4, 5, 6, 10, 15, 16, 17, 18, 22], "ordereddict": [2, 5, 6], "extract": [2, 3, 4, 6, 7, 14], "merge_fil": [2, 5, 6], "input_fil": [2, 5, 6], "merg": [2, 5, 6, 16, 22], "result": [2, 5, 6, 11, 16, 18, 22], "current": [2, 5, 6, 7, 16, 20, 22], "rais": [2, 3, 5, 10], "notimplementederror": [2, 5], "If": [2, 3, 5, 6, 10, 15, 16, 20, 22], "been": [2, 5, 16, 20], "backend": [2, 5, 6], "question": 2, "get_map_funct": 2, "nb_file": 2, "map": [2, 3, 6], "pure": [2, 3, 4], "multiprocess": [2, 22], "tupl": [2, 4, 5, 6, 10, 13, 14, 15, 16, 17], "collate_fn": [2, 16], "remov": [2, 16, 17], "less": [2, 16], "two": [2, 13, 15, 16], "dom": [2, 6, 10, 11, 16], "hit": [2, 16], "should": [2, 3, 4, 6, 7, 11, 16, 18, 20, 22], "occur": [2, 16], "product": [2, 16], "do_shuffl": 2, "selection_nam": 2, "check": [2, 4, 6, 17, 20, 22], "whether": [2, 4, 6, 10, 13, 16, 17, 18], "shuffl": [2, 7, 16], "select": [2, 5, 6, 7, 16, 18, 20], "bool": [2, 4, 6, 7, 10, 13, 15, 16, 17, 18], "batch_siz": [2, 10, 16], "num_work": [2, 16], "persistent_work": [2, 16], "kwarg": [2, 9, 11, 14, 16, 17, 18], "true": [2, 6, 7, 10, 15, 16], "0x7f3a37b9b2e0": 2, "classmethod": [2, 10, 16, 18], "from_dataset_config": 2, "datasetconfig": [2, 7, 18], "union": [2, 3, 4, 5, 6, 7, 10, 11, 13, 14, 16, 17, 18], "dict": [2, 3, 4, 6, 10, 12, 15, 16, 17, 18], "except": 2, "columnmissingexcept": 2, "indic": [2, 6, 7, 11, 16, 17, 20], "miss": 2, "column": [2, 5, 6, 10, 15, 16], "pulsemap": [2, 3, 5, 6, 16, 18], "node_truth": [2, 5, 6, 16, 18], "truth_tabl": [2, 5, 6, 15, 16, 18], "node_truth_t": [2, 5, 6, 16, 18], "string_select": [2, 5, 6, 16, 18], "dtype": [2, 5, 6, 9, 17], "float32": [2, 5, 6, 9], "loss_weight_t": [2, 5, 6, 16, 18], "loss_weight_column": [2, 5, 6, 16, 18], "loss_weight_default_valu": [2, 5, 6, 18], "seed": [2, 5, 6, 7, 16, 18], "float": [2, 5, 6, 10, 13, 15, 16, 18], "from_config": [2, 10, 18], "concatdataset": [2, 18], "concaten": [2, 4, 13], "multipl": [2, 3, 6, 16, 18], "puls": [2, 3, 4, 6, 10, 11], "seri": [2, 3, 4, 6], "node": [2, 6, 10, 11, 13, 14], "store": [2, 3, 6, 15, 16], "ad": [2, 3, 6, 13, 15], "attribut": [2, 6, 10, 14], "uniqu": [2, 6, 7, 18], "indici": [2, 4, 6, 7, 16], "tabl": [2, 3, 5, 6, 15, 16], "inform": [2, 3, 6, 15], "subset": [2, 6, 11, 13], "given": [2, 6, 11, 16], "queri": [2, 5, 6, 7], "pass": [2, 10, 11, 13, 14, 16, 20], "tensor": [2, 6, 10, 11, 13, 14, 16, 17], "per": [2, 3, 6, 11, 14, 16], "loss": [2, 6, 10, 14, 16, 17], "weight": [2, 6, 14, 15, 16, 18, 22], "also": [2, 6, 7, 17, 18], "assign": [2, 6, 7, 10, 11, 20], "note": [2, 6, 15, 18], "valu": [2, 4, 6, 11, 15, 16, 17, 18], "specifi": [2, 6, 7, 10, 14, 15, 16, 17, 22], "case": [2, 3, 6, 11, 14, 22], "That": [2, 6, 13, 14, 16], "ignor": [2, 4, 6], "resolv": [2, 7], "10000": [2, 7], "20": [2, 7, 17], "query_t": [2, 5, 6], "sequential_index": [2, 5, 6], "some": [2, 5, 6], "out": [2, 10, 13, 14, 16, 17, 20, 22], "sequenti": 2, "len": 2, "self": [2, 15], "_may_": 2, "_indic": 2, "entir": [2, 10], "impos": 2, "befor": [2, 13, 14, 16], "scalar": [2, 10, 16], "length": [2, 4, 16], "element": [2, 4, 10, 18], "present": [2, 17], "add_label": 2, "kei": [2, 3, 4, 6, 11, 16, 18], "fn": [2, 4, 18], "add": [2, 13, 17, 20, 22], "custom": [2, 16], "defin": [2, 7, 11, 18], "insqlitepipelin": 2, "module_dict": 2, "devic": 2, "retro_table_nam": 2, "n_worker": [2, 15], "pipeline_nam": 2, "creat": [2, 6, 18, 20, 22], "databas": [2, 6, 7, 15, 16, 22], "retro": [2, 3], "100": [2, 16, 22], "initialis": [2, 18], "dictionari": [2, 4, 6, 15, 18], "gnn_module_for_energy_regress": 2, "modulelist": 2, "comput": [2, 10, 14, 16], "directori": [2, 7, 15, 17], "size": [2, 11, 13, 17], "alreadi": [2, 6, 22], "error": [2, 16, 17, 20], "prompt": 2, "avoid": [2, 20], "overwrit": [2, 16], "collect": [3, 9, 16, 17], "i3fram": [3, 4, 9], "frame": [3, 6, 9], "__call__": 3, "icetrai": [3, 4, 9, 17], "keep": 3, "proven": 3, "set_fil": 3, "refer": [3, 18], "being": [3, 14], "get": [3, 4, 6, 16, 17, 22], "i3extractorcollect": 3, "treat": 3, "singl": [3, 11, 13, 16, 18], "i3featureextractoricecube86": [3, 9], "86": [3, 9, 12], "i3featureextractoricecubedeepcor": [3, 9], "i3featureextractoricecubeupgrad": [3, 9], "i3pulsenoisetruthflagicecubeupgrad": 3, "nois": [3, 4, 6], "flag": 3, "exclude_kei": 3, "dynam": [3, 11, 13], "pars": [3, 15, 17], "call": [3, 4, 6, 11, 15, 16, 17], "tri": [3, 4], "automat": [3, 16, 20], "cast": [3, 4], "done": [3, 11, 20], "recurs": [3, 4, 17, 18], "each": [3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17], "look": [3, 22], "member": [3, 4, 17, 18], "variabl": [3, 4, 10, 13, 16], "signatur": [3, 4], "similar": [3, 4, 22], "handl": [3, 16, 17], "hand": 3, "mc": [3, 6], "tree": [3, 6], "trigger": 3, "exclud": [3, 7, 22], "valueerror": [3, 10], "hybrid": 3, "i3galacticplanehybridrecoextractor": 3, "galatict": 3, "plane": [3, 16], "dnn_hybrid": 3, "quantiti": [3, 10, 14], "pisa_depend": 3, "splinemp": 3, "i3splinempeicextractor": 3, "spline_mpe_": 3, "border": 3, "ndarrai": [3, 16], "arrai": [3, 4], "boundari": 3, "volum": 3, "coordin": [3, 10], "particl": [3, 6, 16], "start": [3, 20, 22], "stop": [3, 17], "within": [3, 10, 11, 13], "hard": 3, "tum": 3, "dnn": 3, "tum_dnn": 3, "manipul": 4, "flatten_nested_dictionari": 4, "obj": [4, 18], "parent_kei": 4, "flatten": 4, "nest": 4, "non": [4, 6, 16, 17], "exampl": [4, 7, 10, 11, 16, 18, 22], "d": [4, 20], "b": [4, 10, 11], "c": [4, 11, 16, 22], "2": [4, 10, 11, 13, 14, 15, 16, 18], "a__b": 4, "applic": 4, "combin": [4, 18], "parent": 4, "__": 4, "nester": 4, "serialis": 4, "json": [4, 18], "therefor": 4, "we": [4, 7, 20, 22], "outer": 4, "abl": [4, 22], "de": 4, "transpose_list_of_dict": 4, "transpos": 4, "frame_is_montecarlo": 4, "mont": 4, "carlo": 4, "simul": 4, "frame_is_nois": 4, "get_om_keys_and_pulseseri": 4, "pulseseri": 4, "calibr": 4, "gcd_dict": 4, "p": [4, 6, 16], "om": 4, "i3calibr": 4, "indicesfor": 4, "is_boost_enum": 4, "boost": 4, "enum": 4, "is_boost_class": 4, "is_icecube_class": 4, "is_typ": 4, "is_method": 4, "break_cyclic_recurs": 4, "ensur": [4, 7, 16, 20, 22], "isn": 4, "get_member_vari": 4, "return_discard": 4, "valid": [4, 7, 10, 14, 16, 17], "mangl": 4, "fals": [4, 10, 13, 15, 16], "cast_object_to_pure_python": 4, "take": [4, 6, 11, 20], "mainli": 4, "cannot": 4, "trivial": [4, 14], "doe": [4, 18], "try": 4, "support": [4, 20, 22], "equival": 4, "its": 4, "like": [4, 10, 11, 16, 17, 20], "otherwis": [4, 16], "itself": [4, 14], "deem": 4, "wai": [4, 7, 20, 22], "cast_pulse_series_to_pure_python": 4, "represent": [4, 11], "optic": 4, "found": [4, 16], "parquetdataconvert": 5, "parquetdataset": 5, "pytorch": [5, 6, 16, 22], "sqlitedataconvert": [6, 22], "db": [6, 16], "any_pulsemap_is_non_empti": 6, "data_dict": 6, "empti": 6, "retriev": 6, "splitinicepuls": 6, "least": [6, 20, 22], "becaus": [6, 7], "instead": [6, 16], "alwai": 6, "construct_datafram": 6, "panda": [6, 7, 16], "datafram": [6, 7, 10, 15, 16], "is_pulse_map": 6, "table_nam": 6, "is_mc_tre": 6, "sqlitedataset": 6, "perturb": 6, "sqlitedatasetperturb": 6, "perturbation_dict": 6, "step": [6, 10, 16], "where": [6, 16], "randomli": [6, 7, 18], "intend": [6, 22], "test": [6, 7, 14, 16, 17, 18, 20], "stabil": 6, "under": 6, "small": [6, 16], "chang": [6, 15, 16, 20], "deviat": 6, "get_desired_event_numb": 6, "desired_s": 6, "fraction_nois": 6, "fraction_muon": 6, "fraction_nu_": 6, "fraction_nu_mu": 6, "fraction_nu_tau": 6, "fraction": [6, 13], "nu_e": 6, "nu_mu": 6, "nu_tau": 6, "reed": 6, "get_equal_proportion_neutrino_indic": 6, "equal": 6, "flavour": 6, "proport": 6, "42": [6, 16, 22], "resp": 6, "get_even_signal_background_indici": 6, "get_even_track_cascade_indici": 6, "cc": 6, "nc": 6, "mu": 6, "get_even_dbang_select": 6, "min_max_decay_length": 6, "dbang": 6, "database_exist": 6, "database_path": [6, 15, 16], "database_table_exist": 6, "run_sql_cod": 6, "save_to_sql": 6, "df": 6, "must": [6, 10, 16, 20], "attach_index": 6, "attach": 6, "create_t": 6, "default_typ": 6, "null": 6, "integer_primary_kei": 6, "NOT": [6, 16], "integ": [6, 13, 16], "primari": 6, "Such": 6, "row": 6, "appropri": [6, 14], "other": [6, 16, 20], "expect": [6, 7], "create_table_and_save_to_sql": 6, "doesn": 6, "parquettosqliteconvert": 7, "parquet_path": 7, "mc_truth_tabl": 7, "excluded_field": 7, "id": 7, "everi": [7, 22], "field": [7, 15, 16], "One": [7, 15], "choos": 7, "argument": [7, 16, 17, 18], "exclude_field": 7, "mc_truth": 7, "database_nam": 7, "convers": [7, 22], "rng": 7, "relat": [7, 17], "pairwise_shuffl": 7, "i3_list": [7, 17], "gcd_list": [7, 17], "correpond": 7, "handi": 7, "even": 7, "files_list": 7, "gcd_shuffl": 7, "i3_shuffl": 7, "stringselectionresolv": 7, "use_cach": 7, "flexibl": 7, "show": [7, 16], "involv": 7, "cover": 7, "yml": [7, 17, 18], "50000": [7, 18], "ab": [7, 16, 18], "12": [7, 18], "14": [7, 18], "16": [7, 18], "13": [7, 22], "compat": 7, "syntax": [7, 16], "mai": [7, 12, 22], "fix": 7, "graphnet_modul": 8, "part": [9, 22], "graphnetmodulebas": 9, "arg": [9, 14, 16, 17, 18], "i3trai": 9, "context": 9, "i3featureextractor_class": 9, "float16": 9, "float64": [9, 16], "keyword": 9, "write": [9, 22], "graphnetmoduleicecube86": 9, "alia": [9, 22], "graphnetmoduleicecubedeepcor": 9, "graphnetmoduleicecubeupgrad": 9, "convnet": 10, "dynedg": 10, "dynedge_jinst": 10, "oper": [10, 11, 13], "cluster": [10, 11, 13], "local": [10, 17], "unbatch_edge_index": 10, "edge_index": [10, 11], "vector": [10, 11, 16], "longtensor": [10, 11], "mathbf": [10, 11], "ldot": [10, 11], "n": [10, 11, 16], "reduc": 10, "transfer_attribut": 10, "avg": 10, "reduce_opt": 10, "avg_pool": 10, "avg_pool_x": 10, "max": [10, 11, 13, 16, 17], "max_pool": [10, 11], "max_pool_x": [10, 11], "min": [10, 11, 13], "min_pool": [10, 11], "min_pool_x": [10, 11], "sum": [10, 11, 13], "sum_pool": [10, 11], "sum_pool_x": [10, 11], "forward": [10, 11, 12, 13, 14, 16], "attributecoarsen": 10, "simplecoarsen": 10, "domcoarsen": 10, "customdomcoarsen": 10, "addit": [10, 11, 16], "domandtimewindowcoarsen": 10, "time_window": 10, "window": 10, "graphbuild": [10, 12], "knngraphbuild": 10, "nb_nearest_neighbour": 10, "k": [10, 13, 16], "nearest": [10, 13], "neighbour": [10, 11, 13], "radialgraphbuild": 10, "radiu": 10, "sphere": 10, "chosen": 10, "centr": 10, "euclideangraphbuild": 10, "sigma": 10, "euclidean": [10, 20], "distanc": 10, "between": [10, 16], "see": [10, 16, 20, 22], "http": [10, 16, 20], "arxiv": [10, 16], "org": [10, 16, 22], "pdf": 10, "1809": 10, "06166": 10, "lightningmodul": [10, 11, 16], "train_dataload": 10, "val_dataload": 10, "max_epoch": 10, "gpu": [10, 17, 22], "ckpt_path": 10, "logger": [10, 17], "log_every_n_step": 10, "gradient_clip_v": 10, "distribution_strategi": 10, "trainer_kwarg": 10, "pytorch_lightn": 10, "trainer": [10, 16], "ddp": 10, "predict_as_datafram": 10, "prediction_column": [10, 16], "node_level": [10, 16], "additional_attribut": [10, 16], "save_state_dict": 10, "state_dict": 10, "load_state_dict": 10, "trust": 10, "load_modul": 10, "modelconfig": [10, 18], "enough": 10, "eval": [10, 22], "lambda": 10, "definit": 10, "consequ": 10, "standardmodel": 10, "optimizer_class": 10, "optim": [10, 16], "adam": 10, "optimizer_kwarg": 10, "scheduler_class": 10, "scheduler_kwarg": 10, "scheduler_config": 10, "configure_optim": 10, "shared_step": 10, "batch_idx": 10, "share": 10, "calcul": [10, 16], "training_step": 10, "train_batch": 10, "validation_step": 10, "val_batch": 10, "compute_loss": [10, 14], "pred": [10, 14], "verbos": [10, 16], "activ": [10, 14, 20, 22], "mode": [10, 14], "deactiv": [10, 14], "calculate_xyzt_homophili": 10, "xyzt": 10, "homophili": 10, "measur": 10, "notic": [10, 16], "assum": [10, 12, 14], "shape": [10, 16], "calculate_distance_matrix": 10, "xyz_coord": 10, "matrix": [10, 11, 16], "pairwis": 10, "nb_dom": 10, "3": [10, 11, 13, 14, 15, 16, 20, 22], "knn_graph_batch": 10, "updat": [10, 15, 16], "edg": [10, 11, 13], "dynedgeconv": [11, 13], "aggr": 11, "nb_neighbor": 11, "features_subset": [11, 13], "edgeconv": 11, "convolut": [11, 13], "8": [11, 13, 16, 20, 22], "sequenc": 11, "slice": [11, 13], "mlp": [11, 13], "aggreg": 11, "after": [11, 13, 16, 17], "sparsetensor": 11, "just": [11, 22], "negat": 11, "sum_pool_and_distribut": 11, "cluster_index": 11, "distribut": [11, 13, 14, 16], "group_bi": 11, "ident": [11, 14], "pmt": 11, "f1": 11, "f2": 11, "6": [11, 15, 20], "7": [11, 15], "groupbi": 11, "group_pulses_to_dom": 11, "group_pulses_to_pmt": 11, "mathbb": 11, "r": [11, 22], "n_1": 11, "n_b": 11, "maximum": [11, 14, 17], "obtain": [11, 16], "wise": 11, "dens": 11, "fc": 11, "known": 11, "std_pool_x": 11, "std": 11, "repres": [11, 18], "posit": [11, 14], "averag": [11, 16], "torch_geometr": 11, "version": [11, 14, 16, 20, 22], "std_pool": 11, "standardis": 12, "scaler": 12, "ins": 12, "adjac": 12, "nb_input": [12, 13, 14], "nb_output": [12, 13, 14], "overridden": 12, "icecubekaggl": 12, "competit": 12, "icecubedeepcor": 12, "icecubeupgrad": 12, "icecubeupgrade_v2": 12, "prototyp": 12, "learnabl": 13, "author": [13, 16], "martin": 13, "minh": 13, "nb_intermedi": 13, "dropout_ratio": 13, "128": [13, 17], "dimens": [13, 16], "drop": 13, "nb_neighbour": 13, "dynedge_layer_s": 13, "post_processing_layer_s": 13, "readout_layer_s": 13, "global_pooling_schem": 13, "add_global_variables_after_pool": 13, "latent": [13, 14], "metric": [13, 16], "dimenion": 13, "entri": [13, 15, 17], "multi": 13, "perceptron": 13, "256": 13, "336": 13, "hidden": [13, 14], "skip": 13, "post": 13, "_and_": 13, "As": 13, "last": [13, 14, 16], "scheme": 13, "altern": [13, 16, 20], "exact": [13, 16], "2209": 13, "03042": 13, "rasmu": 13, "oerso": 13, "dynedgejinst": 13, "layer_size_scal": 13, "4": [13, 14, 15], "scale": [13, 14, 16], "core": 13, "multiclassclassificationtask": 14, "identitytask": 14, "classifi": 14, "untransform": 14, "logit": [14, 16], "binaryclassificationtask": 14, "hidden_s": 14, "target_label": 14, "transform_prediction_and_target": 14, "transform_target": 14, "transform_infer": 14, "transform_support": 14, "loss_weight": 14, "binari": [14, 16], "lossfunct": [14, 16], "binaryclassificationtasklogit": 14, "azimuthreconstructionwithkappa": 14, "angl": 14, "associ": [14, 16], "kappa": [14, 16], "var": 14, "azimuthreconstruct": 14, "directionreconstructionwithkappa": 14, "3d": [14, 16], "vmf": 14, "zenithreconstruct": 14, "zenithreconstructionwithkappa": 14, "energyreconstruct": 14, "stabl": [14, 22], "energyreconstructionwithpow": 14, "energyreconstructionwithuncertainti": 14, "uncertainti": 14, "vertexreconstruct": 14, "vertex": 14, "positionreconstruct": 14, "timereconstruct": 14, "inelasticityreconstruct": 14, "interact": 14, "hadron": 14, "feed": 14, "affin": 14, "target": [14, 16, 18], "numer": 14, "log10": [14, 16], "rather": 14, "conjunct": 14, "invers": 14, "recov": 14, "minimum": 14, "restrict": [14, 16], "invert": 14, "1e6": 14, "wrt": 14, "train_ev": 14, "contour": 15, "config_updat": 15, "config_path": 15, "new_config_path": 15, "dummy_sect": 15, "temp": 15, "dummi": 15, "section": 15, "header": 15, "configupdat": 15, "programat": 15, "weightfitt": [15, 16], "statistical_fit": 15, "fit_weight": [15, 16], "config_outdir": 15, "weight_nam": [15, 16], "pisa_config_dict": 15, "add_to_databas": [15, 16], "flux": 15, "_database_path": 15, "statist": 15, "effect": [15, 16, 20], "account": 15, "systemat": 15, "hypersurfac": 15, "assumpt": 15, "regard": 15, "contourfitt": 15, "pipeline_path": 15, "post_fix": 15, "model_nam": 15, "include_retro": 15, "_pred": 15, "fit_1d_contour": 15, "run_nam": 15, "config_dict": 15, "grid_siz": 15, "theta23_minmax": 15, "36": 15, "54": 15, "dm31_minmax": 15, "1d": 15, "30": 15, "fit_2d_contour": 15, "2d": [15, 16], "read_entri": 15, "content": 15, "plot_2d_contour": 15, "contour_data": 15, "xlim": 15, "ylim": 15, "0023799999999999997": 15, "0025499999999999997": 15, "chi2_critical_valu": 15, "605": 15, "width": 15, "176": 15, "height": 15, "388": 15, "path_to_pisa_fit_result": 15, "name_of_my_model_in_fit": 15, "legend": 15, "color": 15, "linestyl": 15, "style": [15, 20], "line": [15, 16, 17], "upper": 15, "axi": 15, "critic": [15, 17], "chi2": 15, "90": 15, "cl": 15, "right": [15, 16], "inch": 15, "plot_1d_contour": 15, "706": 15, "352": 15, "dure": 16, "piecewiselinearlr": 16, "mileston": 16, "factor": 16, "last_epoch": 16, "_lrschedul": 16, "interpol": 16, "linearli": 16, "denot": 16, "multipli": 16, "closest": 16, "vice": 16, "versa": 16, "wrap": [16, 18], "epoch": [16, 17], "print": [16, 17], "messag": [16, 17], "stdout": 16, "get_lr": 16, "progressbar": 16, "refresh_r": 16, "process_posit": 16, "tqdmprogressbar": 16, "progress": 16, "bar": 16, "customis": 16, "lightn": 16, "init_validation_tqdm": 16, "overrid": 16, "init_predict_tqdm": 16, "init_test_tqdm": 16, "init_train_tqdm": 16, "get_metr": 16, "on_train_epoch_start": 16, "previou": 16, "behaviour": 16, "on_train_epoch_end": 16, "don": [16, 22], "duplciat": 16, "runtim": [16, 22], "produc": 16, "azimuth_kei": 16, "zenith_kei": 16, "return_el": 16, "elementwis": 16, "term": 16, "mseloss": 16, "squar": 16, "rmseloss": 16, "root": [16, 22], "logcoshloss": 16, "cosh": 16, "act": 16, "crossentropyloss": 16, "cross": 16, "entropi": 16, "num_class": 16, "softmax": 16, "ed": 16, "probabl": 16, "binarycrossentropyloss": 16, "logcmk": 16, "mit": 16, "licens": 16, "copyright": 16, "2019": 16, "ryabinin": 16, "permiss": 16, "herebi": 16, "grant": 16, "person": 16, "copi": 16, "document": 16, "deal": 16, "limit": 16, "modifi": 16, "publish": 16, "sublicens": 16, "sell": 16, "permit": 16, "whom": 16, "furnish": 16, "so": [16, 22], "subject": 16, "condit": 16, "shall": 16, "substanti": 16, "portion": 16, "THE": 16, "AS": 16, "warranti": 16, "OF": 16, "kind": 16, "OR": 16, "impli": 16, "BUT": 16, "TO": 16, "merchant": 16, "FOR": 16, "particular": [16, 20], "AND": 16, "noninfring": 16, "IN": 16, "NO": 16, "holder": 16, "BE": 16, "liabl": 16, "claim": 16, "damag": 16, "liabil": 16, "action": 16, "contract": 16, "tort": 16, "aris": 16, "WITH": 16, "_____________________": 16, "github": [16, 22], "com": [16, 22], "mryab": 16, "vmf_loss": 16, "blob": 16, "master": 16, "py": [16, 22], "bessel": 16, "exponenti": 16, "ditto": 16, "iv": 16, "1812": 16, "04616": 16, "spite": 16, "suggest": 16, "sec": 16, "paper": 16, "comparison": 16, "m": 16, "correct": 16, "static": [16, 20], "ctx": 16, "backward": 16, "grad_output": 16, "vonmisesfisherloss": 16, "von": 16, "mise": 16, "fisher": 16, "log_cmk_exact": 16, "c_": 16, "exactli": [16, 17], "log_cmk_approx": 16, "approx": 16, "minu": 16, "sign": 16, "log_cmk": 16, "kappa_switch": 16, "sinc": 16, "diverg": 16, "700": 16, "precis": 16, "unaccur": 16, "switch": 16, "vonmisesfisher2dloss": 16, "euclideandistanceloss": 16, "three": 16, "vonmisesfisher3dloss": 16, "make_dataload": 16, "make_train_validation_dataload": 16, "database_indic": 16, "test_siz": 16, "33": 16, "get_predict": 16, "save_result": 16, "tag": [16, 20, 22], "archiv": 16, "public": 16, "uniformweightfitt": 16, "bin": 16, "privat": 16, "_fit_weight": 16, "sql": 16, "desir": [16, 17], "space": 16, "np": 16, "happen": 16, "uniform": 16, "bjoernlow": 16, "x_low": 16, "wherea": 16, "curv": 16, "base_config": 17, "dataset_config": 17, "model_config": 17, "training_config": 17, "consist": [17, 20], "cli": 17, "argumentpars": 17, "pop_default": 17, "usag": 17, "descript": 17, "command": [17, 22], "standard_argu": 17, "help": [17, 20], "home": [17, 22], "runner": 17, "lib": [17, 22], "python3": 17, "training_example_data_sqlit": 17, "earli": 17, "patienc": 17, "narg": 17, "50": 17, "example_energy_reconstruction_model": 17, "num": 17, "fetch": 17, "with_standard_argu": 17, "system": [17, 22], "is_gcd_fil": 17, "filenam": 17, "is_i3_fil": 17, "has_extens": 17, "find_i3_fil": 17, "dir": 17, "search": 17, "has_icecube_packag": 17, "has_torch_packag": 17, "has_pisa_packag": 17, "requires_icecub": 17, "test_funct": 17, "set_logging_level": 17, "get_formatt": 17, "colour": 17, "formatt": 17, "coloredformatt": 17, "warn_onc": 17, "warn": 17, "onc": 17, "repeatfilt": 17, "filter": 17, "repeat": 17, "record": 17, "nb_repeats_allow": 17, "logrecord": 17, "get_logg": [17, 22], "log_fold": 17, "place": [17, 20], "termin": 17, "debug": 17, "loggeradapt": 17, "msg": 17, "deleg": 17, "info": [17, 22], "assort": 17, "eps_lik": 17, "ep": 17, "baseconfig": 18, "basemodel": 18, "dump": 18, "yaml": 18, "as_dict": 18, "overwritten": 18, "get_all_argument_valu": 18, "re": [18, 22], "save_config": 18, "dataconfig": 18, "transpar": [18, 20], "reproduc": 18, "In": [18, 22], "session": 18, "anoth": 18, "you": [18, 20, 22], "still": 18, "csv": 18, "train_select": 18, "test_select": 18, "save_dataset_config": 18, "init_fn": 18, "class_nam": 18, "trainabl": 18, "hyperparamet": 18, "instanti": 18, "thu": 18, "unambigu": 18, "save_model_config": 18, "traverse_and_appli": 18, "fn_kwarg": 18, "structur": 18, "list_all_submodul": 18, "moduletyp": 18, "get_all_grapnet_class": 18, "grapnet": 18, "is_graphnet_modul": 18, "is_graphnet_class": 18, "get_graphnet_class": 18, "lookup": 18, "trainingconfig": 18, "early_stopping_pati": 18, "api": 19, "constant": 19, "To": [20, 22], "sure": [20, 22], "smooth": 20, "guidelin": 20, "guid": 20, "encourag": 20, "contributor": 20, "discuss": 20, "bug": 20, "anyth": 20, "describ": 20, "yourself": 20, "ownership": 20, "agreement": 20, "prioriti": 20, "situat": 20, "lot": 20, "effort": 20, "go": 20, "turn": 20, "outsid": 20, "scope": 20, "project": 20, "solut": 20, "better": 20, "fork": 20, "repo": 20, "dedic": 20, "branch": [20, 22], "your": [20, 22], "repositori": 20, "graphbuil": 20, "builder": 20, "own": [20, 22], "team": 20, "accept": 20, "autom": 20, "review": 20, "pep8": 20, "docstr": 20, "googl": 20, "hint": 20, "clean": [20, 22], "adher": 20, "pep": 20, "pylint": 20, "flake8": 20, "black": 20, "well": 20, "recommend": [20, 22], "mypi": 20, "pydocstyl": 20, "docformatt": 20, "commit": 20, "hook": 20, "instal": 20, "come": 20, "pip": [20, 22], "Then": 20, "everytim": 20, "pep257": 20, "concept": 20, "ljvmiranda921": 20, "io": 20, "notebook": 20, "2018": 20, "06": 20, "21": 20, "precommit": 20, "environ": 22, "virtual": 22, "anaconda": 22, "prove": 22, "instruct": 22, "setup": 22, "want": 22, "achiev": 22, "bash": 22, "shell": 22, "cvmf": 22, "opensciencegrid": 22, "py3": 22, "v4": 22, "sh": 22, "rhel_7_x86_64": 22, "metaproject": 22, "combo": 22, "env": 22, "script": 22, "With": 22, "now": 22, "light": 22, "extra": 22, "geometr": 22, "won": 22, "later": 22, "torch_cpu": 22, "txt": 22, "cpu": 22, "torch_gpu": 22, "prefer": 22, "unix": 22, "git": 22, "clone": 22, "usernam": 22, "cd": 22, "conda": 22, "gcc_linux": 22, "64": 22, "gxx_linux": 22, "libgcc": 22, "cudatoolkit": 22, "11": 22, "forg": 22, "torch_maco": 22, "On": 22, "maco": 22, "box": 22, "compil": 22, "gcc": 22, "date": 22, "possibli": 22, "cuda": 22, "toolkit": 22, "recent": 22, "omit": 22, "newer": 22, "export": 22, "ld_library_path": 22, "anaconda3": 22, "miniconda3": 22, "bashrc": 22, "librari": 22, "access": 22, "consid": 22, "rm": 22, "asogaard": 22, "latest": 22, "dc423315742c": 22, "01_icetrai": 22, "01_convert_i3_fil": 22, "2023": 22, "01": 22, "24": 22, "41": 22, "27": 22, "graphnet_20230124": 22, "134127": 22, "46": 22, "convert_i3_fil": 22, "ic86": 22, "thread": 22, "00": 22, "39": 22, "79": 22, "26": 22, "413": 22, "88it": 22, "specialis": 22, "ones": 22, "push": 22, "vx": 22}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[1, 0, 0, "-", "constants"], [2, 0, 0, "-", "data"], [8, 0, 0, "-", "deployment"], [10, 0, 0, "-", "models"], [15, 0, 0, "-", "pisa"], [16, 0, 0, "-", "training"], [17, 0, 0, "-", "utilities"]], "graphnet.data": [[2, 0, 0, "-", "constants"], [2, 0, 0, "-", "dataconverter"], [2, 0, 0, "-", "dataloader"], [2, 0, 0, "-", "dataset"], [3, 0, 0, "-", "extractors"], [5, 0, 0, "-", "parquet"], [2, 0, 0, "-", "pipeline"], [6, 0, 0, "-", "sqlite"], [7, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[2, 1, 1, "", "FEATURES"], [2, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[2, 2, 1, "", "DEEPCORE"], [2, 2, 1, "", "ICECUBE86"], [2, 2, 1, "", "KAGGLE"], [2, 2, 1, "", "PROMETHEUS"], [2, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[2, 2, 1, "", "DEEPCORE"], [2, 2, 1, "", "ICECUBE86"], [2, 2, 1, "", "KAGGLE"], [2, 2, 1, "", "PROMETHEUS"], [2, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[2, 1, 1, "", "DataConverter"], [2, 1, 1, "", "FileSet"], [2, 5, 1, "", "cache_output_files"], [2, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "execute"], [2, 4, 1, "", "file_suffix"], [2, 3, 1, "", "get_map_function"], [2, 3, 1, "", "merge_files"], [2, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[2, 3, 1, "", "__init__"], [2, 2, 1, "", "gcd_file"], [2, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[2, 1, 1, "", "DataLoader"], [2, 5, 1, "", "collate_fn"], [2, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[2, 6, 1, "", "ColumnMissingException"], [2, 1, 1, "", "Dataset"]], "graphnet.data.dataset.Dataset": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "add_label"], [2, 3, 1, "", "concatenate"], [2, 3, 1, "", "from_config"], [2, 4, 1, "", "path"], [2, 3, 1, "", "query_table"], [2, 4, 1, "", "truth_table"]], "graphnet.data.extractors": [[3, 0, 0, "-", "i3extractor"], [3, 0, 0, "-", "i3featureextractor"], [3, 0, 0, "-", "i3genericextractor"], [3, 0, 0, "-", "i3hybridrecoextractor"], [3, 0, 0, "-", "i3pisaextractor"], [3, 0, 0, "-", "i3retroextractor"], [3, 0, 0, "-", "i3splinempeextractor"], [3, 0, 0, "-", "i3truthextractor"], [3, 0, 0, "-", "i3tumextractor"], [4, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[3, 1, 1, "", "I3Extractor"], [3, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[3, 3, 1, "", "__init__"], [3, 4, 1, "", "name"], [3, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[3, 1, 1, "", "I3FeatureExtractor"], [3, 1, 1, "", "I3FeatureExtractorIceCube86"], [3, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [3, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [3, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3genericextractor": [[3, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor.I3GenericExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3hybridrecoextractor": [[3, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3pisaextractor": [[3, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3retroextractor": [[3, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor.I3RetroExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3splinempeextractor": [[3, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3truthextractor": [[3, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor.I3TruthExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3tumextractor": [[3, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor.I3TUMExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.utilities": [[4, 0, 0, "-", "collections"], [4, 0, 0, "-", "frames"], [4, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[4, 5, 1, "", "flatten_nested_dictionary"], [4, 5, 1, "", "serialise"], [4, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[4, 5, 1, "", "frame_is_montecarlo"], [4, 5, 1, "", "frame_is_noise"], [4, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[4, 5, 1, "", "break_cyclic_recursion"], [4, 5, 1, "", "cast_object_to_pure_python"], [4, 5, 1, "", "cast_pulse_series_to_pure_python"], [4, 5, 1, "", "get_member_variables"], [4, 5, 1, "", "is_boost_class"], [4, 5, 1, "", "is_boost_enum"], [4, 5, 1, "", "is_icecube_class"], [4, 5, 1, "", "is_method"], [4, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[5, 0, 0, "-", "parquet_dataconverter"], [5, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[5, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[5, 2, 1, "", "file_suffix"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[5, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[5, 3, 1, "", "query_table"]], "graphnet.data.pipeline": [[2, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pipeline.InSQLitePipeline": [[2, 3, 1, "", "__init__"]], "graphnet.data.sqlite": [[6, 0, 0, "-", "sqlite_dataconverter"], [6, 0, 0, "-", "sqlite_dataset"], [6, 0, 0, "-", "sqlite_dataset_perturbed"], [6, 0, 0, "-", "sqlite_selection"], [6, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, 1, 1, "", "SQLiteDataConverter"], [6, 5, 1, "", "construct_dataframe"], [6, 5, 1, "", "is_mc_tree"], [6, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[6, 3, 1, "", "any_pulsemap_is_non_empty"], [6, 2, 1, "", "file_suffix"], [6, 3, 1, "", "merge_files"], [6, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[6, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[6, 3, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed": [[6, 3, 1, "", "__init__"]], "graphnet.data.sqlite.sqlite_selection": [[6, 5, 1, "", "get_desired_event_numbers"], [6, 5, 1, "", "get_equal_proportion_neutrino_indices"], [6, 5, 1, "", "get_even_dbang_selection"], [6, 5, 1, "", "get_even_signal_background_indicies"], [6, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[6, 5, 1, "", "attach_index"], [6, 5, 1, "", "create_table"], [6, 5, 1, "", "create_table_and_save_to_sql"], [6, 5, 1, "", "database_exists"], [6, 5, 1, "", "database_table_exists"], [6, 5, 1, "", "run_sql_code"], [6, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[7, 0, 0, "-", "parquet_to_sqlite"], [7, 0, 0, "-", "random"], [7, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[7, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[7, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[7, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "resolve"]], "graphnet.deployment": [[9, 0, 0, "-", "i3modules"]], "graphnet.deployment.i3modules": [[9, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[9, 1, 1, "", "GraphNeTModuleBase"], [9, 1, 1, "", "GraphNeTModuleIceCube86"], [9, 1, 1, "", "GraphNeTModuleIceCubeDeepCore"], [9, 1, 1, "", "GraphNeTModuleIceCubeUpgrade"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase": [[9, 3, 1, "", "Configure"], [9, 2, 1, "", "DTYPES"], [9, 2, 1, "", "FEATURES"], [9, 2, 1, "", "I3FEATUREEXTRACTOR_CLASS"], [9, 3, 1, "", "Physics"], [9, 3, 1, "", "__init__"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86": [[9, 2, 1, "", "FEATURES"], [9, 2, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore": [[9, 2, 1, "", "FEATURES"], [9, 2, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade": [[9, 2, 1, "", "FEATURES"], [9, 2, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.models": [[10, 0, 0, "-", "coarsening"], [11, 0, 0, "-", "components"], [12, 0, 0, "-", "detector"], [13, 0, 0, "-", "gnn"], [10, 0, 0, "-", "graph_builders"], [10, 0, 0, "-", "model"], [10, 0, 0, "-", "standard_model"], [14, 0, 0, "-", "task"], [10, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[10, 1, 1, "", "AttributeCoarsening"], [10, 1, 1, "", "Coarsening"], [10, 1, 1, "", "CustomDOMCoarsening"], [10, 1, 1, "", "DOMAndTimeWindowCoarsening"], [10, 1, 1, "", "DOMCoarsening"], [10, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.AttributeCoarsening": [[10, 3, 1, "", "__init__"]], "graphnet.models.coarsening.Coarsening": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "forward"], [10, 2, 1, "", "reduce_options"]], "graphnet.models.coarsening.DOMAndTimeWindowCoarsening": [[10, 3, 1, "", "__init__"]], "graphnet.models.components": [[11, 0, 0, "-", "layers"], [11, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[11, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[11, 5, 1, "", "group_by"], [11, 5, 1, "", "group_pulses_to_dom"], [11, 5, 1, "", "group_pulses_to_pmt"], [11, 5, 1, "", "min_pool"], [11, 5, 1, "", "min_pool_x"], [11, 5, 1, "", "std_pool"], [11, 5, 1, "", "std_pool_x"], [11, 5, 1, "", "sum_pool"], [11, 5, 1, "", "sum_pool_and_distribute"], [11, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[12, 0, 0, "-", "detector"], [12, 0, 0, "-", "icecube"], [12, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[12, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[12, 3, 1, "", "__init__"], [12, 4, 1, "", "features"], [12, 3, 1, "", "forward"], [12, 4, 1, "", "nb_inputs"], [12, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[12, 1, 1, "", "IceCube86"], [12, 1, 1, "", "IceCubeDeepCore"], [12, 1, 1, "", "IceCubeKaggle"], [12, 1, 1, "", "IceCubeUpgrade"], [12, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[12, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[12, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[12, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[12, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[12, 2, 1, "", "features"], [12, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[12, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[12, 2, 1, "", "features"]], "graphnet.models.gnn": [[13, 0, 0, "-", "convnet"], [13, 0, 0, "-", "dynedge"], [13, 0, 0, "-", "dynedge_jinst"], [13, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[13, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[13, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[13, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[13, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "forward"], [13, 4, 1, "", "nb_inputs"], [13, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[10, 1, 1, "", "EuclideanGraphBuilder"], [10, 1, 1, "", "GraphBuilder"], [10, 1, 1, "", "KNNGraphBuilder"], [10, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "forward"]], "graphnet.models.model": [[10, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[10, 3, 1, "", "fit"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "from_config"], [10, 3, 1, "", "load"], [10, 3, 1, "", "load_state_dict"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_as_dataframe"], [10, 3, 1, "", "save"], [10, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[10, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "compute_loss"], [10, 3, 1, "", "configure_optimizers"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "inference"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "shared_step"], [10, 3, 1, "", "train"], [10, 3, 1, "", "training_step"], [10, 3, 1, "", "validation_step"]], "graphnet.models.task": [[14, 0, 0, "-", "classification"], [14, 0, 0, "-", "reconstruction"], [14, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[14, 1, 1, "", "BinaryClassificationTask"], [14, 1, 1, "", "BinaryClassificationTaskLogits"], [14, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[14, 1, 1, "", "AzimuthReconstruction"], [14, 1, 1, "", "AzimuthReconstructionWithKappa"], [14, 1, 1, "", "DirectionReconstructionWithKappa"], [14, 1, 1, "", "EnergyReconstruction"], [14, 1, 1, "", "EnergyReconstructionWithPower"], [14, 1, 1, "", "EnergyReconstructionWithUncertainty"], [14, 1, 1, "", "InelasticityReconstruction"], [14, 1, 1, "", "PositionReconstruction"], [14, 1, 1, "", "TimeReconstruction"], [14, 1, 1, "", "VertexReconstruction"], [14, 1, 1, "", "ZenithReconstruction"], [14, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[14, 1, 1, "", "IdentityTask"], [14, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[14, 3, 1, "", "__init__"], [14, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "compute_loss"], [14, 3, 1, "", "forward"], [14, 3, 1, "", "inference"], [14, 4, 1, "", "nb_inputs"], [14, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[10, 5, 1, "", "calculate_distance_matrix"], [10, 5, 1, "", "calculate_xyzt_homophily"], [10, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[15, 0, 0, "-", "fitting"], [15, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[15, 1, 1, "", "ContourFitter"], [15, 1, 1, "", "WeightFitter"], [15, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "fit_1d_contour"], [15, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[15, 5, 1, "", "plot_1D_contour"], [15, 5, 1, "", "plot_2D_contour"], [15, 5, 1, "", "read_entry"]], "graphnet.training": [[16, 0, 0, "-", "callbacks"], [16, 0, 0, "-", "labels"], [16, 0, 0, "-", "loss_functions"], [16, 0, 0, "-", "utils"], [16, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[16, 1, 1, "", "PiecewiseLinearLR"], [16, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[16, 3, 1, "", "get_metrics"], [16, 3, 1, "", "init_predict_tqdm"], [16, 3, 1, "", "init_test_tqdm"], [16, 3, 1, "", "init_train_tqdm"], [16, 3, 1, "", "init_validation_tqdm"], [16, 3, 1, "", "on_train_epoch_end"], [16, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[16, 1, 1, "", "Direction"], [16, 1, 1, "", "Label"]], "graphnet.training.labels.Direction": [[16, 3, 1, "", "__init__"]], "graphnet.training.labels.Label": [[16, 3, 1, "", "__init__"]], "graphnet.training.loss_functions": [[16, 1, 1, "", "BinaryCrossEntropyLoss"], [16, 1, 1, "", "CrossEntropyLoss"], [16, 1, 1, "", "EuclideanDistanceLoss"], [16, 1, 1, "", "LogCMK"], [16, 1, 1, "", "LogCoshLoss"], [16, 1, 1, "", "LossFunction"], [16, 1, 1, "", "MSELoss"], [16, 1, 1, "", "RMSELoss"], [16, 1, 1, "", "VonMisesFisher2DLoss"], [16, 1, 1, "", "VonMisesFisher3DLoss"], [16, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.CrossEntropyLoss": [[16, 3, 1, "", "__init__"]], "graphnet.training.loss_functions.LogCMK": [[16, 3, 1, "", "backward"], [16, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[16, 3, 1, "", "log_cmk"], [16, 3, 1, "", "log_cmk_approx"], [16, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[16, 5, 1, "", "collate_fn"], [16, 5, 1, "", "get_predictions"], [16, 5, 1, "", "make_dataloader"], [16, 5, 1, "", "make_train_validation_dataloader"], [16, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[16, 1, 1, "", "BjoernLow"], [16, 1, 1, "", "Uniform"], [16, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "fit"]], "graphnet.utilities": [[17, 0, 0, "-", "argparse"], [18, 0, 0, "-", "config"], [17, 0, 0, "-", "decorators"], [17, 0, 0, "-", "filesys"], [17, 0, 0, "-", "imports"], [17, 0, 0, "-", "logging"], [17, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[17, 1, 1, "", "ArgumentParser"], [17, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[17, 3, 1, "", "__init__"], [17, 2, 1, "", "standard_arguments"], [17, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "contains"], [17, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[18, 0, 0, "-", "base_config"], [18, 0, 0, "-", "configurable"], [18, 0, 0, "-", "dataset_config"], [18, 0, 0, "-", "model_config"], [18, 0, 0, "-", "parsing"], [18, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[18, 1, 1, "", "BaseConfig"], [18, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[18, 3, 1, "", "as_dict"], [18, 3, 1, "", "dump"], [18, 3, 1, "", "load"]], "graphnet.utilities.config.configurable": [[18, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[18, 3, 1, "", "__init__"], [18, 4, 1, "", "config"], [18, 3, 1, "", "from_config"], [18, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[18, 1, 1, "", "DatasetConfig"], [18, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[18, 3, 1, "", "__init__"], [18, 2, 1, "", "features"], [18, 2, 1, "", "index_column"], [18, 2, 1, "", "loss_weight_column"], [18, 2, 1, "", "loss_weight_default_value"], [18, 2, 1, "", "loss_weight_table"], [18, 2, 1, "", "node_truth"], [18, 2, 1, "", "node_truth_table"], [18, 2, 1, "", "path"], [18, 2, 1, "", "pulsemaps"], [18, 2, 1, "", "seed"], [18, 2, 1, "", "selection"], [18, 2, 1, "", "string_selection"], [18, 2, 1, "", "truth"], [18, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[18, 1, 1, "", "ModelConfig"], [18, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[18, 3, 1, "", "__init__"], [18, 2, 1, "", "arguments"], [18, 3, 1, "", "as_dict"], [18, 2, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[18, 5, 1, "", "get_all_grapnet_classes"], [18, 5, 1, "", "get_graphnet_classes"], [18, 5, 1, "", "is_graphnet_class"], [18, 5, 1, "", "is_graphnet_module"], [18, 5, 1, "", "list_all_submodules"], [18, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[18, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[18, 2, 1, "", "dataloader"], [18, 2, 1, "", "early_stopping_patience"], [18, 2, 1, "", "fit"], [18, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[17, 5, 1, "", "find_i3_files"], [17, 5, 1, "", "has_extension"], [17, 5, 1, "", "is_gcd_file"], [17, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[17, 5, 1, "", "has_icecube_package"], [17, 5, 1, "", "has_pisa_package"], [17, 5, 1, "", "has_torch_package"], [17, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[17, 1, 1, "", "LoggerMixin"], [17, 1, 1, "", "RepeatFilter"], [17, 5, 1, "", "get_formatters"], [17, 5, 1, "", "get_logger"], [17, 5, 1, "", "set_logging_level"], [17, 5, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[17, 3, 1, "", "critical"], [17, 3, 1, "", "debug"], [17, 3, 1, "", "error"], [17, 3, 1, "", "info"], [17, 3, 1, "", "warning"]], "graphnet.utilities.logging.RepeatFilter": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "filter"]], "graphnet.utilities.maths": [[17, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 21], "impact": [0, 21], "usag": [0, 21], "api": 1, "graphnet": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "constant": [1, 2], "data": [2, 3, 4, 5, 6, 7], "dataconvert": 2, "dataload": 2, "dataset": 2, "pipelin": 2, "extractor": [3, 4], "i3extractor": 3, "i3featureextractor": 3, "i3genericextractor": 3, "i3hybridrecoextractor": 3, "i3pisaextractor": 3, "i3retroextractor": 3, "i3splinempeextractor": 3, "i3truthextractor": 3, "i3tumextractor": 3, "util": [4, 7, 10, 16, 17, 18], "collect": 4, "frame": 4, "type": 4, "parquet": 5, "parquet_dataconvert": 5, "parquet_dataset": 5, "sqlite": 6, "sqlite_dataconvert": 6, "sqlite_dataset": 6, "sqlite_dataset_perturb": 6, "sqlite_select": 6, "sqlite_util": 6, "parquet_to_sqlit": 7, "random": 7, "string_selection_resolv": 7, "deploy": [8, 9], "i3modul": 9, "graphnet_modul": 9, "model": [10, 11, 12, 13, 14], "coarsen": 10, "graph_build": 10, "standard_model": 10, "compon": 11, "layer": 11, "pool": 11, "detector": 12, "icecub": 12, "prometheu": 12, "gnn": 13, "convnet": 13, "dynedg": 13, "dynedge_jinst": 13, "task": 14, "classif": 14, "reconstruct": 14, "pisa": 15, "fit": 15, "plot": 15, "train": 16, "callback": 16, "label": 16, "loss_funct": 16, "weight_fit": 16, "argpars": 17, "decor": 17, "filesi": 17, "import": 17, "log": 17, "math": 17, "config": 18, "base_config": 18, "configur": 18, "dataset_config": 18, "model_config": 18, "pars": 18, "training_config": 18, "src": 19, "contribut": 20, "github": 20, "issu": 20, "pull": 20, "request": 20, "convent": 20, "code": 20, "qualiti": 20, "instal": 22, "icetrai": 22, "stand": 22, "alon": 22, "run": 22, "docker": 22}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [21, "about"]], "Impact": [[0, "impact"], [21, "impact"]], "Usage": [[0, "usage"], [21, "usage"]], "API": [[1, "module-graphnet"]], "graphnet.constants": [[1, "module-graphnet.constants"]], "data": [[2, "module-graphnet.data"]], "graphnet.data.constants": [[2, "module-graphnet.data.constants"]], "graphnet.data.dataconverter": [[2, "module-graphnet.data.dataconverter"]], "graphnet.data.dataloader": [[2, "module-graphnet.data.dataloader"]], "graphnet.data.dataset": [[2, "module-graphnet.data.dataset"]], "graphnet.data.pipeline": [[2, "module-graphnet.data.pipeline"]], "extractors": [[3, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor": [[3, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor": [[3, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor": [[3, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[3, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3pisaextractor": [[3, "module-graphnet.data.extractors.i3pisaextractor"]], "graphnet.data.extractors.i3retroextractor": [[3, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor": [[3, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor": [[3, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor": [[3, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[4, "module-graphnet.data.extractors.utilities"], [7, "module-graphnet.data.utilities"], [17, "module-graphnet.utilities"]], "graphnet.data.extractors.utilities.collections": [[4, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[4, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[4, "module-graphnet.data.extractors.utilities.types"]], "parquet": [[5, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[5, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[5, "module-graphnet.data.parquet.parquet_dataset"]], "sqlite": [[6, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[6, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[6, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[6, "module-graphnet.data.sqlite.sqlite_utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[7, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[7, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver": [[7, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[8, "module-graphnet.deployment"]], "i3modules": [[9, "module-graphnet.deployment.i3modules"]], "graphnet.deployment.i3modules.graphnet_module": [[9, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[10, "module-graphnet.models"]], "graphnet.models.coarsening": [[10, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders": [[10, "module-graphnet.models.graph_builders"]], "graphnet.models.model": [[10, "module-graphnet.models.model"]], "graphnet.models.standard_model": [[10, "module-graphnet.models.standard_model"]], "graphnet.models.utils": [[10, "module-graphnet.models.utils"]], "components": [[11, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[11, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[11, "module-graphnet.models.components.pool"]], "detector": [[12, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[12, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[12, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus": [[12, "module-graphnet.models.detector.prometheus"]], "gnn": [[13, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[13, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[13, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[13, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[13, "module-graphnet.models.gnn.gnn"]], "task": [[14, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[14, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[14, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[14, "module-graphnet.models.task.task"]], "pisa": [[15, "module-graphnet.pisa"]], "graphnet.pisa.fitting": [[15, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[15, "module-graphnet.pisa.plotting"]], "training": [[16, "module-graphnet.training"]], "graphnet.training.callbacks": [[16, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[16, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[16, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[16, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[16, "module-graphnet.training.weight_fitting"]], "graphnet.utilities.argparse": [[17, "module-graphnet.utilities.argparse"]], "graphnet.utilities.decorators": [[17, "module-graphnet.utilities.decorators"]], "graphnet.utilities.filesys": [[17, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports": [[17, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging": [[17, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths": [[17, "module-graphnet.utilities.maths"]], "config": [[18, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[18, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[18, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[18, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[18, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[18, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[18, "module-graphnet.utilities.config.training_config"]], "src": [[19, "src"]], "Contribute": [[20, "contribute"]], "GitHub issues": [[20, "github-issues"]], "Pull requests": [[20, "pull-requests"]], "Conventions": [[20, "conventions"]], "Code quality": [[20, "code-quality"]], "Install": [[22, "install"]], "Installing with IceTray": [[22, "installing-with-icetray"]], "Installing stand-alone": [[22, "installing-stand-alone"]], "Running in Docker": [[22, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "graphnet.constants": [[1, "module-graphnet.constants"]], "module": [[1, "module-graphnet"], [1, "module-graphnet.constants"], [2, "module-graphnet.data"], [2, "module-graphnet.data.constants"], [2, "module-graphnet.data.dataconverter"], [2, "module-graphnet.data.dataloader"], [2, "module-graphnet.data.dataset"], [2, "module-graphnet.data.pipeline"], [3, "module-graphnet.data.extractors"], [3, "module-graphnet.data.extractors.i3extractor"], [3, "module-graphnet.data.extractors.i3featureextractor"], [3, "module-graphnet.data.extractors.i3genericextractor"], [3, "module-graphnet.data.extractors.i3hybridrecoextractor"], [3, "module-graphnet.data.extractors.i3pisaextractor"], [3, "module-graphnet.data.extractors.i3retroextractor"], [3, "module-graphnet.data.extractors.i3splinempeextractor"], [3, "module-graphnet.data.extractors.i3truthextractor"], [3, "module-graphnet.data.extractors.i3tumextractor"], [4, "module-graphnet.data.extractors.utilities"], [4, "module-graphnet.data.extractors.utilities.collections"], [4, "module-graphnet.data.extractors.utilities.frames"], [4, "module-graphnet.data.extractors.utilities.types"], [5, "module-graphnet.data.parquet"], [5, "module-graphnet.data.parquet.parquet_dataconverter"], [5, "module-graphnet.data.parquet.parquet_dataset"], [6, "module-graphnet.data.sqlite"], [6, "module-graphnet.data.sqlite.sqlite_dataconverter"], [6, "module-graphnet.data.sqlite.sqlite_dataset"], [6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [6, "module-graphnet.data.sqlite.sqlite_selection"], [6, "module-graphnet.data.sqlite.sqlite_utilities"], [7, "module-graphnet.data.utilities"], [7, "module-graphnet.data.utilities.parquet_to_sqlite"], [7, "module-graphnet.data.utilities.random"], [7, "module-graphnet.data.utilities.string_selection_resolver"], [8, "module-graphnet.deployment"], [9, "module-graphnet.deployment.i3modules"], [9, "module-graphnet.deployment.i3modules.graphnet_module"], [10, "module-graphnet.models"], [10, "module-graphnet.models.coarsening"], [10, "module-graphnet.models.graph_builders"], [10, "module-graphnet.models.model"], [10, "module-graphnet.models.standard_model"], [10, "module-graphnet.models.utils"], [11, "module-graphnet.models.components"], [11, "module-graphnet.models.components.layers"], [11, "module-graphnet.models.components.pool"], [12, "module-graphnet.models.detector"], [12, "module-graphnet.models.detector.detector"], [12, "module-graphnet.models.detector.icecube"], [12, "module-graphnet.models.detector.prometheus"], [13, "module-graphnet.models.gnn"], [13, "module-graphnet.models.gnn.convnet"], [13, "module-graphnet.models.gnn.dynedge"], [13, "module-graphnet.models.gnn.dynedge_jinst"], [13, "module-graphnet.models.gnn.gnn"], [14, "module-graphnet.models.task"], [14, "module-graphnet.models.task.classification"], [14, "module-graphnet.models.task.reconstruction"], [14, "module-graphnet.models.task.task"], [15, "module-graphnet.pisa"], [15, "module-graphnet.pisa.fitting"], [15, "module-graphnet.pisa.plotting"], [16, "module-graphnet.training"], [16, "module-graphnet.training.callbacks"], [16, "module-graphnet.training.labels"], [16, "module-graphnet.training.loss_functions"], [16, "module-graphnet.training.utils"], [16, "module-graphnet.training.weight_fitting"], [17, "module-graphnet.utilities"], [17, "module-graphnet.utilities.argparse"], [17, "module-graphnet.utilities.decorators"], [17, "module-graphnet.utilities.filesys"], [17, "module-graphnet.utilities.imports"], [17, "module-graphnet.utilities.logging"], [17, "module-graphnet.utilities.maths"], [18, "module-graphnet.utilities.config"], [18, "module-graphnet.utilities.config.base_config"], [18, "module-graphnet.utilities.config.configurable"], [18, "module-graphnet.utilities.config.dataset_config"], [18, "module-graphnet.utilities.config.model_config"], [18, "module-graphnet.utilities.config.parsing"], [18, "module-graphnet.utilities.config.training_config"]], "columnmissingexception": [[2, "graphnet.data.dataset.ColumnMissingException"]], "deepcore (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.DEEPCORE"]], "dataconverter (class in graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.DataConverter"]], "dataloader (class in graphnet.data.dataloader)": [[2, "graphnet.data.dataloader.DataLoader"]], "dataset (class in graphnet.data.dataset)": [[2, "graphnet.data.dataset.Dataset"]], "features (class in graphnet.data.constants)": [[2, "graphnet.data.constants.FEATURES"]], "fileset (class in graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.FileSet"]], "icecube86 (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.ICECUBE86"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[2, "graphnet.data.pipeline.InSQLitePipeline"]], "kaggle (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[2, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.UPGRADE"]], "__init__() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.__init__"]], "__init__() (graphnet.data.dataconverter.fileset method)": [[2, "graphnet.data.dataconverter.FileSet.__init__"]], "__init__() (graphnet.data.dataloader.dataloader method)": [[2, "graphnet.data.dataloader.DataLoader.__init__"]], "__init__() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.__init__"]], "__init__() (graphnet.data.pipeline.insqlitepipeline method)": [[2, "graphnet.data.pipeline.InSQLitePipeline.__init__"]], "add_label() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.add_label"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.cache_output_files"]], "collate_fn() (in module graphnet.data.dataloader)": [[2, "graphnet.data.dataloader.collate_fn"]], "concatenate() (graphnet.data.dataset.dataset class method)": [[2, "graphnet.data.dataset.Dataset.concatenate"]], "do_shuffle() (in module graphnet.data.dataloader)": [[2, "graphnet.data.dataloader.do_shuffle"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[2, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "from_config() (graphnet.data.dataset.dataset class method)": [[2, "graphnet.data.dataset.Dataset.from_config"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[2, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[2, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data": [[2, "module-graphnet.data"]], "graphnet.data.constants": [[2, "module-graphnet.data.constants"]], "graphnet.data.dataconverter": [[2, "module-graphnet.data.dataconverter"]], "graphnet.data.dataloader": [[2, "module-graphnet.data.dataloader"]], "graphnet.data.dataset": [[2, "module-graphnet.data.dataset"]], "graphnet.data.pipeline": [[2, "module-graphnet.data.pipeline"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[2, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.merge_files"]], "path (graphnet.data.dataset.dataset property)": [[2, "graphnet.data.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.query_table"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.save_data"]], "truth_table (graphnet.data.dataset.dataset property)": [[2, "graphnet.data.dataset.Dataset.truth_table"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[3, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[3, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[3, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[3, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "__init__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.__init__"]], "__init__() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.__init__"]], "__init__() (graphnet.data.extractors.i3featureextractor.i3featureextractor method)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3hybridrecoextractor.i3galacticplanehybridrecoextractor method)": [[3, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3pisaextractor.i3pisaextractor method)": [[3, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3splinempeextractor.i3splinempeicextractor method)": [[3, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3tumextractor.i3tumextractor method)": [[3, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor.__init__"]], "graphnet.data.extractors": [[3, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor": [[3, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor": [[3, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor": [[3, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[3, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3pisaextractor": [[3, "module-graphnet.data.extractors.i3pisaextractor"]], "graphnet.data.extractors.i3retroextractor": [[3, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor": [[3, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor": [[3, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor": [[3, "module-graphnet.data.extractors.i3tumextractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.get_member_variables"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities": [[4, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[4, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[4, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[4, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_type"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet": [[5, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[5, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[5, "module-graphnet.data.parquet.parquet_dataset"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "__init__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__init__"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite": [[6, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[6, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[6, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[6, "module-graphnet.data.sqlite.sqlite_utilities"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "__init__() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.__init__"]], "__init__() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.__init__"]], "graphnet.data.utilities": [[7, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[7, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[7, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver": [[7, "module-graphnet.data.utilities.string_selection_resolver"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[7, "graphnet.data.utilities.random.pairwise_shuffle"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.deployment": [[8, "module-graphnet.deployment"]], "configure() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.Configure"]], "dtypes (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.DTYPES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecube86 attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubedeepcore attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubeupgrade attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade.FEATURES"]], "graphnetmodulebase (class in graphnet.deployment.i3modules.graphnet_module)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase"]], "graphnetmoduleicecube86 (class in graphnet.deployment.i3modules.graphnet_module)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86"]], "graphnetmoduleicecubedeepcore (class in graphnet.deployment.i3modules.graphnet_module)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore"]], "graphnetmoduleicecubeupgrade (class in graphnet.deployment.i3modules.graphnet_module)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecube86 attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubedeepcore attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubeupgrade attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade.I3FEATUREEXTRACTOR_CLASS"]], "physics() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.Physics"]], "__init__() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.__init__"]], "graphnet.deployment.i3modules": [[9, "module-graphnet.deployment.i3modules"]], "graphnet.deployment.i3modules.graphnet_module": [[9, "module-graphnet.deployment.i3modules.graphnet_module"]], "attributecoarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.DOMCoarsening"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[10, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[10, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[10, "graphnet.models.graph_builders.KNNGraphBuilder"]], "model (class in graphnet.models.model)": [[10, "graphnet.models.model.Model"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[10, "graphnet.models.graph_builders.RadialGraphBuilder"]], "standardmodel (class in graphnet.models.standard_model)": [[10, "graphnet.models.standard_model.StandardModel"]], "__init__() (graphnet.models.coarsening.attributecoarsening method)": [[10, "graphnet.models.coarsening.AttributeCoarsening.__init__"]], "__init__() (graphnet.models.coarsening.coarsening method)": [[10, "graphnet.models.coarsening.Coarsening.__init__"]], "__init__() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[10, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.__init__"]], "__init__() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[10, "graphnet.models.graph_builders.EuclideanGraphBuilder.__init__"]], "__init__() (graphnet.models.graph_builders.knngraphbuilder method)": [[10, "graphnet.models.graph_builders.KNNGraphBuilder.__init__"]], "__init__() (graphnet.models.graph_builders.radialgraphbuilder method)": [[10, "graphnet.models.graph_builders.RadialGraphBuilder.__init__"]], "__init__() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.__init__"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[10, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[10, "graphnet.models.utils.calculate_xyzt_homophily"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.coarsening.coarsening method)": [[10, "graphnet.models.coarsening.Coarsening.forward"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[10, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[10, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[10, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "forward() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.forward"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.forward"]], "from_config() (graphnet.models.model.model class method)": [[10, "graphnet.models.model.Model.from_config"]], "graphnet.models": [[10, "module-graphnet.models"]], "graphnet.models.coarsening": [[10, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders": [[10, "module-graphnet.models.graph_builders"]], "graphnet.models.model": [[10, "module-graphnet.models.model"]], "graphnet.models.standard_model": [[10, "module-graphnet.models.standard_model"]], "graphnet.models.utils": [[10, "module-graphnet.models.utils"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.inference"]], "knn_graph_batch() (in module graphnet.models.utils)": [[10, "graphnet.models.utils.knn_graph_batch"]], "load() (graphnet.models.model.model class method)": [[10, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.predict"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.predict_as_dataframe"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[10, "graphnet.models.coarsening.Coarsening.reduce_options"]], "save() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.save_state_dict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.training_step"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.unbatch_edge_index"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.validation_step"]], "dynedgeconv (class in graphnet.models.components.layers)": [[11, "graphnet.models.components.layers.DynEdgeConv"]], "__init__() (graphnet.models.components.layers.dynedgeconv method)": [[11, "graphnet.models.components.layers.DynEdgeConv.__init__"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[11, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components": [[11, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[11, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[11, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool_x"]], "detector (class in graphnet.models.detector.detector)": [[12, "graphnet.models.detector.detector.Detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "prometheus (class in graphnet.models.detector.prometheus)": [[12, "graphnet.models.detector.prometheus.Prometheus"]], "__init__() (graphnet.models.detector.detector.detector method)": [[12, "graphnet.models.detector.detector.Detector.__init__"]], "features (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.features"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[12, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[12, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[12, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[12, "graphnet.models.detector.prometheus.Prometheus.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[12, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector": [[12, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[12, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[12, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus": [[12, "module-graphnet.models.detector.prometheus"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.nb_outputs"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "convnet (class in graphnet.models.gnn.convnet)": [[13, "graphnet.models.gnn.convnet.ConvNet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[13, "graphnet.models.gnn.dynedge.DynEdge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "gnn (class in graphnet.models.gnn.gnn)": [[13, "graphnet.models.gnn.gnn.GNN"]], "__init__() (graphnet.models.gnn.convnet.convnet method)": [[13, "graphnet.models.gnn.convnet.ConvNet.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge.__init__"]], "__init__() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.__init__"]], "__init__() (graphnet.models.gnn.gnn.gnn method)": [[13, "graphnet.models.gnn.gnn.GNN.__init__"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[13, "graphnet.models.gnn.convnet.ConvNet.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[13, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn": [[13, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[13, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[13, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[13, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[13, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[13, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[13, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "identitytask (class in graphnet.models.task.task)": [[14, "graphnet.models.task.task.IdentityTask"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.MulticlassClassificationTask"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.PositionReconstruction"]], "task (class in graphnet.models.task.task)": [[14, "graphnet.models.task.task.Task"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "__init__() (graphnet.models.task.task.identitytask method)": [[14, "graphnet.models.task.task.IdentityTask.__init__"]], "__init__() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.__init__"]], "compute_loss() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task": [[14, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[14, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[14, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[14, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[14, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[14, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[14, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[14, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[14, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.train_eval"]], "contourfitter (class in graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.WeightFitter"]], "__init__() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.__init__"]], "__init__() (graphnet.pisa.fitting.weightfitter method)": [[15, "graphnet.pisa.fitting.WeightFitter.__init__"]], "config_updater() (in module graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[15, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa": [[15, "module-graphnet.pisa"]], "graphnet.pisa.fitting": [[15, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[15, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.read_entry"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.BjoernLow"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.CrossEntropyLoss"]], "direction (class in graphnet.training.labels)": [[16, "graphnet.training.labels.Direction"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "label (class in graphnet.training.labels)": [[16, "graphnet.training.labels.Label"]], "logcmk (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.MSELoss"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[16, "graphnet.training.callbacks.ProgressBar"]], "rmseloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.RMSELoss"]], "uniform (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.Uniform"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "weightfitter (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.WeightFitter"]], "__init__() (graphnet.training.callbacks.piecewiselinearlr method)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR.__init__"]], "__init__() (graphnet.training.labels.direction method)": [[16, "graphnet.training.labels.Direction.__init__"]], "__init__() (graphnet.training.labels.label method)": [[16, "graphnet.training.labels.Label.__init__"]], "__init__() (graphnet.training.loss_functions.crossentropyloss method)": [[16, "graphnet.training.loss_functions.CrossEntropyLoss.__init__"]], "__init__() (graphnet.training.loss_functions.lossfunction method)": [[16, "graphnet.training.loss_functions.LossFunction.__init__"]], "__init__() (graphnet.training.weight_fitting.weightfitter method)": [[16, "graphnet.training.weight_fitting.WeightFitter.__init__"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[16, "graphnet.training.loss_functions.LogCMK.backward"]], "collate_fn() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.collate_fn"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[16, "graphnet.training.weight_fitting.WeightFitter.fit"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[16, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[16, "graphnet.training.loss_functions.LossFunction.forward"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "get_predictions() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.get_predictions"]], "graphnet.training": [[16, "module-graphnet.training"]], "graphnet.training.callbacks": [[16, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[16, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[16, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[16, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[16, "module-graphnet.training.weight_fitting"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "make_dataloader() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.make_train_validation_dataloader"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "save_results() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.save_results"]], "argumentparser (class in graphnet.utilities.argparse)": [[17, "graphnet.utilities.argparse.ArgumentParser"]], "loggermixin (class in graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.LoggerMixin"]], "options (class in graphnet.utilities.argparse)": [[17, "graphnet.utilities.argparse.Options"]], "repeatfilter (class in graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.RepeatFilter"]], "__init__() (graphnet.utilities.argparse.argumentparser method)": [[17, "graphnet.utilities.argparse.ArgumentParser.__init__"]], "__init__() (graphnet.utilities.argparse.options method)": [[17, "graphnet.utilities.argparse.Options.__init__"]], "__init__() (graphnet.utilities.logging.repeatfilter method)": [[17, "graphnet.utilities.logging.RepeatFilter.__init__"]], "contains() (graphnet.utilities.argparse.options method)": [[17, "graphnet.utilities.argparse.Options.contains"]], "critical() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.critical"]], "debug() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.debug"]], "eps_like() (in module graphnet.utilities.maths)": [[17, "graphnet.utilities.maths.eps_like"]], "error() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.error"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[17, "graphnet.utilities.logging.RepeatFilter.filter"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[17, "graphnet.utilities.filesys.find_i3_files"]], "get_formatters() (in module graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities": [[17, "module-graphnet.utilities"]], "graphnet.utilities.argparse": [[17, "module-graphnet.utilities.argparse"]], "graphnet.utilities.decorators": [[17, "module-graphnet.utilities.decorators"]], "graphnet.utilities.filesys": [[17, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports": [[17, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging": [[17, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths": [[17, "module-graphnet.utilities.maths"]], "has_extension() (in module graphnet.utilities.filesys)": [[17, "graphnet.utilities.filesys.has_extension"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[17, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[17, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[17, "graphnet.utilities.imports.has_torch_package"]], "info() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.info"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[17, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[17, "graphnet.utilities.filesys.is_i3_file"]], "pop_default() (graphnet.utilities.argparse.options method)": [[17, "graphnet.utilities.argparse.Options.pop_default"]], "requires_icecube() (in module graphnet.utilities.imports)": [[17, "graphnet.utilities.imports.requires_icecube"]], "set_logging_level() (in module graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.set_logging_level"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[17, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "warn_once() (in module graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.warn_once"]], "warning() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.warning"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[17, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[18, "graphnet.utilities.config.base_config.BaseConfig"]], "configurable (class in graphnet.utilities.config.configurable)": [[18, "graphnet.utilities.config.configurable.Configurable"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[18, "graphnet.utilities.config.model_config.ModelConfig"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[18, "graphnet.utilities.config.training_config.TrainingConfig"]], "__init__() (graphnet.utilities.config.configurable.configurable method)": [[18, "graphnet.utilities.config.configurable.Configurable.__init__"]], "__init__() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.__init__"]], "__init__() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig.__init__"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[18, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[18, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "config (graphnet.utilities.config.configurable.configurable property)": [[18, "graphnet.utilities.config.configurable.Configurable.config"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[18, "graphnet.utilities.config.configurable.Configurable.from_config"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[18, "graphnet.utilities.config.base_config.get_all_argument_values"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config": [[18, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[18, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[18, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[18, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[18, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[18, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[18, "module-graphnet.utilities.config.training_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.list_all_submodules"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.load"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[18, "graphnet.utilities.config.configurable.Configurable.save_config"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[18, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[18, "graphnet.utilities.config.model_config.save_model_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.traverse_and_apply"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]]}})