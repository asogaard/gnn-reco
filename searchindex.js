Search.setIndex({"docnames": ["about", "api", "api/graphnet", "api/graphnet.data", "api/graphnet.data.extractors", "api/graphnet.data.extractors.utilities", "api/graphnet.data.parquet", "api/graphnet.data.sqlite", "api/graphnet.data.utilities", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.models", "api/graphnet.models.components", "api/graphnet.models.detector", "api/graphnet.models.gnn", "api/graphnet.models.task", "api/graphnet.pisa", "api/graphnet.training", "api/graphnet.utilities", "api/graphnet.utilities.config", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api.rst", "api/graphnet.rst", "api/graphnet.data.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.utilities.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.models.rst", "api/graphnet.models.components.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.task.rst", "api/graphnet.pisa.rst", "api/graphnet.training.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.config.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "API", "graphnet.data", "graphnet.data.extractors", "graphnet.data.extractors.utilities", "graphnet.data.parquet", "graphnet.data.sqlite", "graphnet.data.utilities", "graphnet.deployment", "graphnet.deployment.i3modules", "graphnet.models", "graphnet.models.components", "graphnet.models.detector", "graphnet.models.gnn", "graphnet.models.task", "graphnet.pisa", "graphnet.training", "graphnet.utilities", "graphnet.utilities.config", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 20, 21, 22, 23], "i": [0, 1, 2, 5, 7, 8, 12, 14, 15, 16, 17, 19, 21, 22, 23], "an": [0, 5, 7, 8, 10, 17, 21, 22, 23], "open": [0, 7, 21, 22], "sourc": [0, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22], "python": [0, 1, 2, 4, 5, 21, 22, 23], "framework": [0, 22], "aim": [0, 1, 2, 21, 22], "provid": [0, 1, 2, 7, 11, 17, 21, 22, 23], "high": [0, 22], "qualiti": [0, 22], "user": [0, 11, 17, 22, 23], "friendli": [0, 22], "end": [0, 1, 2, 22], "function": [0, 1, 5, 7, 8, 12, 15, 16, 17, 18, 19, 22], "perform": [0, 12, 14, 15, 22], "reconstruct": [0, 1, 2, 9, 10, 11, 22], "task": [0, 1, 2, 11, 17, 21, 22], "neutrino": [0, 1, 2, 7, 16, 22], "telescop": [0, 1, 2, 22], "us": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23], "graph": [0, 1, 2, 7, 12, 13, 17, 21, 22], "neural": [0, 1, 2, 22], "network": [0, 1, 2, 14, 22], "gnn": [0, 1, 2, 10, 11, 16, 22, 23], "make": [0, 7, 17, 19, 21, 22, 23], "fast": [0, 17, 22, 23], "easi": [0, 22], "train": [0, 1, 2, 7, 8, 9, 19, 20, 22, 23], "complex": [0, 11, 22], "model": [0, 1, 2, 7, 9, 10, 16, 17, 19, 20, 22, 23], "can": [0, 1, 2, 7, 8, 12, 16, 17, 19, 21, 22, 23], "event": [0, 1, 2, 7, 8, 12, 15, 16, 17, 19, 22], "state": [0, 22], "art": [0, 22], "arbitrari": [0, 22], "detector": [0, 1, 2, 10, 11, 22], "configur": [0, 1, 2, 10, 11, 16, 18, 22], "infer": [0, 1, 2, 9, 10, 15, 22, 23], "time": [0, 7, 12, 13, 15, 22, 23], "ar": [0, 1, 2, 5, 6, 7, 8, 12, 14, 15, 16, 17, 19, 21, 22, 23], "order": [0, 5, 22], "magnitud": [0, 22], "faster": [0, 17, 22], "than": [0, 15, 17, 22], "tradit": [0, 22], "techniqu": [0, 22], "common": [0, 1, 2, 17, 22], "ml": [0, 1, 2, 22], "develop": [0, 1, 2, 21, 22, 23], "physicist": [0, 1, 2, 22], "wish": [0, 21, 22], "tool": [0, 1, 2, 22], "research": [0, 22], "By": [0, 8, 15, 22], "unit": [0, 17, 21, 22], "both": [0, 15, 16, 22], "group": [0, 12, 22], "increas": [0, 17, 22], "longev": [0, 22], "usabl": [0, 22], "individu": [0, 7, 12, 14, 22], "code": [0, 7, 19, 22], "contribut": [0, 22, 23], "from": [0, 1, 2, 4, 5, 6, 7, 8, 12, 15, 16, 17, 19, 21, 22, 23], "build": [0, 1, 2, 11, 13, 19, 22], "gener": [0, 7, 15, 17, 22], "reusabl": [0, 22], "softwar": [0, 17, 22], "packag": [0, 1, 2, 8, 19, 21, 22, 23], "base": [0, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 22], "engin": [0, 22], "best": [0, 21, 22], "practic": [0, 21, 22], "lower": [0, 16, 22], "technic": [0, 22], "threshold": [0, 22], "most": [0, 1, 2, 8, 22, 23], "scientif": [0, 1, 2, 22], "problem": [0, 21, 22], "The": [0, 5, 7, 12, 14, 15, 16, 17, 22], "improv": [0, 1, 2, 22], "classif": [0, 1, 2, 11, 17, 22], "yield": [0, 14, 16, 17, 22], "veri": [0, 8, 22], "accur": [0, 22], "e": [0, 1, 2, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 19, 21, 22, 23], "g": [0, 1, 2, 5, 7, 8, 12, 15, 17, 21, 22, 23], "low": [0, 22], "energi": [0, 15, 17, 22], "observ": [0, 22], "icecub": [0, 1, 2, 5, 10, 11, 22, 23], "here": [0, 21, 22, 23], "implement": [0, 1, 2, 6, 7, 12, 14, 17, 21, 22], "wa": [0, 22], "appli": [0, 7, 12, 14, 19, 22], "oscil": [0, 16, 22], "lead": [0, 22], "signific": [0, 22], "angular": [0, 22], "rang": [0, 15, 22], "relev": [0, 1, 2, 5, 8, 21, 22], "studi": [0, 22], "furthermor": [0, 22], "shown": [0, 22], "could": [0, 21, 22], "muon": [0, 7, 22], "v": [0, 15, 22], "therebi": [0, 1, 2, 7, 19, 22], "effici": [0, 22], "puriti": [0, 22], "sampl": [0, 8, 22], "analysi": [0, 22, 23], "similarli": [0, 5, 22], "ha": [0, 5, 6, 7, 14, 17, 22, 23], "great": [0, 22], "point": [0, 17, 22], "analys": [0, 9, 16, 22], "final": [0, 7, 12, 17, 19, 22], "millisecond": [0, 22], "allow": [0, 9, 10, 11, 12, 17, 22, 23], "whole": [0, 22], "new": [0, 1, 2, 12, 21, 22], "type": [0, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22], "cosmic": [0, 22], "alert": [0, 22], "which": [0, 5, 7, 8, 10, 12, 14, 15, 16, 17, 22, 23], "were": [0, 22], "previous": [0, 22], "unfeas": [0, 22], "possibl": [0, 5, 21, 22], "identifi": [0, 7, 19, 22], "10": [0, 17, 22], "tev": [0, 22], "monitor": [0, 22], "rate": [0, 17, 22], "direct": [0, 15, 17, 22], "real": [0, 22], "thi": [0, 1, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23], "enabl": [0, 3, 22], "first": [0, 17, 21, 22], "ever": [0, 22], "despit": [0, 22], "larg": [0, 17, 22], "background": [0, 22], "origin": [0, 16, 22], "compris": [0, 22], "number": [0, 7, 8, 12, 13, 14, 15, 17, 22], "modul": [0, 1, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "necessari": [0, 5, 7, 21, 22], "workflow": [0, 22], "ingest": [0, 1, 2, 3, 13, 22], "raw": [0, 22], "data": [0, 1, 2, 10, 12, 13, 14, 15, 17, 19, 20, 22, 23], "domain": [0, 1, 2, 3, 9, 22], "specif": [0, 1, 2, 3, 5, 6, 7, 9, 12, 13, 14, 15, 17, 21, 22, 23], "format": [0, 1, 2, 3, 5, 6, 7, 16, 19, 21, 22, 23], "deploi": [0, 1, 2, 9, 10, 22], "chain": [0, 1, 2, 9, 10, 11, 22, 23], "illustr": [0, 21, 22], "figur": [0, 16, 22], "below": [0, 8, 16, 17, 21, 22, 23], "level": [0, 7, 12, 22, 23], "overview": [0, 22], "typic": [0, 5, 22], "convert": [0, 1, 2, 3, 5, 6, 7, 8, 22, 23], "industri": [0, 3, 22], "standard": [0, 3, 7, 8, 10, 21, 22], "intermedi": [0, 1, 2, 3, 6, 7, 14, 22, 23], "file": [0, 1, 2, 3, 5, 6, 7, 8, 16, 17, 19, 22, 23], "read": [0, 3, 5, 6, 7, 13, 14, 15, 22, 23], "simpl": [0, 11, 22], "physic": [0, 1, 2, 5, 7, 9, 10, 11, 15, 22], "orient": [0, 11, 22], "compon": [0, 1, 2, 11, 22], "manag": [0, 17, 22], "experi": [0, 1, 2, 17, 22], "log": [0, 15, 17, 22, 23], "deploy": [0, 2, 20, 22], "modular": [0, 11, 22], "subclass": [0, 11, 22], "torch": [0, 6, 7, 10, 11, 12, 14, 22, 23], "nn": [0, 11, 12, 14, 22], "mean": [0, 6, 7, 11, 14, 17, 19, 22], "onli": [0, 1, 2, 7, 11, 12, 15, 16, 17, 19, 22, 23], "need": [0, 5, 11, 17, 22, 23], "import": [0, 7, 11, 22], "few": [0, 11, 21, 22], "exist": [0, 7, 11, 19, 22], "purpos": [0, 11, 17, 22], "built": [0, 11, 22], "them": [0, 1, 2, 5, 11, 14, 15, 16, 22, 23], "togeth": [0, 11, 22], "form": [0, 11, 15, 22], "complet": [0, 11, 22], "extend": [0, 1, 2, 22], "suit": [0, 22], "through": [0, 17, 22], "layer": [0, 11, 14, 15, 22], "connect": [0, 7, 13, 17, 22], "etc": [0, 17, 22], "optimis": [0, 1, 2, 22], "differ": [0, 7, 10, 17, 21, 22, 23], "track": [0, 15, 21, 22], "These": [0, 21, 22], "prepar": [0, 17, 22], "satisfi": [0, 22], "o": [0, 15, 22], "load": [0, 8, 19, 22], "requir": [0, 7, 15, 17, 22, 23], "when": [0, 5, 7, 12, 14, 21, 22, 23], "batch": [0, 12, 14, 17, 22], "do": [0, 17, 19, 21, 22, 23], "predict": [0, 10, 14, 15, 17, 22], "either": [0, 17, 22, 23], "contain": [0, 1, 5, 6, 7, 10, 14, 15, 17, 22, 23], "imag": [0, 1, 2, 7, 21, 22, 23], "portabl": [0, 22], "depend": [0, 22, 23], "free": [0, 17, 22], "split": [0, 22], "up": [0, 21, 22, 23], "abov": [0, 8, 16, 17, 22, 23], "interfac": [0, 16, 22, 23], "block": [0, 1, 2, 22], "pre": [0, 7, 13, 21, 22], "directli": [0, 22], "while": [0, 17, 22], "continu": [0, 17, 22], "expand": [0, 22], "": [0, 5, 7, 8, 14, 15, 17, 19, 22, 23], "capabl": [0, 22], "section": [1, 16], "document": [1, 17], "all": [1, 2, 6, 7, 12, 13, 14, 15, 17, 19, 21, 23], "public": [1, 17], "class": [1, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21], "conveni": [1, 2, 21, 23], "collabor": [1, 2], "solv": [1, 2, 21], "It": [1, 2, 5, 7, 21], "leverag": [1, 2], "advanc": [1, 2, 12], "machin": [1, 2, 23], "learn": [1, 2, 17, 23], "without": [1, 2, 16, 17, 23], "have": [1, 2, 7, 8, 12, 15, 17, 21, 23], "expert": [1, 2], "themselv": [1, 2, 19], "acceler": [1, 2], "area": [1, 2], "phyic": [1, 2], "design": [1, 2], "principl": [1, 2], "streamlin": [1, 2], "process": [1, 2, 7, 10, 13, 14, 21, 23], "transform": [1, 2, 12, 15, 17], "extens": [1, 2], "basic": [1, 2], "across": [1, 2, 5, 7, 8, 12, 17, 18, 19], "variou": [1, 2, 10], "easili": [1, 2], "architectur": [1, 2, 14], "main": [1, 2, 14, 21, 23], "featur": [1, 2, 6, 7, 10, 12, 13, 14, 15, 17, 19, 21], "i3": [1, 2, 5, 6, 7, 8, 23], "more": [1, 2, 7, 8, 19], "index": [1, 2, 5, 6, 7, 12, 17], "sqlite": [1, 2, 3, 8, 23], "suitabl": [1, 2], "plug": [1, 2], "plai": [1, 2], "abstract": [1, 2, 13, 14, 15, 17, 19], "awai": [1, 2], "detail": [1, 2, 23], "expos": [1, 2], "physicst": [1, 2], "what": [1, 2, 21], "i3modul": [1, 2, 9], "includ": [1, 2, 7, 16, 17, 19, 21], "docker": [1, 2], "run": [1, 2, 8, 10], "containeris": [1, 2], "fashion": [1, 2], "subpackag": [1, 2, 3, 4, 9, 11, 18], "extractor": [2, 3, 6, 7], "parquet": [2, 3, 8, 23], "util": [2, 3, 4, 7, 20], "pisa": [2, 20, 23], "fit": [2, 17, 19], "plot": 2, "callback": 2, "label": [2, 14, 15, 16], "loss_funct": [2, 15], "weight_fit": 2, "config": [2, 8, 16, 17, 18], "parquet_dataconvert": 3, "parquet_dataset": 3, "sqlite_dataconvert": 3, "sqlite_dataset": 3, "sqlite_dataset_perturb": 3, "sqlite_select": 3, "sqlite_util": 3, "parquet_to_sqlit": 3, "random": [3, 7, 19], "string_selection_resolv": 3, "collect": [4, 10, 17], "i3extractor": [4, 6, 7], "extract": [4, 5, 7, 8, 15, 17], "pure": [4, 5], "i3fram": [4, 5, 10], "frame": [4, 7, 10], "method": [5, 6, 7, 12, 15, 17], "submodul": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "manipul": 5, "flatten_nested_dictionari": 5, "obj": [5, 19], "parent_kei": 5, "separ": [5, 17, 23], "__": 5, "flatten": 5, "nest": 5, "dictionari": [5, 6, 7, 16, 19], "non": [5, 7, 17], "dict": [5, 6, 7, 13, 16, 17, 19], "valu": [5, 7, 12, 16, 17, 19], "exampl": [5, 8, 12, 17, 19, 23], "d": [5, 17, 21], "b": [5, 12], "1": [5, 6, 7, 8, 12, 14, 15, 16, 17, 19, 23], "c": [5, 12, 17, 23], "2": [5, 12, 14, 15, 16, 17, 19], "a__b": 5, "paramet": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "union": [5, 6, 7, 8, 12, 14, 15, 17, 19], "ani": [5, 6, 7, 10, 12, 14, 15, 16, 17, 19, 23], "object": [5, 7, 12, 13, 15, 16, 17], "should": [5, 7, 8, 12, 17, 19, 21, 23], "applic": 5, "str": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "default": [5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 19], "combin": [5, 15, 19], "name": [5, 6, 7, 8, 15, 16, 17, 19, 21, 23], "parent": 5, "kei": [5, 7, 12, 17, 19], "string": [5, 7, 8, 10, 12, 13, 19], "concaten": [5, 14], "nester": 5, "return": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "serialis": [5, 19], "json": [5, 19], "save": [5, 6, 7, 8, 16, 17, 19, 23], "list": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "therefor": 5, "we": [5, 8, 21, 23], "each": [5, 7, 8, 12, 14, 15, 16, 17], "element": [5, 19], "outer": 5, "abl": [5, 23], "de": 5, "correspond": [5, 7, 8, 14, 15, 17, 23], "transpose_list_of_dict": 5, "arrai": 5, "transpos": 5, "work": [5, 21, 23], "frame_is_montecarlo": 5, "check": [5, 7, 16, 19, 21, 23], "whether": [5, 7, 14, 16, 17, 19], "mont": 5, "carlo": 5, "simul": 5, "bool": [5, 7, 8, 14, 16, 17, 19], "frame_is_nois": 5, "nois": [5, 7], "get_om_keys_and_pulseseri": 5, "pulseseri": 5, "calibr": 5, "none": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "get": [5, 7, 16, 17, 23], "indici": [5, 7, 8, 17], "gcd_dict": 5, "puls": [5, 7, 12], "seri": [5, 7], "p": [5, 7, 17], "om": 5, "option": [5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 19, 23], "i3calibr": 5, "tupl": [5, 6, 7, 8, 14, 15, 16, 17], "indicesfor": 5, "gcd": [5, 8], "is_boost_enum": 5, "inherit": [5, 13, 15, 17], "boost": 5, "enum": 5, "is_boost_class": 5, "instanc": [5, 6, 7, 16, 17, 19, 23], "is_icecube_class": 5, "is_typ": 5, "is_method": 5, "break_cyclic_recurs": 5, "fn": [5, 19], "ensur": [5, 8, 17, 21, 23], "isn": 5, "t": [5, 7, 13, 16, 17, 23], "call": [5, 7, 12, 16, 17], "recurs": [5, 19], "same": [5, 7, 12, 15, 17, 19], "callabl": [5, 12, 15, 17, 19], "get_member_vari": 5, "return_discard": 5, "fals": [5, 14, 16, 17, 19], "valid": [5, 8, 15, 17], "member": [5, 19], "variabl": [5, 8, 14, 17], "ignor": [5, 7], "mangl": 5, "cast_object_to_pure_python": 5, "cast": 5, "take": [5, 7, 12, 21], "tri": 5, "mainli": 5, "cannot": 5, "trivial": [5, 15], "For": [5, 17], "doe": [5, 19], "try": 5, "signatur": 5, "similar": [5, 23], "length": [5, 16, 17], "support": [5, 21, 23], "equival": 5, "its": [5, 7], "regular": 5, "like": [5, 12, 13, 15, 17, 21], "otherwis": [5, 17], "itself": [5, 15], "deem": 5, "wai": [5, 8, 21, 23], "cast_pulse_series_to_pure_python": 5, "represent": [5, 12], "icetrai": [5, 10], "properti": [5, 12, 13, 14, 15, 19], "optic": 5, "found": [5, 17], "dataconvert": [6, 7], "backend": [6, 7], "parquetdataconvert": 6, "outdir": [6, 7, 8, 16], "gcd_rescu": [6, 7], "nb_files_to_batch": [6, 7], "sequential_batch_pattern": [6, 7], "input_file_batch_pattern": [6, 7], "worker": [6, 7, 8, 16], "index_column": [6, 7, 8, 16, 17, 19], "event_no": [6, 7, 8, 16, 17, 19], "icetray_verbos": [6, 7], "0": [6, 7, 8, 12, 14, 16, 17, 19, 23], "int": [6, 7, 8, 12, 13, 14, 15, 16, 17, 19], "file_suffix": [6, 7], "save_data": [6, 7], "output_fil": [6, 7], "ordereddict": [6, 7], "merge_fil": [6, 7], "input_fil": [6, 7], "merg": [6, 7, 16, 17, 23], "output": [6, 7, 8, 13, 14, 16, 17, 19, 23], "result": [6, 7, 12, 16, 17, 19, 23], "accord": [6, 7, 12], "current": [6, 7, 8, 17, 21, 23], "rais": 6, "notimplementederror": 6, "If": [6, 7, 16, 17, 21, 23], "been": [6, 17, 21], "dataset": [6, 7, 8, 19], "parquetdataset": 6, "path": [6, 7, 8, 16, 19, 23], "pulsemap": [6, 7, 17, 19], "truth": [6, 7, 16, 17, 19], "node_truth": [6, 7, 17, 19], "truth_tabl": [6, 7, 16, 17, 19], "node_truth_t": [6, 7, 17, 19], "string_select": [6, 7, 17, 19], "select": [6, 7, 8, 17, 19, 21], "dtype": [6, 7, 10], "float32": [6, 7, 10], "loss_weight_t": [6, 7, 17, 19], "loss_weight_column": [6, 7, 17, 19], "loss_weight_default_valu": [6, 7, 19], "seed": [6, 7, 8, 17, 19], "pytorch": [6, 7, 17, 23], "float": [6, 7, 8, 14, 16, 17, 19], "_format_dictionary_result": 6, "ak": 6, "to_list": 6, "query_t": [6, 7], "tabl": [6, 7, 16, 17], "column": [6, 7, 16, 17], "sequential_index": [6, 7], "queri": [6, 7, 8], "some": [6, 7], "sqlitedataconvert": [7, 23], "db": [7, 17], "databas": [7, 8, 16, 17, 23], "_extract_table_nam": 7, "any_pulsemap_is_non_empti": 7, "data_dict": 7, "empti": 7, "retriev": 7, "splitinicepuls": 7, "least": [7, 21, 23], "one": [7, 12, 19, 21, 23], "true": [7, 8, 16, 17], "i3featureextractor": 7, "becaus": [7, 8], "i3genericextractor": 7, "instead": [7, 17], "alwai": 7, "_submit_to_databas": 7, "submit": 7, "specifi": [7, 8, 15, 16, 17, 23], "datafram": [7, 8, 16, 17], "_extract_everyth": 7, "everyth": 7, "temporari": [7, 16], "_merge_temporary_databas": 7, "construct_datafram": 7, "panda": [7, 8, 17], "is_pulse_map": 7, "table_nam": 7, "map": 7, "is_mc_tre": 7, "mc": 7, "tree": 7, "sqlitedataset": 7, "_establish_connect": 7, "sure": [7, 21, 23], "sqlite3": 7, "_close_connect": 7, "befor": [7, 14, 15, 17], "pass": [7, 12, 14, 15, 17, 21], "dataload": [7, 17, 19], "replica": 7, "creat": [7, 19, 21, 23], "own": [7, 21, 23], "avoid": [7, 17, 21], "databaseerror": 7, "disk": 7, "malform": 7, "error": [7, 17, 21], "due": 7, "inabl": 7, "accross": 7, "perturb": 7, "sqlitedatasetperturb": 7, "perturbation_dict": 7, "step": [7, 17], "where": [7, 17], "input": [7, 8, 13, 14, 15, 16], "randomli": [7, 8, 19], "given": [7, 12, 17], "per": [7, 12, 15, 17], "intend": [7, 23], "test": [7, 8, 15, 17, 19, 21], "stabil": 7, "under": 7, "small": [7, 17], "chang": [7, 16, 17, 21], "__init__": [7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "construct": [7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "node": [7, 12, 14, 15], "multipl": [7, 17, 19], "dom": [7, 12, 17], "store": [7, 16, 17], "ad": [7, 14, 16], "attribut": [7, 15], "deviat": 7, "uniqu": [7, 8, 19], "inform": [7, 16, 17], "subset": [7, 12, 14], "tensor": [7, 12, 14, 15, 17], "loss": [7, 15, 17], "weight": [7, 15, 16, 17, 19, 23], "also": [7, 8, 19], "assign": [7, 8, 12, 21], "note": [7, 16, 19], "case": [7, 12, 15, 23], "That": [7, 14, 15, 17], "__getitem__": 7, "get_desired_event_numb": 7, "desired_s": 7, "fraction_nois": 7, "fraction_muon": 7, "fraction_nu_": 7, "fraction_nu_mu": 7, "fraction_nu_tau": 7, "fraction": [7, 14], "nu_e": 7, "nu_mu": 7, "nu_tau": 7, "reed": 7, "get_equal_proportion_neutrino_indic": 7, "42": [7, 17, 23], "indic": [7, 8, 12, 17, 21], "equal": 7, "flavour": 7, "proport": 7, "resp": 7, "get_even_signal_background_indici": 7, "get_even_track_cascade_indici": 7, "cc": 7, "nc": 7, "mu": 7, "get_even_dbang_select": 7, "min_max_decay_length": 7, "dbang": 7, "database_exist": 7, "database_path": [7, 16, 17], "database_table_exist": 7, "run_sql_cod": 7, "execut": 7, "save_to_sql": 7, "df": 7, "must": [7, 17, 21], "alreadi": [7, 23], "attach_index": 7, "attach": 7, "create_t": 7, "default_typ": 7, "NOT": [7, 17], "null": 7, "integer_primary_kei": 7, "integ": [7, 14, 17], "primari": 7, "Such": 7, "row": [7, 12], "appropri": [7, 15], "particl": [7, 17], "other": [7, 17, 21], "expect": [7, 8, 16], "create_table_and_save_to_sql": 7, "doesn": 7, "parquettosqliteconvert": 8, "parquet_path": 8, "mc_truth_tabl": 8, "mc_truth": 8, "excluded_field": 8, "loggermixin": [8, 17, 19], "id": 8, "everi": [8, 23], "field": [8, 16, 17], "One": [8, 16], "choos": 8, "exclud": [8, 23], "certain": [8, 16], "argument": [8, 15, 17, 19], "exclude_field": 8, "database_nam": 8, "convers": [8, 23], "directori": [8, 16], "_save_config": 8, "csv": [8, 16, 19], "rng": 8, "relat": 8, "pairwise_shuffl": 8, "i3_list": 8, "gcd_list": 8, "shuffl": [8, 17], "correpond": 8, "handi": 8, "even": [8, 17], "files_list": 8, "gcd_shuffl": 8, "i3_shuffl": 8, "resolv": 8, "stringselectionresolv": 8, "use_cach": 8, "datasetconfig": [8, 19], "flexibl": 8, "defin": [8, 12, 19], "show": [8, 17], "involv": 8, "cover": 8, "yml": [8, 19], "50000": [8, 19], "5": [8, 23], "ab": [8, 17, 19], "pid": [8, 19], "12": [8, 19], "14": [8, 19], "16": [8, 19], "13": [8, 23], "10000": 8, "compat": 8, "syntax": [8, 13, 15, 17], "mai": [8, 13, 23], "fix": 8, "20": 8, "_parse_variable_nam": 8, "pars": [8, 16, 18], "entiti": 8, "funtion": 8, "_get_index_cache_path": 8, "cach": 8, "_get_values_cache_path": 8, "_get_random_events_from_select": 8, "num": [8, 12], "frac": 8, "part": [8, 10, 23], "did": 8, "graphnet_modul": 9, "graphnetmodulebas": 10, "context": 10, "i3trai": 10, "i3featureextractor_class": 10, "float16": 10, "float64": [10, 17], "keyword": 10, "write": [10, 23], "graphnetmoduleicecube86": 10, "86": [10, 13], "arg": [10, 15, 17, 19], "kwarg": [10, 12, 15, 17, 19], "dom_x": [10, 13], "dom_i": [10, 13], "dom_z": [10, 13], "dom_tim": [10, 13], "charg": [10, 13, 17], "rde": [10, 13], "pmt_area": [10, 13], "alia": [10, 23], "i3featureextractoricecube86": 10, "graphnetmoduleicecubedeepcor": 10, "deepcor": [10, 13], "i3featureextractoricecubedeepcor": 10, "graphnetmoduleicecubeupgrad": 10, "upgrad": [10, 13, 23], "pmt_number": [10, 13], "dom_numb": [10, 13], "pmt_dir_x": [10, 13], "pmt_dir_i": [10, 13], "pmt_dir_z": [10, 13], "dom_typ": [10, 13], "i3featureextractoricecubeupgrad": 10, "pool": [11, 14], "prometheu": 11, "convnet": 11, "dynedg": 11, "dynedge_jinst": 11, "dynedgeconv": [12, 14], "aggr": 12, "max": [12, 14, 17], "nb_neighbor": 12, "8": [12, 14, 17, 21, 23], "features_subset": [12, 14], "edgeconv": 12, "lightningmodul": [12, 17], "dynam": [12, 14], "edg": [12, 14], "convolut": [12, 14], "sequenc": 12, "slice": [12, 14], "mlp": [12, 14], "within": [12, 14], "aggreg": 12, "neighbour": [12, 14], "cluster": [12, 14], "after": [12, 14, 17], "oper": [12, 14], "x": [12, 13, 14, 15, 16, 17], "addit": [12, 17], "forward": [12, 13, 14, 15, 17], "edge_index": [12, 14], "sparsetensor": 12, "coarsen": 12, "min_pool": 12, "min": [12, 14], "max_pool": 12, "just": [12, 23], "negat": 12, "longtensor": [12, 14], "min_pool_x": 12, "size": [12, 14], "max_pool_x": 12, "sum_pool_and_distribut": 12, "cluster_index": 12, "sum": [12, 14], "distribut": [12, 14, 15, 17], "_group_ident": 12, "ident": [12, 15], "shape": [12, 17], "n": [12, 17], "f": 12, "group_bi": 12, "done": [12, 21], "pmt": 12, "f1": 12, "f2": 12, "6": [12, 16, 17, 21], "7": [12, 16], "groupbi": 12, "3": [12, 14, 15, 16, 17, 21, 23], "group_pulses_to_dom": 12, "group_pulses_to_pmt": 12, "sum_pool_x": 12, "vector": [12, 17], "mathbf": 12, "ldot": 12, "matrix": [12, 17], "mathbb": 12, "r": [12, 23], "n_1": 12, "n_b": 12, "maximum": [12, 15], "singl": [12, 14, 17, 19], "obtain": [12, 17], "wise": 12, "dens": 12, "fc": 12, "known": 12, "std_pool_x": 12, "std": 12, "sum_pool": 12, "repres": [12, 19], "posit": [12, 15], "averag": [12, 17], "A": [12, 16, 17, 23], "torch_geometr": 12, "version": [12, 15, 17, 21, 23], "std_pool": 12, "standardis": 13, "graph_build": 13, "scaler": 13, "ins": 13, "graphbuild": 13, "assum": [13, 15], "adjac": 13, "_forward": [13, 15, 17], "implent": [13, 15, 17], "nb_input": [13, 14, 15], "nb_output": [13, 14, 15], "overridden": 13, "icecube86": 13, "preprocess": 13, "icecubekaggl": 13, "kaggl": 13, "competit": 13, "y": [13, 16, 23], "z": [13, 23], "auxiliari": 13, "icecubedeepcor": 13, "icecubeupgrad": 13, "icecubeupgrade_v2": 13, "prototyp": 13, "sensor_pos_x": 13, "sensor_pos_i": 13, "sensor_pos_z": 13, "learnabl": 14, "author": [14, 17], "martin": 14, "minh": 14, "nb_intermedi": 14, "128": 14, "dropout_ratio": 14, "dimens": [14, 17], "drop": 14, "nb_neighbour": 14, "dynedge_layer_s": 14, "post_processing_layer_s": 14, "readout_layer_s": 14, "global_pooling_schem": 14, "add_global_variables_after_pool": 14, "k": [14, 17], "nearest": 14, "latent": [14, 15], "metric": [14, 17], "dimenion": 14, "entri": [14, 16, 19], "multi": 14, "perceptron": 14, "two": [14, 16, 17], "256": 14, "336": 14, "hidden": [14, 15], "follow": [14, 17, 21, 23], "skip": 14, "post": 14, "_and_": 14, "global": 14, "As": 14, "last": [14, 15, 17], "out": [14, 15, 17, 21, 23], "scheme": 14, "add": [14, 21, 23], "altern": [14, 17, 21], "_construct_lay": 14, "_global_pool": 14, "_calculate_global_vari": 14, "additional_attribut": [14, 17], "calcul": [14, 17], "exact": [14, 17], "2209": 14, "03042": 14, "rasmu": 14, "oerso": 14, "dynedgejinst": 14, "layer_size_scal": 14, "4": [14, 15, 16, 17], "scale": [14, 15, 17], "core": 14, "multiclassclassificationtask": 15, "identitytask": 15, "classifi": 15, "being": 15, "untransform": 15, "interpret": 15, "logit": [15, 17], "binaryclassificationtask": 15, "hidden_s": 15, "target_label": 15, "transform_prediction_and_target": 15, "transform_target": 15, "transform_infer": 15, "transform_support": 15, "loss_weight": 15, "binari": [15, 17], "lossfunct": [15, 17], "binaryclassificationtasklogit": 15, "azimuthreconstructionwithkappa": 15, "azimuth": [15, 17], "angl": [15, 17], "associ": [15, 17], "kappa": [15, 17], "var": 15, "azimuthreconstruct": 15, "directionreconstructionwithkappa": 15, "3d": [15, 17], "vmf": 15, "zenithreconstruct": 15, "zenith": [15, 17], "zenithreconstructionwithkappa": 15, "energyreconstruct": 15, "stabl": [15, 17, 23], "energyreconstructionwithpow": 15, "energyreconstructionwithuncertainti": 15, "uncertainti": 15, "vertexreconstruct": 15, "vertex": 15, "positionreconstruct": 15, "timereconstruct": 15, "inelasticityreconstruct": 15, "interact": 15, "inelast": 15, "hadron": 15, "feed": 15, "affin": 15, "quantiti": 15, "target": [15, 17, 19], "compute_loss": 15, "numer": [15, 17], "comput": [15, 17], "log10": [15, 17], "rather": 15, "conjunct": 15, "invers": 15, "recov": 15, "minimum": 15, "restrict": [15, 17], "invert": 15, "1e6": 15, "pred": 15, "wrt": 15, "activ": [15, 21, 23], "mode": 15, "train_ev": 15, "deactiv": 15, "_validate_and_set_transform": 15, "set": [15, 16, 21], "assert": 15, "updat": [15, 16, 17], "contour": 16, "config_updat": 16, "config_path": 16, "new_config_path": 16, "dummy_sect": 16, "temp": 16, "dummi": 16, "header": 16, "configupdat": 16, "programat": 16, "weightfitt": [16, 17], "statistical_fit": 16, "fit_weight": [16, 17], "config_outdir": 16, "weight_nam": [16, 17], "pisa_config_dict": 16, "add_to_databas": [16, 17], "flux": 16, "self": [16, 19], "_database_path": 16, "statist": 16, "effect": [16, 17, 21], "account": 16, "systemat": 16, "hypersurfac": 16, "assumpt": 16, "regard": 16, "contourfitt": 16, "pipeline_path": 16, "post_fix": 16, "_pred": 16, "model_nam": 16, "include_retro": 16, "fit_1d_contour": 16, "run_nam": 16, "config_dict": 16, "grid_siz": 16, "30": 16, "n_worker": 16, "theta23_minmax": 16, "36": 16, "54": 16, "dm31_minmax": 16, "1d": 16, "fit_2d_contour": 16, "2d": [16, 17], "_check_input": 16, "contour_typ": 16, "_fit_contour": 16, "_parallel_fit_2d_contour": 16, "parallel": 16, "determin": 16, "amount": 16, "job": 16, "later": [16, 23], "_parallel_fit_1d_contour": 16, "read_entri": 16, "content": 16, "plot_2d_contour": 16, "contour_data": 16, "xlim": 16, "ylim": 16, "0023799999999999997": 16, "0025499999999999997": 16, "chi2_critical_valu": 16, "605": 16, "width": 16, "176": 16, "height": 16, "388": 16, "path_to_pisa_fit_result": 16, "name_of_my_model_in_fit": 16, "legend": 16, "color": 16, "linestyl": 16, "style": [16, 21], "line": [16, 17], "upper": 16, "bound": 16, "axi": 16, "critic": 16, "chi2": 16, "90": 16, "cl": 16, "right": [16, 17], "inch": 16, "plot_1d_contour": 16, "706": 16, "352": 16, "dure": 17, "piecewiselinearlr": 17, "optim": 17, "mileston": 17, "factor": 17, "last_epoch": 17, "verbos": 17, "_lrschedul": 17, "interpol": 17, "linearli": 17, "between": 17, "denot": 17, "multipli": 17, "closest": 17, "vice": 17, "versa": 17, "wrap": [17, 19], "epoch": 17, "print": 17, "messag": 17, "stdout": 17, "get_lr": 17, "progressbar": 17, "refresh_r": 17, "process_posit": 17, "tqdmprogressbar": 17, "custom": 17, "progress": 17, "bar": 17, "customis": 17, "lightn": 17, "init_validation_tqdm": 17, "overrid": 17, "init_predict_tqdm": 17, "init_test_tqdm": 17, "init_train_tqdm": 17, "get_metr": 17, "trainer": 17, "on_train_epoch_start": 17, "previou": 17, "see": [17, 21, 23], "behaviour": 17, "overwrit": 17, "on_train_epoch_end": 17, "don": [17, 23], "duplciat": 17, "runtim": [17, 23], "abc": [17, 19], "produc": 17, "__call__": 17, "azimuth_kei": 17, "zenith_kei": 17, "handl": 17, "return_el": 17, "elementwis": 17, "term": 17, "scalar": 17, "mseloss": 17, "squar": 17, "rmseloss": 17, "root": [17, 23], "logcoshloss": 17, "cosh": 17, "act": 17, "classmethod": [17, 19], "_log_cosh": 17, "inf": 17, "moder": 17, "http": [17, 21], "github": [17, 23], "com": [17, 23], "kera": 17, "team": [17, 21], "blob": 17, "v2": 17, "py": [17, 23], "l1580": 17, "l1617": 17, "crossentropyloss": 17, "cross": 17, "entropi": 17, "num_class": 17, "softmax": 17, "ed": 17, "probabl": 17, "binarycrossentropyloss": 17, "logcmk": 17, "mit": 17, "licens": 17, "copyright": 17, "2019": 17, "ryabinin": 17, "permiss": 17, "herebi": 17, "grant": 17, "person": 17, "copi": 17, "deal": 17, "limit": 17, "modifi": 17, "publish": 17, "sublicens": 17, "sell": 17, "permit": 17, "whom": 17, "furnish": 17, "so": [17, 23], "subject": 17, "condit": 17, "notic": 17, "shall": 17, "substanti": 17, "portion": 17, "THE": 17, "AS": 17, "warranti": 17, "OF": 17, "kind": 17, "express": 17, "OR": 17, "impli": 17, "BUT": 17, "TO": 17, "merchant": 17, "FOR": 17, "particular": [17, 21], "AND": 17, "noninfring": 17, "IN": 17, "NO": 17, "holder": 17, "BE": 17, "liabl": 17, "claim": 17, "damag": 17, "liabil": 17, "action": 17, "contract": 17, "tort": 17, "aris": 17, "WITH": 17, "_____________________": 17, "mryab": 17, "vmf_loss": 17, "master": 17, "bessel": 17, "exponenti": 17, "ditto": 17, "iv": 17, "1812": 17, "04616": 17, "spite": 17, "suggest": 17, "sec": 17, "paper": 17, "comparison": 17, "m": 17, "correct": 17, "static": [17, 21], "ctx": 17, "backward": 17, "grad_output": 17, "vonmisesfisherloss": 17, "von": 17, "mise": 17, "fisher": 17, "log_cmk_exact": 17, "c_": 17, "exactli": 17, "log_cmk_approx": 17, "approx": 17, "arxiv": 17, "org": [17, 23], "minu": 17, "sign": 17, "log_cmk": 17, "kappa_switch": 17, "100": [17, 23], "sinc": 17, "diverg": 17, "700": 17, "precis": 17, "unaccur": 17, "automat": [17, 21], "switch": 17, "_evalu": 17, "dimenson": 17, "utilis": 17, "sphere": 17, "dimension": 17, "space": 17, "batch_siz": 17, "vonmisesfisher2dloss": 17, "plane": 17, "0th": 17, "1st": 17, "estim": 17, "euclideandistanceloss": 17, "three": 17, "euclidean": [17, 21], "distanc": 17, "vonmisesfisher3dloss": 17, "collate_fn": 17, "remov": 17, "less": 17, "hit": 17, "occur": 17, "product": 17, "make_dataload": 17, "num_work": 17, "persistent_work": 17, "make_train_validation_dataload": 17, "database_indic": 17, "test_siz": 17, "33": 17, "get_predict": 17, "prediction_column": 17, "node_level": 17, "save_result": 17, "tag": [17, 21, 23], "archiv": 17, "uniformweightfitt": 17, "_get_truth": 17, "bin": 17, "privat": 17, "_fit_weight": 17, "sql": 17, "ndarrai": 17, "desir": 17, "match": 17, "np": 17, "happen": 17, "uniform": 17, "bjoernlow": 17, "x_low": 17, "wherea": 17, "curv": 17, "alpha": 17, "05": 17, "cut": 17, "off": 17, "control": 17, "how": 17, "approach": 17, "zero": 17, "larger": 17, "base_config": 18, "dataset_config": 18, "model_config": 18, "training_config": 18, "baseconfig": 19, "basemodel": 19, "dump": 19, "yaml": 19, "as_dict": 19, "overwritten": 19, "get_all_argument_valu": 19, "re": [19, 23], "save_config": 19, "from_config": 19, "dataconfig": 19, "transpar": [19, 21], "reproduc": 19, "In": [19, 23], "session": 19, "anoth": 19, "you": [19, 21, 23], "concatdataset": 19, "still": 19, "refer": 19, "train_select": 19, "test_select": 19, "save_dataset_config": 19, "init_fn": 19, "modelconfig": 19, "class_nam": 19, "trainabl": 19, "hyperparamet": 19, "instanti": 19, "initialis": 19, "thu": 19, "_is_model_config_entri": 19, "_parse_if_model_config_entri": 19, "_construct_model": 19, "trust": 19, "load_modul": 19, "basi": 19, "_serialis": 19, "unambigu": 19, "save_model_config": 19, "traverse_and_appli": 19, "fn_kwarg": 19, "structur": 19, "list_all_submodul": 19, "moduletyp": 19, "get_all_grapnet_class": 19, "grapnet": 19, "is_graphnet_modul": 19, "is_graphnet_class": 19, "get_graphnet_class": 19, "lookup": 19, "trainingconfig": 19, "early_stopping_pati": 19, "api": 20, "To": [21, 23], "smooth": 21, "guidelin": 21, "guid": 21, "encourag": 21, "contributor": 21, "discuss": 21, "bug": 21, "anyth": 21, "place": 21, "start": [21, 23], "describ": 21, "would": 21, "yourself": 21, "ownership": 21, "agreement": 21, "prioriti": 21, "help": 21, "situat": 21, "lot": 21, "effort": 21, "go": 21, "turn": 21, "outsid": 21, "scope": 21, "project": 21, "solut": 21, "better": 21, "fork": 21, "repo": 21, "dedic": 21, "branch": [21, 23], "your": [21, 23], "repositori": 21, "graphbuil": 21, "builder": 21, "accept": 21, "autom": 21, "review": 21, "pep8": 21, "docstr": 21, "googl": 21, "hint": 21, "clean": [21, 23], "adher": 21, "pep": 21, "pylint": 21, "flake8": 21, "black": 21, "well": 21, "consist": 21, "recommend": [21, 23], "mypi": 21, "pydocstyl": 21, "docformatt": 21, "commit": 21, "hook": 21, "instal": 21, "come": 21, "pip": [21, 23], "Then": 21, "everytim": 21, "pep257": 21, "concept": 21, "ljvmiranda921": 21, "io": 21, "notebook": 21, "2018": 21, "06": 21, "21": 21, "precommit": 21, "environ": 23, "virtual": 23, "anaconda": 23, "prove": 23, "instruct": 23, "setup": 23, "want": 23, "achiev": 23, "command": 23, "bash": 23, "shell": 23, "eval": 23, "cvmf": 23, "opensciencegrid": 23, "py3": 23, "v4": 23, "sh": 23, "rhel_7_x86_64": 23, "metaproject": 23, "combo": 23, "env": 23, "script": 23, "With": 23, "now": 23, "light": 23, "extra": 23, "geometr": 23, "won": 23, "torch_cpu": 23, "txt": 23, "cpu": 23, "torch_gpu": 23, "gpu": 23, "prefer": 23, "unix": 23, "system": 23, "git": 23, "clone": 23, "usernam": 23, "cd": 23, "conda": 23, "gcc_linux": 23, "64": 23, "gxx_linux": 23, "libgcc": 23, "cudatoolkit": 23, "11": 23, "forg": 23, "torch_maco": 23, "On": 23, "maco": 23, "box": 23, "compil": 23, "gcc": 23, "date": 23, "possibli": 23, "cuda": 23, "toolkit": 23, "recent": 23, "omit": 23, "newer": 23, "export": 23, "ld_library_path": 23, "home": 23, "anaconda3": 23, "lib": 23, "miniconda3": 23, "bashrc": 23, "librari": 23, "access": 23, "look": 23, "consid": 23, "rm": 23, "asogaard": 23, "latest": 23, "dc423315742c": 23, "01_icetrai": 23, "01_convert_i3_fil": 23, "info": 23, "2023": 23, "01": 23, "24": 23, "41": 23, "27": 23, "get_logg": 23, "graphnet_20230124": 23, "134127": 23, "46": 23, "convert_i3_fil": 23, "ic86": 23, "thread": 23, "multiprocess": 23, "00": 23, "39": 23, "79": 23, "26": 23, "413": 23, "88it": 23, "specialis": 23, "ones": 23, "push": 23, "vx": 23}, "objects": {"": [[2, 0, 0, "-", "graphnet"]], "graphnet": [[3, 0, 0, "-", "data"], [9, 0, 0, "-", "deployment"], [11, 0, 0, "-", "models"], [16, 0, 0, "-", "pisa"], [17, 0, 0, "-", "training"], [18, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "extractors"], [6, 0, 0, "-", "parquet"], [7, 0, 0, "-", "sqlite"], [8, 0, 0, "-", "utilities"]], "graphnet.data.extractors": [[5, 0, 0, "-", "utilities"]], "graphnet.data.extractors.utilities": [[5, 0, 0, "-", "collections"], [5, 0, 0, "-", "frames"], [5, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[5, 1, 1, "", "flatten_nested_dictionary"], [5, 1, 1, "", "serialise"], [5, 1, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[5, 1, 1, "", "frame_is_montecarlo"], [5, 1, 1, "", "frame_is_noise"], [5, 1, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[5, 1, 1, "", "break_cyclic_recursion"], [5, 1, 1, "", "cast_object_to_pure_python"], [5, 1, 1, "", "cast_pulse_series_to_pure_python"], [5, 1, 1, "", "get_member_variables"], [5, 1, 1, "", "is_boost_class"], [5, 1, 1, "", "is_boost_enum"], [5, 1, 1, "", "is_icecube_class"], [5, 1, 1, "", "is_method"], [5, 1, 1, "", "is_type"]], "graphnet.data.parquet": [[6, 0, 0, "-", "parquet_dataconverter"], [6, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[6, 2, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[6, 3, 1, "", "file_suffix"], [6, 4, 1, "", "merge_files"], [6, 4, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[6, 2, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[6, 4, 1, "", "_format_dictionary_result"], [6, 4, 1, "", "query_table"]], "graphnet.data.sqlite": [[7, 0, 0, "-", "sqlite_dataconverter"], [7, 0, 0, "-", "sqlite_dataset"], [7, 0, 0, "-", "sqlite_dataset_perturbed"], [7, 0, 0, "-", "sqlite_selection"], [7, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[7, 2, 1, "", "SQLiteDataConverter"], [7, 1, 1, "", "construct_dataframe"], [7, 1, 1, "", "is_mc_tree"], [7, 1, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[7, 4, 1, "", "_extract_everything"], [7, 4, 1, "", "_extract_table_names"], [7, 4, 1, "", "_merge_temporary_databases"], [7, 4, 1, "", "_submit_to_database"], [7, 4, 1, "", "any_pulsemap_is_non_empty"], [7, 3, 1, "", "file_suffix"], [7, 4, 1, "", "merge_files"], [7, 4, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[7, 2, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[7, 4, 1, "", "_close_connection"], [7, 4, 1, "", "_establish_connection"], [7, 4, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[7, 2, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed": [[7, 4, 1, "", "__getitem__"], [7, 4, 1, "", "__init__"]], "graphnet.data.sqlite.sqlite_selection": [[7, 1, 1, "", "get_desired_event_numbers"], [7, 1, 1, "", "get_equal_proportion_neutrino_indices"], [7, 1, 1, "", "get_even_dbang_selection"], [7, 1, 1, "", "get_even_signal_background_indicies"], [7, 1, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[7, 1, 1, "", "attach_index"], [7, 1, 1, "", "create_table"], [7, 1, 1, "", "create_table_and_save_to_sql"], [7, 1, 1, "", "database_exists"], [7, 1, 1, "", "database_table_exists"], [7, 1, 1, "", "run_sql_code"], [7, 1, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[8, 0, 0, "-", "parquet_to_sqlite"], [8, 0, 0, "-", "random"], [8, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[8, 2, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[8, 4, 1, "", "__init__"], [8, 4, 1, "", "_save_config"], [8, 4, 1, "", "run"]], "graphnet.data.utilities.random": [[8, 1, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[8, 2, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[8, 4, 1, "", "__init__"], [8, 4, 1, "", "_get_index_cache_path"], [8, 4, 1, "", "_get_random_events_from_selection"], [8, 4, 1, "", "_get_values_cache_path"], [8, 4, 1, "", "_parse_variable_names"], [8, 4, 1, "", "resolve"]], "graphnet.deployment": [[10, 0, 0, "-", "i3modules"]], "graphnet.deployment.i3modules": [[10, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[10, 2, 1, "", "GraphNeTModuleBase"], [10, 2, 1, "", "GraphNeTModuleIceCube86"], [10, 2, 1, "", "GraphNeTModuleIceCubeDeepCore"], [10, 2, 1, "", "GraphNeTModuleIceCubeUpgrade"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase": [[10, 4, 1, "", "Configure"], [10, 3, 1, "", "DTYPES"], [10, 3, 1, "", "FEATURES"], [10, 3, 1, "", "I3FEATUREEXTRACTOR_CLASS"], [10, 4, 1, "", "Physics"], [10, 4, 1, "", "__init__"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86": [[10, 3, 1, "", "FEATURES"], [10, 3, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore": [[10, 3, 1, "", "FEATURES"], [10, 3, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade": [[10, 3, 1, "", "FEATURES"], [10, 3, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.models": [[12, 0, 0, "-", "components"], [13, 0, 0, "-", "detector"], [14, 0, 0, "-", "gnn"], [15, 0, 0, "-", "task"]], "graphnet.models.components": [[12, 0, 0, "-", "layers"], [12, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[12, 2, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[12, 4, 1, "", "__init__"], [12, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[12, 1, 1, "", "_group_identical"], [12, 1, 1, "", "group_by"], [12, 1, 1, "", "group_pulses_to_dom"], [12, 1, 1, "", "group_pulses_to_pmt"], [12, 1, 1, "", "min_pool"], [12, 1, 1, "", "min_pool_x"], [12, 1, 1, "", "std_pool"], [12, 1, 1, "", "std_pool_x"], [12, 1, 1, "", "sum_pool"], [12, 1, 1, "", "sum_pool_and_distribute"], [12, 1, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[13, 0, 0, "-", "detector"], [13, 0, 0, "-", "icecube"], [13, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[13, 2, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[13, 4, 1, "", "__init__"], [13, 4, 1, "", "_forward"], [13, 5, 1, "", "features"], [13, 4, 1, "", "forward"], [13, 5, 1, "", "nb_inputs"], [13, 5, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[13, 2, 1, "", "IceCube86"], [13, 2, 1, "", "IceCubeDeepCore"], [13, 2, 1, "", "IceCubeKaggle"], [13, 2, 1, "", "IceCubeUpgrade"], [13, 2, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[13, 4, 1, "", "_forward"], [13, 3, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[13, 4, 1, "", "_forward"], [13, 3, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[13, 4, 1, "", "_forward"], [13, 3, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[13, 4, 1, "", "_forward"], [13, 3, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[13, 4, 1, "", "_forward"], [13, 3, 1, "", "features"], [13, 5, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[13, 2, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[13, 4, 1, "", "_forward"], [13, 3, 1, "", "features"]], "graphnet.models.gnn": [[14, 0, 0, "-", "convnet"], [14, 0, 0, "-", "dynedge"], [14, 0, 0, "-", "dynedge_jinst"], [14, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[14, 2, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[14, 4, 1, "", "__init__"], [14, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[14, 2, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[14, 4, 1, "", "__init__"], [14, 4, 1, "", "_calculate_global_variables"], [14, 4, 1, "", "_construct_layers"], [14, 4, 1, "", "_global_pooling"], [14, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[14, 2, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[14, 4, 1, "", "__init__"], [14, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[14, 2, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[14, 4, 1, "", "__init__"], [14, 4, 1, "", "forward"], [14, 5, 1, "", "nb_inputs"], [14, 5, 1, "", "nb_outputs"]], "graphnet.models.task": [[15, 0, 0, "-", "classification"], [15, 0, 0, "-", "reconstruction"], [15, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[15, 2, 1, "", "BinaryClassificationTask"], [15, 2, 1, "", "BinaryClassificationTaskLogits"], [15, 2, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[15, 2, 1, "", "AzimuthReconstruction"], [15, 2, 1, "", "AzimuthReconstructionWithKappa"], [15, 2, 1, "", "DirectionReconstructionWithKappa"], [15, 2, 1, "", "EnergyReconstruction"], [15, 2, 1, "", "EnergyReconstructionWithPower"], [15, 2, 1, "", "EnergyReconstructionWithUncertainty"], [15, 2, 1, "", "InelasticityReconstruction"], [15, 2, 1, "", "PositionReconstruction"], [15, 2, 1, "", "TimeReconstruction"], [15, 2, 1, "", "VertexReconstruction"], [15, 2, 1, "", "ZenithReconstruction"], [15, 2, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[15, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[15, 2, 1, "", "IdentityTask"], [15, 2, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[15, 4, 1, "", "__init__"], [15, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[15, 4, 1, "", "__init__"], [15, 4, 1, "", "_forward"], [15, 4, 1, "", "_validate_and_set_transforms"], [15, 4, 1, "", "compute_loss"], [15, 4, 1, "", "forward"], [15, 4, 1, "", "inference"], [15, 5, 1, "", "nb_inputs"], [15, 4, 1, "", "train_eval"]], "graphnet.pisa": [[16, 0, 0, "-", "fitting"], [16, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[16, 2, 1, "", "ContourFitter"], [16, 2, 1, "", "WeightFitter"], [16, 1, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[16, 4, 1, "", "__init__"], [16, 4, 1, "", "_check_inputs"], [16, 4, 1, "", "_fit_contours"], [16, 4, 1, "", "_parallel_fit_1d_contour"], [16, 4, 1, "", "_parallel_fit_2d_contour"], [16, 4, 1, "", "fit_1d_contour"], [16, 4, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[16, 4, 1, "", "__init__"], [16, 4, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[16, 1, 1, "", "plot_1D_contour"], [16, 1, 1, "", "plot_2D_contour"], [16, 1, 1, "", "read_entry"]], "graphnet.training": [[17, 0, 0, "-", "callbacks"], [17, 0, 0, "-", "labels"], [17, 0, 0, "-", "loss_functions"], [17, 0, 0, "-", "utils"], [17, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[17, 2, 1, "", "PiecewiseLinearLR"], [17, 2, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[17, 4, 1, "", "__init__"], [17, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[17, 4, 1, "", "get_metrics"], [17, 4, 1, "", "init_predict_tqdm"], [17, 4, 1, "", "init_test_tqdm"], [17, 4, 1, "", "init_train_tqdm"], [17, 4, 1, "", "init_validation_tqdm"], [17, 4, 1, "", "on_train_epoch_end"], [17, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[17, 2, 1, "", "Direction"], [17, 2, 1, "", "Label"]], "graphnet.training.labels.Direction": [[17, 4, 1, "", "__call__"], [17, 4, 1, "", "__init__"]], "graphnet.training.labels.Label": [[17, 4, 1, "", "__call__"], [17, 4, 1, "", "__init__"]], "graphnet.training.loss_functions": [[17, 2, 1, "", "BinaryCrossEntropyLoss"], [17, 2, 1, "", "CrossEntropyLoss"], [17, 2, 1, "", "EuclideanDistanceLoss"], [17, 2, 1, "", "LogCMK"], [17, 2, 1, "", "LogCoshLoss"], [17, 2, 1, "", "LossFunction"], [17, 2, 1, "", "MSELoss"], [17, 2, 1, "", "RMSELoss"], [17, 2, 1, "", "VonMisesFisher2DLoss"], [17, 2, 1, "", "VonMisesFisher3DLoss"], [17, 2, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.CrossEntropyLoss": [[17, 4, 1, "", "__init__"], [17, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.EuclideanDistanceLoss": [[17, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.LogCMK": [[17, 4, 1, "", "backward"], [17, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LogCoshLoss": [[17, 4, 1, "", "_forward"], [17, 4, 1, "", "_log_cosh"]], "graphnet.training.loss_functions.LossFunction": [[17, 4, 1, "", "__init__"], [17, 4, 1, "", "_forward"], [17, 4, 1, "", "forward"]], "graphnet.training.loss_functions.MSELoss": [[17, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.RMSELoss": [[17, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher2DLoss": [[17, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher3DLoss": [[17, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[17, 4, 1, "", "_evaluate"], [17, 4, 1, "", "log_cmk"], [17, 4, 1, "", "log_cmk_approx"], [17, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[17, 1, 1, "", "collate_fn"], [17, 1, 1, "", "get_predictions"], [17, 1, 1, "", "make_dataloader"], [17, 1, 1, "", "make_train_validation_dataloader"], [17, 1, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[17, 2, 1, "", "BjoernLow"], [17, 2, 1, "", "Uniform"], [17, 2, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.BjoernLow": [[17, 4, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.Uniform": [[17, 4, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.WeightFitter": [[17, 4, 1, "", "__init__"], [17, 4, 1, "", "_get_truth"], [17, 4, 1, "", "fit"]], "graphnet.utilities": [[19, 0, 0, "-", "config"]], "graphnet.utilities.config": [[19, 0, 0, "-", "base_config"], [19, 0, 0, "-", "configurable"], [19, 0, 0, "-", "dataset_config"], [19, 0, 0, "-", "model_config"], [19, 0, 0, "-", "parsing"], [19, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[19, 2, 1, "", "BaseConfig"], [19, 1, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[19, 4, 1, "", "as_dict"], [19, 4, 1, "", "dump"], [19, 4, 1, "", "load"]], "graphnet.utilities.config.configurable": [[19, 2, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[19, 4, 1, "", "__init__"], [19, 5, 1, "", "config"], [19, 4, 1, "", "from_config"], [19, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[19, 2, 1, "", "DatasetConfig"], [19, 1, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[19, 4, 1, "", "__init__"], [19, 3, 1, "", "features"], [19, 3, 1, "", "index_column"], [19, 3, 1, "", "loss_weight_column"], [19, 3, 1, "", "loss_weight_default_value"], [19, 3, 1, "", "loss_weight_table"], [19, 3, 1, "", "node_truth"], [19, 3, 1, "", "node_truth_table"], [19, 3, 1, "", "path"], [19, 3, 1, "", "pulsemaps"], [19, 3, 1, "", "seed"], [19, 3, 1, "", "selection"], [19, 3, 1, "", "string_selection"], [19, 3, 1, "", "truth"], [19, 3, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[19, 2, 1, "", "ModelConfig"], [19, 1, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[19, 4, 1, "", "__init__"], [19, 4, 1, "", "_construct_model"], [19, 4, 1, "", "_is_model_config_entry"], [19, 4, 1, "", "_parse_if_model_config_entry"], [19, 4, 1, "", "_serialise"], [19, 3, 1, "", "arguments"], [19, 4, 1, "", "as_dict"], [19, 3, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[19, 1, 1, "", "get_all_grapnet_classes"], [19, 1, 1, "", "get_graphnet_classes"], [19, 1, 1, "", "is_graphnet_class"], [19, 1, 1, "", "is_graphnet_module"], [19, 1, 1, "", "list_all_submodules"], [19, 1, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[19, 2, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[19, 3, 1, "", "dataloader"], [19, 3, 1, "", "early_stopping_patience"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "target"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"about": [0, 22], "impact": [0, 22], "usag": [0, 22], "api": [1, 2], "graphnet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [3, 4, 5, 6, 7, 8], "extractor": [4, 5], "util": [5, 8, 17, 18, 19], "collect": 5, "frame": 5, "type": 5, "parquet": 6, "parquet_dataconvert": 6, "parquet_dataset": 6, "sqlite": 7, "sqlite_dataconvert": 7, "sqlite_dataset": 7, "sqlite_dataset_perturb": 7, "sqlite_select": 7, "sqlite_util": 7, "parquet_to_sqlit": 8, "random": 8, "string_selection_resolv": 8, "deploy": [9, 10], "i3modul": 10, "graphnet_modul": 10, "model": [11, 12, 13, 14, 15], "compon": 12, "layer": 12, "pool": 12, "detector": 13, "icecub": 13, "prometheu": 13, "gnn": 14, "convnet": 14, "dynedg": 14, "dynedge_jinst": 14, "task": 15, "classif": 15, "reconstruct": 15, "pisa": 16, "fit": 16, "plot": 16, "train": 17, "callback": 17, "label": 17, "loss_funct": 17, "weight_fit": 17, "config": 19, "base_config": 19, "configur": 19, "dataset_config": 19, "model_config": 19, "pars": 19, "training_config": 19, "src": 20, "contribut": 21, "github": 21, "issu": 21, "pull": 21, "request": 21, "convent": 21, "code": 21, "qualiti": 21, "instal": 23, "icetrai": 23, "stand": 23, "alon": 23, "run": 23, "docker": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [22, "about"]], "Impact": [[0, "impact"], [22, "impact"]], "Usage": [[0, "usage"], [22, "usage"]], "API": [[1, "api"], [1, "id1"], [2, "module-graphnet"]], "graphnet.data": [[3, "module-graphnet.data"]], "graphnet.data.extractors": [[4, "module-graphnet.data.extractors"]], "graphnet.data.extractors.utilities": [[5, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[5, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[5, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[5, "module-graphnet.data.extractors.utilities.types"]], "graphnet.data.parquet": [[6, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[6, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[6, "module-graphnet.data.parquet.parquet_dataset"]], "graphnet.data.sqlite": [[7, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[7, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[7, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[7, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[7, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[7, "module-graphnet.data.sqlite.sqlite_utilities"]], "graphnet.data.utilities": [[8, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[8, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[8, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver": [[8, "module-graphnet.data.utilities.string_selection_resolver"]], "graphnet.deployment": [[9, "module-graphnet.deployment"]], "graphnet.deployment.i3modules": [[10, "module-graphnet.deployment.i3modules"]], "graphnet.deployment.i3modules.graphnet_module": [[10, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[11, "module-graphnet.models"]], "graphnet.models.components": [[12, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[12, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[12, "module-graphnet.models.components.pool"]], "graphnet.models.detector": [[13, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[13, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[13, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus": [[13, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn": [[14, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[14, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[14, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[14, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[14, "module-graphnet.models.gnn.gnn"]], "graphnet.models.task": [[15, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[15, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[15, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[15, "module-graphnet.models.task.task"]], "graphnet.pisa": [[16, "module-graphnet.pisa"]], "graphnet.pisa.fitting": [[16, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[16, "module-graphnet.pisa.plotting"]], "graphnet.training": [[17, "module-graphnet.training"]], "graphnet.training.callbacks": [[17, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[17, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[17, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[17, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[17, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[18, "module-graphnet.utilities"]], "graphnet.utilities.config": [[19, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[19, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[19, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[19, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[19, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[19, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[19, "module-graphnet.utilities.config.training_config"]], "src": [[20, "src"]], "Contribute": [[21, "contribute"]], "GitHub issues": [[21, "github-issues"]], "Pull requests": [[21, "pull-requests"]], "Conventions": [[21, "conventions"]], "Code quality": [[21, "code-quality"]], "Install": [[23, "install"]], "Installing with IceTray": [[23, "installing-with-icetray"]], "Installing stand-alone": [[23, "installing-stand-alone"]], "Running in Docker": [[23, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"], [2, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet"], [3, "module-graphnet.data"], [4, "module-graphnet.data.extractors"], [5, "module-graphnet.data.extractors.utilities"], [5, "module-graphnet.data.extractors.utilities.collections"], [5, "module-graphnet.data.extractors.utilities.frames"], [5, "module-graphnet.data.extractors.utilities.types"], [6, "module-graphnet.data.parquet"], [6, "module-graphnet.data.parquet.parquet_dataconverter"], [6, "module-graphnet.data.parquet.parquet_dataset"], [7, "module-graphnet.data.sqlite"], [7, "module-graphnet.data.sqlite.sqlite_dataconverter"], [7, "module-graphnet.data.sqlite.sqlite_dataset"], [7, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [7, "module-graphnet.data.sqlite.sqlite_selection"], [7, "module-graphnet.data.sqlite.sqlite_utilities"], [8, "module-graphnet.data.utilities"], [8, "module-graphnet.data.utilities.parquet_to_sqlite"], [8, "module-graphnet.data.utilities.random"], [8, "module-graphnet.data.utilities.string_selection_resolver"], [9, "module-graphnet.deployment"], [10, "module-graphnet.deployment.i3modules"], [10, "module-graphnet.deployment.i3modules.graphnet_module"], [11, "module-graphnet.models"], [12, "module-graphnet.models.components"], [12, "module-graphnet.models.components.layers"], [12, "module-graphnet.models.components.pool"], [13, "module-graphnet.models.detector"], [13, "module-graphnet.models.detector.detector"], [13, "module-graphnet.models.detector.icecube"], [13, "module-graphnet.models.detector.prometheus"], [14, "module-graphnet.models.gnn"], [14, "module-graphnet.models.gnn.convnet"], [14, "module-graphnet.models.gnn.dynedge"], [14, "module-graphnet.models.gnn.dynedge_jinst"], [14, "module-graphnet.models.gnn.gnn"], [15, "module-graphnet.models.task"], [15, "module-graphnet.models.task.classification"], [15, "module-graphnet.models.task.reconstruction"], [15, "module-graphnet.models.task.task"], [16, "module-graphnet.pisa"], [16, "module-graphnet.pisa.fitting"], [16, "module-graphnet.pisa.plotting"], [17, "module-graphnet.training"], [17, "module-graphnet.training.callbacks"], [17, "module-graphnet.training.labels"], [17, "module-graphnet.training.loss_functions"], [17, "module-graphnet.training.utils"], [17, "module-graphnet.training.weight_fitting"], [18, "module-graphnet.utilities"], [19, "module-graphnet.utilities.config"], [19, "module-graphnet.utilities.config.base_config"], [19, "module-graphnet.utilities.config.configurable"], [19, "module-graphnet.utilities.config.dataset_config"], [19, "module-graphnet.utilities.config.model_config"], [19, "module-graphnet.utilities.config.parsing"], [19, "module-graphnet.utilities.config.training_config"]], "graphnet.data": [[3, "module-graphnet.data"]], "graphnet.data.extractors": [[4, "module-graphnet.data.extractors"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[5, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[5, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[5, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.get_member_variables"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[5, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities": [[5, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[5, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[5, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[5, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_type"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[5, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[5, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[6, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[6, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "_format_dictionary_result() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[6, "graphnet.data.parquet.parquet_dataset.ParquetDataset._format_dictionary_result"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[6, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet": [[6, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[6, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[6, "module-graphnet.data.parquet.parquet_dataset"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[6, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[6, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[6, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[7, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[7, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "__getitem__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[7, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__getitem__"]], "__init__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[7, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__init__"]], "_close_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[7, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._close_connection"]], "_establish_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[7, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._establish_connection"]], "_extract_everything() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_everything"]], "_extract_table_names() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_table_names"]], "_merge_temporary_databases() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._merge_temporary_databases"]], "_submit_to_database() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._submit_to_database"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite": [[7, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[7, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[7, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[7, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[7, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[7, "module-graphnet.data.sqlite.sqlite_utilities"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[7, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[8, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "__init__() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[8, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.__init__"]], "__init__() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.__init__"]], "_get_index_cache_path() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_index_cache_path"]], "_get_random_events_from_selection() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_random_events_from_selection"]], "_get_values_cache_path() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_values_cache_path"]], "_parse_variable_names() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._parse_variable_names"]], "_save_config() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[8, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter._save_config"]], "graphnet.data.utilities": [[8, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[8, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[8, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver": [[8, "module-graphnet.data.utilities.string_selection_resolver"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[8, "graphnet.data.utilities.random.pairwise_shuffle"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[8, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.deployment": [[9, "module-graphnet.deployment"]], "configure() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.Configure"]], "dtypes (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.DTYPES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecube86 attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubedeepcore attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubeupgrade attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade.FEATURES"]], "graphnetmodulebase (class in graphnet.deployment.i3modules.graphnet_module)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase"]], "graphnetmoduleicecube86 (class in graphnet.deployment.i3modules.graphnet_module)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86"]], "graphnetmoduleicecubedeepcore (class in graphnet.deployment.i3modules.graphnet_module)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore"]], "graphnetmoduleicecubeupgrade (class in graphnet.deployment.i3modules.graphnet_module)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecube86 attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubedeepcore attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubeupgrade attribute)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade.I3FEATUREEXTRACTOR_CLASS"]], "physics() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.Physics"]], "__init__() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[10, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.__init__"]], "graphnet.deployment.i3modules": [[10, "module-graphnet.deployment.i3modules"]], "graphnet.deployment.i3modules.graphnet_module": [[10, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[11, "module-graphnet.models"]], "dynedgeconv (class in graphnet.models.components.layers)": [[12, "graphnet.models.components.layers.DynEdgeConv"]], "__init__() (graphnet.models.components.layers.dynedgeconv method)": [[12, "graphnet.models.components.layers.DynEdgeConv.__init__"]], "_group_identical() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool._group_identical"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[12, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components": [[12, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[12, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[12, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.sum_pool_x"]], "detector (class in graphnet.models.detector.detector)": [[13, "graphnet.models.detector.detector.Detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "prometheus (class in graphnet.models.detector.prometheus)": [[13, "graphnet.models.detector.prometheus.Prometheus"]], "__init__() (graphnet.models.detector.detector.detector method)": [[13, "graphnet.models.detector.detector.Detector.__init__"]], "_forward() (graphnet.models.detector.detector.detector method)": [[13, "graphnet.models.detector.detector.Detector._forward"]], "_forward() (graphnet.models.detector.icecube.icecube86 method)": [[13, "graphnet.models.detector.icecube.IceCube86._forward"]], "_forward() (graphnet.models.detector.icecube.icecubedeepcore method)": [[13, "graphnet.models.detector.icecube.IceCubeDeepCore._forward"]], "_forward() (graphnet.models.detector.icecube.icecubekaggle method)": [[13, "graphnet.models.detector.icecube.IceCubeKaggle._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade method)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade_v2 method)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade_V2._forward"]], "_forward() (graphnet.models.detector.prometheus.prometheus method)": [[13, "graphnet.models.detector.prometheus.Prometheus._forward"]], "features (graphnet.models.detector.detector.detector property)": [[13, "graphnet.models.detector.detector.Detector.features"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[13, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[13, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[13, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[13, "graphnet.models.detector.prometheus.Prometheus.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[13, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector": [[13, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[13, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[13, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus": [[13, "module-graphnet.models.detector.prometheus"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[13, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[13, "graphnet.models.detector.detector.Detector.nb_outputs"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "convnet (class in graphnet.models.gnn.convnet)": [[14, "graphnet.models.gnn.convnet.ConvNet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[14, "graphnet.models.gnn.dynedge.DynEdge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[14, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "gnn (class in graphnet.models.gnn.gnn)": [[14, "graphnet.models.gnn.gnn.GNN"]], "__init__() (graphnet.models.gnn.convnet.convnet method)": [[14, "graphnet.models.gnn.convnet.ConvNet.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge.__init__"]], "__init__() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[14, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.__init__"]], "__init__() (graphnet.models.gnn.gnn.gnn method)": [[14, "graphnet.models.gnn.gnn.GNN.__init__"]], "_calculate_global_variables() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge._calculate_global_variables"]], "_construct_layers() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge._construct_layers"]], "_global_pooling() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge._global_pooling"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[14, "graphnet.models.gnn.convnet.ConvNet.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[14, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[14, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn": [[14, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[14, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[14, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[14, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[14, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[14, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[14, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[15, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[15, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "identitytask (class in graphnet.models.task.task)": [[15, "graphnet.models.task.task.IdentityTask"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[15, "graphnet.models.task.classification.MulticlassClassificationTask"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.PositionReconstruction"]], "task (class in graphnet.models.task.task)": [[15, "graphnet.models.task.task.Task"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "__init__() (graphnet.models.task.task.identitytask method)": [[15, "graphnet.models.task.task.IdentityTask.__init__"]], "__init__() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.__init__"]], "_forward() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task._forward"]], "_validate_and_set_transforms() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task._validate_and_set_transforms"]], "compute_loss() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task": [[15, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[15, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[15, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[15, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[15, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[15, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[15, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[15, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[15, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[15, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[15, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[15, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[15, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[15, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.train_eval"]], "contourfitter (class in graphnet.pisa.fitting)": [[16, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[16, "graphnet.pisa.fitting.WeightFitter"]], "__init__() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter.__init__"]], "__init__() (graphnet.pisa.fitting.weightfitter method)": [[16, "graphnet.pisa.fitting.WeightFitter.__init__"]], "_check_inputs() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter._check_inputs"]], "_fit_contours() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter._fit_contours"]], "_parallel_fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter._parallel_fit_1d_contour"]], "_parallel_fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter._parallel_fit_2d_contour"]], "config_updater() (in module graphnet.pisa.fitting)": [[16, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[16, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa": [[16, "module-graphnet.pisa"]], "graphnet.pisa.fitting": [[16, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[16, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[16, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[16, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[16, "graphnet.pisa.plotting.read_entry"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[17, "graphnet.training.weight_fitting.BjoernLow"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.CrossEntropyLoss"]], "direction (class in graphnet.training.labels)": [[17, "graphnet.training.labels.Direction"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "label (class in graphnet.training.labels)": [[17, "graphnet.training.labels.Label"]], "logcmk (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.MSELoss"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[17, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[17, "graphnet.training.callbacks.ProgressBar"]], "rmseloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.RMSELoss"]], "uniform (class in graphnet.training.weight_fitting)": [[17, "graphnet.training.weight_fitting.Uniform"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "weightfitter (class in graphnet.training.weight_fitting)": [[17, "graphnet.training.weight_fitting.WeightFitter"]], "__call__() (graphnet.training.labels.direction method)": [[17, "graphnet.training.labels.Direction.__call__"]], "__call__() (graphnet.training.labels.label method)": [[17, "graphnet.training.labels.Label.__call__"]], "__init__() (graphnet.training.callbacks.piecewiselinearlr method)": [[17, "graphnet.training.callbacks.PiecewiseLinearLR.__init__"]], "__init__() (graphnet.training.labels.direction method)": [[17, "graphnet.training.labels.Direction.__init__"]], "__init__() (graphnet.training.labels.label method)": [[17, "graphnet.training.labels.Label.__init__"]], "__init__() (graphnet.training.loss_functions.crossentropyloss method)": [[17, "graphnet.training.loss_functions.CrossEntropyLoss.__init__"]], "__init__() (graphnet.training.loss_functions.lossfunction method)": [[17, "graphnet.training.loss_functions.LossFunction.__init__"]], "__init__() (graphnet.training.weight_fitting.weightfitter method)": [[17, "graphnet.training.weight_fitting.WeightFitter.__init__"]], "_evaluate() (graphnet.training.loss_functions.vonmisesfisherloss method)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss._evaluate"]], "_fit_weights() (graphnet.training.weight_fitting.bjoernlow method)": [[17, "graphnet.training.weight_fitting.BjoernLow._fit_weights"]], "_fit_weights() (graphnet.training.weight_fitting.uniform method)": [[17, "graphnet.training.weight_fitting.Uniform._fit_weights"]], "_forward() (graphnet.training.loss_functions.crossentropyloss method)": [[17, "graphnet.training.loss_functions.CrossEntropyLoss._forward"]], "_forward() (graphnet.training.loss_functions.euclideandistanceloss method)": [[17, "graphnet.training.loss_functions.EuclideanDistanceLoss._forward"]], "_forward() (graphnet.training.loss_functions.logcoshloss method)": [[17, "graphnet.training.loss_functions.LogCoshLoss._forward"]], "_forward() (graphnet.training.loss_functions.lossfunction method)": [[17, "graphnet.training.loss_functions.LossFunction._forward"]], "_forward() (graphnet.training.loss_functions.mseloss method)": [[17, "graphnet.training.loss_functions.MSELoss._forward"]], "_forward() (graphnet.training.loss_functions.rmseloss method)": [[17, "graphnet.training.loss_functions.RMSELoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher2dloss method)": [[17, "graphnet.training.loss_functions.VonMisesFisher2DLoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher3dloss method)": [[17, "graphnet.training.loss_functions.VonMisesFisher3DLoss._forward"]], "_get_truth() (graphnet.training.weight_fitting.weightfitter method)": [[17, "graphnet.training.weight_fitting.WeightFitter._get_truth"]], "_log_cosh() (graphnet.training.loss_functions.logcoshloss class method)": [[17, "graphnet.training.loss_functions.LogCoshLoss._log_cosh"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[17, "graphnet.training.loss_functions.LogCMK.backward"]], "collate_fn() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.collate_fn"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[17, "graphnet.training.weight_fitting.WeightFitter.fit"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[17, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[17, "graphnet.training.loss_functions.LossFunction.forward"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[17, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "get_predictions() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.get_predictions"]], "graphnet.training": [[17, "module-graphnet.training"]], "graphnet.training.callbacks": [[17, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[17, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[17, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[17, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[17, "module-graphnet.training.weight_fitting"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "make_dataloader() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.make_train_validation_dataloader"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "save_results() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.save_results"]], "graphnet.utilities": [[18, "module-graphnet.utilities"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[19, "graphnet.utilities.config.base_config.BaseConfig"]], "configurable (class in graphnet.utilities.config.configurable)": [[19, "graphnet.utilities.config.configurable.Configurable"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[19, "graphnet.utilities.config.model_config.ModelConfig"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[19, "graphnet.utilities.config.training_config.TrainingConfig"]], "__init__() (graphnet.utilities.config.configurable.configurable method)": [[19, "graphnet.utilities.config.configurable.Configurable.__init__"]], "__init__() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.__init__"]], "__init__() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig.__init__"]], "_construct_model() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig._construct_model"]], "_is_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig._is_model_config_entry"]], "_parse_if_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig._parse_if_model_config_entry"]], "_serialise() (graphnet.utilities.config.model_config.modelconfig class method)": [[19, "graphnet.utilities.config.model_config.ModelConfig._serialise"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[19, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[19, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[19, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "config (graphnet.utilities.config.configurable.configurable property)": [[19, "graphnet.utilities.config.configurable.Configurable.config"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[19, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[19, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[19, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[19, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[19, "graphnet.utilities.config.configurable.Configurable.from_config"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[19, "graphnet.utilities.config.base_config.get_all_argument_values"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config": [[19, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[19, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[19, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[19, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[19, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[19, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[19, "module-graphnet.utilities.config.training_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.list_all_submodules"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[19, "graphnet.utilities.config.base_config.BaseConfig.load"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[19, "graphnet.utilities.config.configurable.Configurable.save_config"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[19, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[19, "graphnet.utilities.config.model_config.save_model_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[19, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.traverse_and_apply"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]]}})