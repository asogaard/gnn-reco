Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.parquet.parquet_dataset", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_dataset", "api/graphnet.data.sqlite.sqlite_dataset_perturbed", "api/graphnet.data.sqlite.sqlite_selection", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graph_builders", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contributing", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.parquet.parquet_dataset.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_dataset.rst", "api/graphnet.data.sqlite.sqlite_dataset_perturbed.rst", "api/graphnet.data.sqlite.sqlite_selection.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graph_builders.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contributing.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3pisaextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "parquet", "parquet_dataconverter", "parquet_dataset", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_dataset", "sqlite_dataset_perturbed", "sqlite_selection", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "gnn", "graph_builders", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "filesys", "imports", "logging", "maths", "src", "Contributing", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87], "i": [0, 1, 7, 11, 19, 20, 21, 27, 29, 31, 34, 35, 40, 43, 58, 60, 63, 65, 67, 69, 71, 77, 80, 81, 85, 86, 87], "an": [0, 21, 27, 35, 37, 67, 80, 82, 85, 86, 87], "open": [0, 85, 86], "sourc": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86], "python": [0, 1, 5, 8, 9, 11, 19, 21, 85, 86, 87], "framework": [0, 86], "aim": [0, 1, 85, 86], "provid": [0, 1, 7, 39, 67, 85, 86, 87], "high": [0, 86], "qualiti": [0, 86], "user": [0, 39, 65, 86, 87], "friendli": [0, 86], "end": [0, 1, 86], "function": [0, 5, 6, 7, 21, 30, 31, 34, 40, 43, 54, 60, 62, 63, 67, 68, 70, 75, 76, 77, 80, 81, 83, 86], "perform": [0, 40, 43, 48, 55, 57, 86], "reconstruct": [0, 1, 10, 12, 14, 15, 17, 25, 36, 37, 39, 56, 59, 86], "task": [0, 1, 39, 55, 57, 58, 67, 85, 86], "neutrino": [0, 1, 30, 62, 86], "telescop": [0, 1, 86], "us": [0, 1, 2, 4, 5, 6, 7, 18, 19, 25, 27, 30, 31, 32, 33, 35, 36, 39, 42, 43, 45, 51, 54, 56, 58, 60, 62, 65, 67, 69, 70, 71, 72, 77, 81, 82, 85, 86, 87], "graph": [0, 1, 6, 7, 43, 45, 53, 60, 68, 85, 86], "neural": [0, 1, 86], "network": [0, 1, 49, 86], "gnn": [0, 1, 25, 37, 39, 49, 50, 51, 55, 62, 86, 87], "make": [0, 5, 69, 76, 85, 86, 87], "fast": [0, 86, 87], "easi": [0, 86], "train": [0, 1, 29, 30, 35, 36, 55, 65, 66, 67, 68, 69, 71, 78, 84, 86, 87], "complex": [0, 39, 86], "model": [0, 1, 29, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 71, 76, 84, 86, 87], "can": [0, 1, 9, 11, 33, 43, 62, 63, 69, 73, 85, 86, 87], "event": [0, 1, 7, 30, 31, 33, 35, 43, 60, 62, 67, 69, 86], "state": [0, 86], "art": [0, 86], "arbitrari": [0, 86], "detector": [0, 1, 37, 39, 46, 47, 55, 86], "configur": [0, 1, 7, 37, 38, 39, 54, 55, 62, 70, 72, 75, 76, 78, 82, 86], "infer": [0, 1, 36, 37, 55, 59, 86, 87], "time": [0, 4, 31, 40, 43, 46, 58, 82, 86, 87], "ar": [0, 1, 4, 5, 21, 23, 27, 33, 35, 43, 57, 62, 67, 69, 76, 85, 86, 87], "order": [0, 19, 40, 60, 86], "magnitud": [0, 86], "faster": [0, 86], "than": [0, 6, 68, 82, 86], "tradit": [0, 86], "techniqu": [0, 86], "common": [0, 1, 67, 79, 81, 86], "ml": [0, 1, 86], "develop": [0, 1, 85, 86, 87], "physicist": [0, 1, 86], "wish": [0, 85, 86], "tool": [0, 1, 86], "research": [0, 86], "By": [0, 33, 86], "unit": [0, 5, 81, 85, 86], "both": [0, 63, 86], "group": [0, 43, 86], "increas": [0, 86], "longev": [0, 86], "usabl": [0, 86], "individu": [0, 5, 43, 60, 86], "code": [0, 31, 86], "contribut": [0, 86, 87], "from": [0, 1, 6, 7, 8, 9, 11, 19, 20, 21, 24, 27, 28, 29, 30, 33, 43, 53, 54, 58, 60, 63, 65, 66, 67, 73, 74, 82, 85, 86, 87], "build": [0, 1, 39, 45, 53, 54, 73, 76, 86], "gener": [0, 5, 11, 30, 57, 67, 86], "reusabl": [0, 86], "softwar": [0, 67, 86], "packag": [0, 1, 34, 77, 80, 81, 85, 86, 87], "base": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 27, 28, 29, 33, 35, 38, 40, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 65, 66, 67, 69, 71, 73, 74, 75, 76, 78, 81, 82, 86], "engin": [0, 86], "best": [0, 85, 86], "practic": [0, 85, 86], "lower": [0, 63, 86], "technic": [0, 86], "threshold": [0, 53, 86], "most": [0, 1, 35, 86, 87], "scientif": [0, 1, 86], "problem": [0, 85, 86], "The": [0, 5, 19, 21, 25, 31, 40, 43, 60, 62, 63, 65, 67, 82, 86], "improv": [0, 1, 71, 86], "classif": [0, 1, 39, 56, 59, 67, 86], "yield": [0, 62, 67, 86], "veri": [0, 35, 86], "accur": [0, 86], "e": [0, 1, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 24, 25, 27, 28, 29, 30, 31, 35, 38, 40, 42, 43, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 69, 73, 85, 86, 87], "g": [0, 1, 19, 21, 27, 31, 35, 43, 60, 69, 85, 86, 87], "low": [0, 86], "energi": [0, 4, 58, 69, 86], "observ": [0, 86], "icecub": [0, 1, 10, 21, 37, 38, 39, 44, 81, 86, 87], "here": [0, 85, 86, 87], "implement": [0, 1, 5, 9, 22, 23, 26, 27, 42, 49, 50, 51, 67, 85, 86], "wa": [0, 86], "appli": [0, 9, 43, 49, 50, 51, 52, 55, 77, 86], "oscil": [0, 61, 86], "lead": [0, 86], "signific": [0, 86], "angular": [0, 86], "rang": [0, 86], "relev": [0, 1, 21, 34, 80, 85, 86], "studi": [0, 86], "furthermor": [0, 86], "shown": [0, 86], "could": [0, 85, 86], "muon": [0, 30, 86], "v": [0, 58, 86], "therebi": [0, 1, 86], "effici": [0, 86], "puriti": [0, 86], "sampl": [0, 35, 86], "analysi": [0, 25, 86, 87], "similarli": [0, 21, 86], "ha": [0, 5, 21, 23, 31, 49, 67, 80, 86, 87], "great": [0, 86], "point": [0, 15, 66, 67, 86], "analys": [0, 36, 61, 86], "final": [0, 43, 65, 86], "millisecond": [0, 86], "allow": [0, 36, 37, 39, 43, 65, 86, 87], "whole": [0, 86], "new": [0, 1, 85, 86], "type": [0, 5, 6, 7, 8, 9, 18, 19, 20, 23, 24, 27, 28, 30, 31, 33, 34, 35, 38, 40, 42, 43, 45, 49, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 65, 67, 68, 69, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86], "cosmic": [0, 86], "alert": [0, 86], "which": [0, 7, 20, 30, 35, 37, 40, 43, 54, 57, 62, 67, 71, 86, 87], "were": [0, 86], "previous": [0, 86], "unfeas": [0, 86], "possibl": [0, 19, 85, 86], "identifi": [0, 5, 76, 86], "10": [0, 6, 25, 54, 68, 71, 86], "tev": [0, 86], "monitor": [0, 86], "rate": [0, 65, 86], "direct": [0, 58, 64, 66, 86], "real": [0, 86], "thi": [0, 3, 7, 11, 21, 29, 31, 34, 37, 39, 43, 45, 55, 60, 62, 63, 65, 67, 69, 73, 76, 85, 86, 87], "enabl": [0, 3, 82, 86], "first": [0, 85, 86], "ever": [0, 86], "despit": [0, 86], "larg": [0, 67, 86], "background": [0, 86], "origin": [0, 62, 86], "compris": [0, 86], "number": [0, 7, 30, 35, 43, 45, 46, 52, 57, 59, 65, 71, 86], "modul": [0, 3, 21, 36, 37, 38, 39, 44, 48, 54, 56, 61, 64, 70, 72, 75, 76, 77, 78, 81, 86], "necessari": [0, 19, 85, 86], "workflow": [0, 86], "ingest": [0, 1, 3, 44, 86], "raw": [0, 86], "data": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 59, 60, 66, 68, 71, 73, 75, 76, 78, 81, 84, 86, 87], "domain": [0, 1, 3, 36, 86], "specif": [0, 1, 3, 5, 7, 10, 21, 22, 23, 24, 26, 27, 28, 30, 31, 36, 40, 43, 44, 45, 46, 47, 48, 52, 55, 56, 57, 58, 59, 67, 85, 86, 87], "format": [0, 1, 3, 5, 7, 19, 23, 27, 63, 85, 86, 87], "deploi": [0, 1, 36, 38, 86], "chain": [0, 1, 36, 37, 38, 39, 55, 86, 87], "illustr": [0, 85, 86], "figur": [0, 63, 86], "below": [0, 35, 63, 69, 85, 86, 87], "level": [0, 7, 16, 29, 31, 40, 43, 82, 86, 87], "overview": [0, 86], "typic": [0, 19, 86], "convert": [0, 1, 3, 5, 19, 23, 27, 33, 86, 87], "industri": [0, 3, 86], "standard": [0, 3, 4, 35, 38, 55, 71, 85, 86], "intermedi": [0, 1, 3, 5, 7, 23, 27, 86, 87], "file": [0, 1, 3, 5, 7, 9, 19, 23, 24, 27, 33, 34, 54, 62, 65, 67, 71, 72, 73, 74, 80, 82, 86, 87], "read": [0, 3, 7, 19, 24, 28, 29, 45, 55, 56, 86, 87], "simpl": [0, 39, 86], "physic": [0, 1, 9, 20, 21, 30, 36, 38, 39, 56, 59, 86], "orient": [0, 39, 86], "compon": [0, 1, 39, 42, 43, 55, 86], "manag": [0, 9, 64, 86], "experi": [0, 1, 64, 86], "log": [0, 1, 58, 64, 65, 67, 70, 86, 87], "deploy": [0, 1, 38, 84, 86], "modular": [0, 39, 86], "subclass": [0, 39, 86], "torch": [0, 7, 24, 28, 29, 38, 39, 54, 55, 81, 86, 87], "nn": [0, 39, 42, 86], "mean": [0, 5, 23, 27, 39, 67, 86], "onli": [0, 1, 7, 39, 43, 62, 69, 81, 86, 87], "need": [0, 19, 39, 54, 67, 86, 87], "import": [0, 1, 31, 39, 70, 86], "few": [0, 39, 85, 86], "exist": [0, 27, 31, 39, 86], "purpos": [0, 39, 67, 86], "built": [0, 39, 86], "them": [0, 1, 19, 39, 62, 86, 87], "togeth": [0, 39, 55, 86], "form": [0, 39, 57, 86], "complet": [0, 39, 55, 86], "extend": [0, 1, 86], "suit": [0, 86], "through": [0, 67, 86], "layer": [0, 39, 41, 43, 86], "connect": [0, 53, 67, 86], "etc": [0, 67, 86], "optimis": [0, 1, 86], "differ": [0, 7, 37, 55, 85, 86, 87], "track": [0, 58, 85, 86], "These": [0, 85, 86], "prepar": [0, 67, 86], "satisfi": [0, 86], "o": [0, 86], "load": [0, 6, 34, 54, 73, 86], "requir": [0, 13, 31, 57, 67, 86, 87], "when": [0, 19, 31, 85, 86, 87], "batch": [0, 6, 40, 42, 43, 55, 60, 68, 71, 86], "do": [0, 67, 85, 86, 87], "predict": [0, 15, 17, 25, 38, 54, 55, 57, 67, 68, 86], "either": [0, 67, 86, 87], "contain": [0, 5, 7, 19, 20, 23, 25, 27, 30, 37, 54, 67, 69, 71, 86, 87], "imag": [0, 1, 85, 86, 87], "portabl": [0, 86], "depend": [0, 86, 87], "free": [0, 67, 86], "split": [0, 40, 86], "up": [0, 85, 86, 87], "abov": [0, 63, 67, 69, 86, 87], "interfac": [0, 61, 86, 87], "block": [0, 1, 86], "pre": [0, 29, 45, 85, 86], "directli": [0, 9, 82, 86], "while": [0, 65, 86], "continu": [0, 67, 86], "expand": [0, 86], "": [0, 5, 6, 7, 19, 27, 33, 55, 60, 65, 69, 71, 75, 76, 83, 86, 87], "capabl": [0, 86], "conveni": [1, 85, 87], "collabor": 1, "solv": [1, 85], "It": [1, 19, 31, 85], "leverag": 1, "advanc": [1, 43], "machin": [1, 87], "learn": [1, 65, 87], "without": [1, 62, 67, 87], "have": [1, 11, 31, 35, 43, 85, 87], "expert": 1, "themselv": [1, 76], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 9, 11, 23, 27, 31, 43, 45, 52, 54, 59, 67, 73, 74, 75, 76, 77, 78, 82, 85, 87], "streamlin": 1, "process": [1, 5, 9, 29, 30, 38, 45, 85, 87], "transform": [1, 43, 69], "extens": [1, 80], "basic": 1, "across": [1, 2, 21, 32, 43, 55, 67, 70, 71, 72, 82], "variou": [1, 37], "easili": 1, "architectur": [1, 49, 50, 51, 55], "main": [1, 48, 55, 85, 87], "featur": [1, 3, 4, 5, 7, 10, 24, 25, 28, 29, 38, 43, 45, 46, 47, 52, 57, 60, 68, 75, 85], "i3": [1, 5, 9, 20, 21, 23, 27, 34, 80, 87], "more": [1, 7, 31, 34, 82], "index": [1, 5, 7, 21, 24, 28, 31, 43], "sqlite": [1, 3, 25, 27, 28, 29, 30, 31, 33, 87], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 7, 45, 52, 54, 59, 74], "awai": 1, "detail": [1, 87], "expos": 1, "physicst": 1, "what": [1, 85], "i3modul": [1, 36, 38], "includ": [1, 29, 54, 62, 67, 73, 85], "docker": 1, "run": [1, 33, 37, 38], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 8, 36, 39, 70], "extractor": [1, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27], "parquet": [1, 3, 23, 24, 33, 87], "util": [1, 3, 8, 19, 20, 21, 30, 31, 33, 34, 35, 39, 64, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84], "constant": [1, 3, 84], "dataconvert": [1, 3, 23, 27], "dataload": [1, 3, 54, 55, 68, 78], "dataset": [1, 3, 6, 24, 28, 29, 35, 71, 75], "pipelin": [1, 3], "coarsen": [1, 39, 43, 55], "graph_build": [1, 39, 45, 46, 47], "standard_model": [1, 39], "pisa": [1, 13, 25, 62, 63, 81, 84, 87], "fit": [1, 54, 61, 63, 67, 69, 78], "plot": [1, 61], "callback": [1, 54, 64], "label": [1, 7, 59, 63, 64, 68], "loss_funct": [1, 57, 58, 59, 64], "weight_fit": [1, 64], "config": [1, 6, 35, 62, 70, 71, 73, 74, 75, 76, 77, 78], "argpars": [1, 70], "decor": [1, 5, 70, 81], "filesi": [1, 70], "math": [1, 70], "submodul": [1, 3, 8, 18, 22, 26, 32, 37, 39, 41, 44, 48, 56, 61, 64, 70, 72, 77], "global": [2, 4, 54], "i3extractor": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 23, 27], "i3featureextractor": [3, 4, 8, 27], "i3genericextractor": [3, 8, 27], "i3hybridrecoextractor": [3, 8], "i3pisaextractor": [3, 8], "i3retroextractor": [3, 8], "i3splinempeextractor": [3, 8], "i3truthextractor": [3, 4, 8], "i3tumextractor": [3, 8], "parquet_dataconvert": [3, 22], "parquet_dataset": [3, 22], "sqlite_dataconvert": [3, 26], "sqlite_dataset": [3, 26], "sqlite_dataset_perturb": [3, 26], "sqlite_select": [3, 26], "sqlite_util": [3, 26], "parquet_to_sqlit": [3, 32], "random": [3, 30, 32, 35], "string_selection_resolv": [3, 32], "truth": [3, 4, 7, 10, 16, 24, 25, 28, 29, 31, 62, 68, 69, 75], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "collate_fn": [3, 6, 64, 68], "do_shuffl": [3, 6], "columnmissingexcept": [3, 7], "insqlitepipelin": [3, 25], "class": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 35, 38, 40, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 82, 85], "object": [4, 5, 9, 11, 19, 21, 43, 45, 62, 71, 82], "namespac": [4, 54], "name": [4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 19, 21, 23, 27, 31, 33, 62, 69, 71, 77, 85, 87], "work": [4, 20, 85, 87], "icecube86": [4, 44, 46], "dom_x": [4, 38, 46], "dom_i": [4, 38, 46], "dom_z": [4, 38, 46], "dom_tim": [4, 38, 46], "charg": [4, 38, 46, 67], "rde": [4, 38, 46], "pmt_area": [4, 38, 46], "deepcor": [4, 10, 38, 46], "upgrad": [4, 10, 38, 46, 87], "string": [4, 19, 35, 38, 43, 46, 73], "pmt_number": [4, 38, 46], "dom_numb": [4, 38, 46], "pmt_dir_x": [4, 38, 46], "pmt_dir_i": [4, 38, 46], "pmt_dir_z": [4, 38, 46], "dom_typ": [4, 38, 46], "prometheu": [4, 39, 44], "sensor_pos_x": [4, 47], "sensor_pos_i": [4, 47], "sensor_pos_z": [4, 47], "t": [4, 21, 31, 47, 63, 65, 67, 87], "kaggl": [4, 46], "x": [4, 42, 43, 46, 54, 59, 60, 63, 67, 69], "y": [4, 46, 60, 63, 87], "z": [4, 46, 60, 87], "auxiliari": [4, 46], "energy_track": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 58, 66], "zenith": [4, 58, 66], "pid": [4, 35], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": 4, "inelast": [4, 58], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 9], "str": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 38, 40, 42, 43, 45, 50, 54, 55, 57, 58, 59, 62, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 80, 82], "gcd_file": [5, 9], "paramet": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83], "output_fil": [5, 23, 27], "global_index": 5, "avail": [5, 11, 25, 81], "pool": [5, 39, 40, 41], "worker": [5, 23, 27, 34, 71], "synchron": 5, "list": [5, 6, 7, 9, 11, 16, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 38, 40, 43, 45, 46, 47, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69, 75, 77, 78, 80], "return": [5, 6, 7, 9, 19, 20, 21, 23, 24, 27, 28, 30, 31, 33, 34, 35, 38, 40, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 65, 67, 68, 69, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83], "none": [5, 7, 9, 11, 16, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 38, 42, 43, 45, 46, 47, 50, 53, 54, 55, 57, 58, 59, 62, 65, 67, 68, 69, 71, 73, 74, 75, 77, 80, 82], "process_method": 5, "cach": 5, "output": [5, 23, 27, 33, 45, 46, 52, 54, 62, 69, 76, 82, 87], "typevar": 5, "f": [5, 43], "bound": [5, 63], "callabl": [5, 6, 7, 21, 42, 43, 57, 58, 59, 68, 69, 73, 75, 76, 77, 81], "ani": [5, 6, 7, 19, 20, 21, 24, 27, 28, 38, 42, 43, 54, 55, 57, 59, 63, 67, 69, 71, 73, 74, 75, 76, 77, 78, 82, 87], "outdir": [5, 23, 25, 27, 33, 62], "gcd_rescu": [5, 23, 27, 80], "nb_files_to_batch": [5, 23, 27], "sequential_batch_pattern": [5, 23, 27], "input_file_batch_pattern": [5, 23, 27], "index_column": [5, 7, 23, 24, 27, 28, 29, 31, 35, 54, 62, 68, 69, 75], "icetray_verbos": [5, 23, 27], "abc": [5, 7, 9, 25, 54, 66, 69, 74], "loggermixin": [5, 7, 9, 33, 35, 54, 66, 69, 70, 74, 82], "option": [5, 7, 16, 20, 23, 24, 25, 27, 28, 29, 30, 35, 42, 43, 45, 46, 47, 50, 53, 54, 55, 57, 58, 59, 62, 63, 67, 68, 69, 70, 71, 73, 75, 77, 80, 82, 87], "default": [5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 71, 73, 77, 80, 82], "int": [5, 6, 7, 23, 24, 25, 27, 28, 29, 30, 35, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 67, 68, 69, 71, 75, 78, 82], "1": [5, 7, 19, 23, 27, 35, 40, 43, 54, 57, 58, 60, 62, 65, 67, 69, 87], "event_no": [5, 7, 23, 24, 27, 28, 29, 31, 35, 54, 62, 68, 69], "0": [5, 7, 23, 27, 30, 35, 40, 43, 49, 53, 60, 62, 63, 65, 67, 68, 87], "properti": [5, 7, 9, 21, 43, 45, 46, 52, 59, 74], "file_suffix": [5, 23, 27], "suffix": 5, "execut": [5, 31], "method": [5, 9, 18, 19, 20, 21, 23, 27, 43, 58, 67, 69], "set": [5, 82, 85], "accord": [5, 23, 27, 29, 40, 43, 53], "inherit": [5, 9, 21, 45, 67, 82], "path": [5, 7, 24, 28, 29, 30, 31, 34, 54, 62, 63, 71, 73, 74, 75, 80, 87], "correspond": [5, 19, 21, 27, 34, 69, 80, 87], "gcd": [5, 9, 20, 34, 80], "save_data": [5, 23, 27], "save": [5, 19, 23, 27, 31, 54, 62, 68, 69, 73, 74, 75, 76, 82, 87], "ordereddict": [5, 23, 27], "extract": [5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 27, 33, 34], "merge_fil": [5, 23, 27], "input_fil": [5, 23, 27], "merg": [5, 23, 27, 67, 87], "result": [5, 23, 27, 43, 65, 67, 68, 77, 87], "current": [5, 23, 27, 35, 65, 85, 87], "instanc": [5, 7, 9, 21, 23, 27, 54, 62, 66, 68, 74, 82, 87], "rais": [5, 7, 23, 54], "notimplementederror": [5, 23], "If": [5, 7, 23, 27, 54, 62, 69, 85, 87], "been": [5, 23, 67, 85], "backend": [5, 23, 27], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 11, 27, 31], "pure": [5, 8, 9, 11, 21], "multiprocess": [5, 87], "tupl": [5, 7, 20, 21, 24, 28, 30, 50, 57, 58, 59, 60, 62, 63, 68, 71, 82], "remov": [6, 68, 71], "less": [6, 68], "two": [6, 62, 67, 68], "dom": [6, 40, 43, 68], "hit": [6, 68], "should": [6, 9, 19, 35, 43, 67, 68, 85, 87], "occur": [6, 68], "product": [6, 68], "selection_nam": 6, "check": [6, 20, 21, 27, 31, 71, 80, 81, 85, 87], "whether": [6, 20, 21, 27, 31, 54, 67, 77, 80, 81], "shuffl": [6, 34, 68], "select": [6, 7, 24, 28, 29, 30, 35, 68, 69, 75, 85], "bool": [6, 20, 21, 27, 31, 35, 40, 50, 54, 55, 62, 65, 67, 68, 69, 71, 77, 80, 81, 82], "batch_siz": [6, 25, 60, 68], "num_work": [6, 68], "persistent_work": [6, 68], "kwarg": [6, 38, 42, 57, 59, 67, 69, 73, 82], "true": [6, 27, 31, 35, 40, 55, 62, 67, 68, 69], "0x7fa6fdd9f250": 6, "classmethod": [6, 7, 54, 67, 73, 74], "from_dataset_config": 6, "construct": [6, 7, 41, 54, 66, 68, 74], "datasetconfig": [6, 7, 35, 72, 75], "union": [6, 7, 11, 19, 21, 24, 28, 29, 33, 40, 42, 43, 50, 54, 55, 57, 58, 59, 67, 68, 71, 74, 75, 78, 80], "dict": [6, 7, 11, 19, 21, 25, 27, 29, 45, 46, 47, 54, 55, 62, 63, 65, 67, 68, 71, 73, 75, 76, 77, 78], "except": 7, "indic": [7, 30, 35, 43, 71, 85], "miss": 7, "column": [7, 24, 28, 31, 53, 54, 60, 62, 69], "pulsemap": [7, 10, 24, 27, 28, 29, 68, 75], "node_truth": [7, 24, 28, 29, 68, 75], "truth_tabl": [7, 24, 28, 29, 62, 68, 69, 75], "node_truth_t": [7, 24, 28, 29, 68, 75], "string_select": [7, 24, 28, 29, 68, 75], "dtype": [7, 24, 28, 29, 38, 83], "float32": [7, 24, 28, 29, 38], "loss_weight_t": [7, 24, 28, 29, 68, 75], "loss_weight_column": [7, 24, 28, 29, 68, 75], "loss_weight_default_valu": [7, 24, 28, 29, 75], "seed": [7, 24, 28, 30, 35, 68, 75], "float": [7, 24, 28, 29, 30, 40, 49, 53, 54, 62, 63, 65, 67, 68, 75], "from_config": [7, 54, 74], "concatdataset": 7, "concaten": [7, 19], "multipl": [7, 9], "one": [7, 27, 31, 43, 54, 80, 85, 87], "tabl": [7, 24, 28, 31, 62, 69], "inform": [7, 9, 11, 16, 63], "query_t": [7, 24, 28], "sequential_index": [7, 24, 28], "queri": [7, 24, 28, 31, 35], "some": [7, 24, 28], "out": [7, 55, 56, 67, 82, 85, 87], "sequenti": 7, "len": 7, "self": [7, 62], "_may_": 7, "_indic": 7, "valu": [7, 19, 27, 31, 43, 63, 67, 71, 73], "entir": [7, 54], "impos": 7, "befor": 7, "scalar": [7, 60, 67], "length": [7, 21], "element": [7, 19, 21, 55, 60, 77], "present": [7, 71, 80, 81], "add_label": 7, "kei": [7, 11, 19, 20, 21, 27, 31, 43, 66, 76], "fn": [7, 21, 73, 77], "add": [7, 71, 85, 87], "custom": [7, 65], "defin": [7, 35, 43], "collect": [8, 18, 37, 67, 83], "i3fram": [8, 9, 11, 20, 21, 38], "frame": [8, 9, 11, 18, 21, 27, 38], "i3extractorcollect": [8, 9], "i3featureextractoricecube86": [8, 10, 38], "i3featureextractoricecubedeepcor": [8, 10, 38], "i3featureextractoricecubeupgrad": [8, 10, 38], "i3pulsenoisetruthflagicecubeupgrad": [8, 10], "i3galacticplanehybridrecoextractor": [8, 12], "i3splinempeicextractor": [8, 15], "__call__": 9, "icetrai": [9, 21, 37, 38, 81], "set_fil": 9, "store": [9, 31, 62], "refer": 9, "being": [9, 57], "get": [9, 20, 30, 65, 68, 82, 87], "86": [10, 38, 46], "puls": [10, 11, 20, 21, 27, 31, 40, 43, 60], "nois": [10, 20, 29, 30], "flag": 10, "ad": [10, 62], "exclude_kei": 11, "dynam": [11, 42, 50, 51], "pars": [11, 63, 70, 71, 72], "call": [11, 21, 27, 43, 62, 69, 82], "tri": [11, 21], "automat": [11, 67, 85], "cast": [11, 21], "done": [11, 43, 85], "recurs": [11, 21, 77, 80], "each": [11, 19, 21, 31, 33, 34, 40, 43, 53, 54, 57, 60, 62, 63, 65, 80], "look": [11, 87], "member": [11, 21, 75, 76, 82], "variabl": [11, 21, 60, 69], "signatur": [11, 21], "similar": [11, 21, 87], "handl": [11, 67, 71], "hand": 11, "special": [11, 60], "case": [11, 43, 87], "seri": [11, 20, 21, 31], "per": [11, 29, 31, 43, 67, 69], "mc": [11, 27, 31], "tree": [11, 27], "trigger": 11, "hybrid": 12, "galatict": 12, "plane": [12, 67], "dnn_hybrid": 12, "quantiti": [13, 60], "pisa_depend": 13, "retro": [14, 25], "splinemp": 15, "spline_mpe_": 15, "border": 16, "ndarrai": [16, 69], "tum": 17, "dnn": 17, "tum_dnn": 17, "flatten_nested_dictionari": [18, 19], "serialis": [18, 19], "transpose_list_of_dict": [18, 19], "frame_is_montecarlo": [18, 20], "frame_is_nois": [18, 20], "get_om_keys_and_pulseseri": [18, 20], "is_boost_enum": [18, 21], "is_boost_class": [18, 21], "is_icecube_class": [18, 21], "is_typ": [18, 21], "is_method": [18, 21], "break_cyclic_recurs": [18, 21], "get_member_vari": [18, 21], "cast_object_to_pure_python": [18, 21], "cast_pulse_series_to_pure_python": [18, 21], "manipul": 19, "obj": [19, 21, 77], "parent_kei": 19, "separ": [19, 65, 87], "flatten": 19, "nest": 19, "dictionari": [19, 20, 21, 27, 62, 63, 76], "non": [19, 21, 27, 30, 31, 67, 82], "exampl": [19, 35, 40, 43, 67, 87], "d": [19, 85], "b": [19, 40, 43], "c": [19, 43, 67, 87], "2": [19, 43, 58, 60, 62, 63, 67], "a__b": 19, "applic": 19, "combin": 19, "parent": 19, "__": [19, 21], "nester": 19, "json": 19, "therefor": 19, "we": [19, 21, 35, 85, 87], "outer": 19, "abl": [19, 87], "de": 19, "arrai": 19, "transpos": 19, "mont": 20, "carlo": 20, "simul": 20, "pulseseri": 20, "calibr": [20, 21], "indici": [20, 35, 67], "gcd_dict": [20, 21], "p": [20, 27, 67], "om": [20, 21], "i3calibr": 20, "indicesfor": 20, "boost": 21, "enum": 21, "ensur": [21, 34, 67, 85, 87], "isn": 21, "same": [21, 31, 43, 57, 60, 77], "return_discard": 21, "valid": [21, 35, 55, 67, 71], "ignor": 21, "mangl": 21, "fals": [21, 50, 54, 55, 62, 65, 67, 68, 69], "take": [21, 27, 43, 85], "mainli": 21, "cannot": 21, "trivial": [21, 59], "For": 21, "doe": 21, "try": 21, "support": [21, 85, 87], "equival": 21, "its": 21, "regular": 21, "like": [21, 43, 60, 67, 83, 85], "otherwis": [21, 67], "itself": 21, "deem": 21, "wai": [21, 35, 85, 87], "represent": [21, 43], "optic": 21, "found": [21, 67], "parquetdataconvert": [22, 23], "parquetdataset": [22, 24], "pytorch": [24, 28, 29, 65, 87], "module_dict": 25, "devic": 25, "retro_table_nam": 25, "n_worker": [25, 62], "pipeline_nam": 25, "creat": [25, 31, 74, 85, 87], "databas": [25, 27, 28, 29, 30, 31, 33, 62, 69, 87], "100": [25, 67, 87], "sqlitedataconvert": [26, 27, 87], "construct_datafram": [26, 27], "is_pulse_map": [26, 27], "is_mc_tre": [26, 27], "sqlitedataset": [26, 28, 29], "sqlitedatasetperturb": [26, 29], "get_desired_event_numb": [26, 30], "get_equal_proportion_neutrino_indic": [26, 30], "get_even_signal_background_indici": [26, 30], "get_even_track_cascade_indici": [26, 30], "get_even_dbang_select": [26, 30], "database_exist": [26, 31], "database_table_exist": [26, 31], "run_sql_cod": [26, 31], "save_to_sql": [26, 31], "attach_index": [26, 31], "create_t": [26, 31], "create_table_and_save_to_sql": [26, 31], "db": [27, 30, 68], "any_pulsemap_is_non_empti": 27, "data_dict": 27, "empti": 27, "retriev": 27, "splitinicepuls": 27, "least": [27, 85, 87], "becaus": [27, 34], "instead": [27, 67], "alwai": 27, "panda": [27, 35, 69], "datafram": [27, 31, 35, 54, 62, 68, 69], "table_nam": [27, 31], "perturb": 29, "perturbation_dict": 29, "step": [29, 55], "where": 29, "input": [29, 45, 52, 57, 59, 60], "randomli": [29, 35], "given": [29, 43, 69], "intend": [29, 87], "test": [29, 30, 35, 68, 81, 85], "stabil": 29, "under": 29, "small": [29, 67], "chang": [29, 62, 67, 85], "desired_s": 30, "fraction_nois": 30, "fraction_muon": 30, "fraction_nu_": 30, "fraction_nu_mu": 30, "fraction_nu_tau": 30, "specifi": [30, 35, 40, 63, 82, 87], "fraction": 30, "nu_e": 30, "nu_mu": 30, "nu_tau": 30, "reed": 30, "equal": 30, "flavour": 30, "proport": 30, "42": [30, 68, 87], "resp": 30, "cc": 30, "nc": 30, "mu": 30, "min_max_decay_length": 30, "dbang": 30, "database_path": [31, 62, 69], "df": 31, "must": [31, 40, 69, 85], "alreadi": [31, 87], "attach": 31, "default_typ": 31, "null": 31, "integer_primary_kei": 31, "NOT": [31, 67], "integ": [31, 67], "primari": 31, "Such": 31, "uniqu": [31, 33], "row": 31, "appropri": 31, "particl": [31, 66], "other": [31, 67, 85], "expect": [31, 35], "doesn": 31, "parquettosqliteconvert": [32, 33], "pairwise_shuffl": [32, 34], "stringselectionresolv": [32, 35], "parquet_path": 33, "mc_truth_tabl": 33, "excluded_field": 33, "assign": [33, 40, 43, 85], "id": 33, "everi": [33, 87], "field": [33, 63], "One": [33, 63], "choos": 33, "exclud": [33, 87], "certain": [33, 62], "argument": [33, 69, 71, 73, 75, 76], "exclude_field": 33, "mc_truth": 33, "database_nam": 33, "convers": [33, 87], "directori": [33, 62, 80], "rng": 34, "relat": [34, 80], "i3_list": [34, 80], "gcd_list": [34, 80], "correpond": 34, "handi": 34, "even": 34, "files_list": 34, "gcd_shuffl": 34, "i3_shuffl": 34, "resolv": 35, "use_cach": 35, "flexibl": 35, "show": [35, 65], "involv": 35, "cover": 35, "yml": [35, 71], "50000": 35, "5": [35, 71, 87], "ab": [35, 67], "12": 35, "14": 35, "16": 35, "13": [35, 87], "10000": 35, "compat": 35, "syntax": [35, 67], "mai": [35, 45, 87], "also": [35, 82], "fix": 35, "20": [35, 82], "graphnet_modul": [36, 37], "part": [37, 87], "graphnetmodulebas": [37, 38], "graphnetmoduleicecube86": [37, 38], "graphnetmoduleicecubedeepcor": [37, 38], "graphnetmoduleicecubeupgrad": [37, 38], "arg": [38, 57, 59, 67, 71, 73, 82], "i3trai": 38, "context": 38, "i3featureextractor_class": 38, "float16": 38, "float64": [38, 67], "keyword": 38, "write": [38, 87], "alia": [38, 87], "convnet": [39, 48], "dynedg": [39, 48, 51], "dynedge_jinst": [39, 48], "unbatch_edge_index": [39, 40], "attributecoarsen": [39, 40], "domcoarsen": [39, 40], "customdomcoarsen": [39, 40], "domandtimewindowcoarsen": [39, 40], "graphbuild": [39, 45, 46, 47, 53], "knngraphbuild": [39, 53], "radialgraphbuild": [39, 53], "euclideangraphbuild": [39, 53], "standardmodel": [39, 55], "calculate_xyzt_homophili": [39, 60], "calculate_distance_matrix": [39, 60], "knn_graph_batch": [39, 60], "oper": [40, 48], "cluster": [40, 43], "local": [40, 71], "edge_index": [40, 42, 60], "vector": [40, 43, 67], "tensor": [40, 42, 43, 49, 50, 51, 52, 54, 55, 59, 60, 67, 83], "longtensor": [40, 43, 60], "mathbf": [40, 43], "ldot": [40, 43], "n": [40, 43, 67], "node": [40, 43, 53, 60], "reduc": 40, "transfer_attribut": 40, "avg": 40, "reduce_opt": 40, "avg_pool": 40, "avg_pool_x": 40, "max": [40, 42, 67, 71], "max_pool": [40, 43], "max_pool_x": [40, 43], "min": [40, 43], "min_pool": [40, 41, 43], "min_pool_x": [40, 41, 43], "sum": [40, 43, 55], "sum_pool": [40, 41, 43], "sum_pool_x": [40, 41, 43], "forward": [40, 42, 45, 49, 50, 51, 52, 53, 54, 55, 59, 67], "attribut": 40, "addit": [40, 54, 67, 69], "time_window": 40, "window": 40, "dynedgeconv": [41, 42], "sum_pool_and_distribut": [41, 43], "group_bi": [41, 43], "group_pulses_to_dom": [41, 43], "group_pulses_to_pmt": [41, 43], "std_pool_x": [41, 43], "std_pool": [41, 43], "aggr": 42, "nb_neighbor": 42, "features_subset": [42, 50], "edgeconv": 42, "lightningmodul": [42, 54, 65], "edg": [42, 43, 50, 51, 60], "convolut": [42, 49, 50, 51], "8": [42, 43, 50, 67, 85, 87], "sequenc": 42, "slice": [42, 50], "pass": [42, 49, 50, 51, 52, 53, 54, 55, 59, 67, 69, 85], "sparsetensor": 42, "just": [43, 87], "negat": 43, "size": [43, 71], "cluster_index": 43, "distribut": [43, 58, 67, 69], "ident": [43, 59], "pmt": 43, "aggreg": 43, "f1": 43, "f2": 43, "6": [43, 63, 85], "7": [43, 62], "groupbi": 43, "3": [43, 49, 58, 60, 62, 63, 67, 85, 87], "matrix": [43, 60, 67], "mathbb": 43, "r": [43, 87], "n_1": 43, "n_b": 43, "maximum": [43, 71], "singl": [43, 66, 76], "obtain": [43, 67], "wise": 43, "dens": 43, "fc": 43, "known": 43, "std": 43, "within": 43, "repres": [43, 73, 76], "posit": [43, 58], "averag": [43, 67], "A": [43, 60, 62, 67, 69, 87], "torch_geometr": 43, "version": [43, 65, 85, 87], "standardis": 44, "icecubekaggl": [44, 46], "icecubedeepcor": [44, 46], "icecubeupgrad": [44, 46], "icecubeupgrade_v2": [44, 46], "scaler": [45, 46, 47], "ins": 45, "assum": [45, 59, 60], "adjac": 45, "nb_input": [45, 49, 50, 51, 52, 57, 58, 59], "nb_output": [45, 46, 49, 52, 57, 59], "overridden": 45, "competit": 46, "prototyp": 47, "learnabl": [48, 49, 50, 51, 52], "dynedgejinst": [48, 51], "author": [49, 51, 67], "martin": 49, "minh": 49, "nb_intermedi": 49, "dropout_ratio": 49, "128": [49, 71], "nb_neighbour": 50, "dynedge_layer_s": 50, "post_processing_layer_s": 50, "readout_layer_s": 50, "global_pooling_schem": 50, "add_global_variables_after_pool": 50, "exact": [51, 67], "2209": 51, "03042": 51, "rasmu": 51, "oerso": 51, "layer_size_scal": 51, "4": [51, 58, 63], "core": 52, "nb_nearest_neighbour": 53, "k": [53, 60, 67], "nearest": [53, 60], "neighbour": [53, 60], "radiu": 53, "sphere": 53, "chosen": 53, "centr": 53, "sigma": 53, "euclidean": [53, 85], "distanc": [53, 60], "between": [53, 55, 60, 65, 67], "see": [53, 65, 85, 87], "http": [53, 67, 85], "arxiv": [53, 67], "org": [53, 67, 87], "pdf": 53, "1809": 53, "06166": 53, "train_dataload": 54, "val_dataload": 54, "max_epoch": 54, "gpu": [54, 55, 71, 87], "ckpt_path": 54, "logger": [54, 82], "log_every_n_step": 54, "gradient_clip_v": 54, "distribution_strategi": [54, 55], "trainer_kwarg": 54, "pytorch_lightn": 54, "trainer": [54, 65, 68], "ddp": 54, "predict_as_datafram": 54, "prediction_column": [54, 68], "node_level": [54, 68], "additional_attribut": [54, 68], "save_state_dict": 54, "state_dict": 54, "load_state_dict": 54, "trust": 54, "load_modul": 54, "modelconfig": [54, 72, 76], "enough": 54, "eval": [54, 87], "lambda": 54, "express": [54, 67], "definit": 54, "consequ": 54, "valueerror": 54, "optimizer_class": 55, "optim": [55, 65], "adam": 55, "optimizer_kwarg": 55, "scheduler_class": 55, "scheduler_kwarg": 55, "scheduler_config": 55, "configure_optim": 55, "shared_step": 55, "batch_idx": 55, "share": 55, "follow": [55, 67, 69, 85, 87], "loss": [55, 59, 65, 67, 71], "calcul": [55, 60, 67], "training_step": 55, "train_batch": 55, "validation_step": 55, "val_batch": 55, "compute_loss": [55, 59], "pred": [55, 59], "verbos": [55, 65], "comput": [55, 59, 60, 67], "activ": [55, 59, 85, 87], "mode": [55, 59], "deactiv": [55, 59], "multiclassclassificationtask": [56, 57], "binaryclassificationtask": [56, 57], "binaryclassificationtasklogit": [56, 57], "azimuthreconstructionwithkappa": [56, 58], "azimuthreconstruct": [56, 58], "directionreconstructionwithkappa": [56, 58], "zenithreconstruct": [56, 58], "zenithreconstructionwithkappa": [56, 58], "energyreconstruct": [56, 58], "energyreconstructionwithpow": [56, 58], "energyreconstructionwithuncertainti": [56, 58], "vertexreconstruct": [56, 58], "positionreconstruct": [56, 58], "timereconstruct": [56, 58], "inelasticityreconstruct": [56, 58], "identitytask": [56, 57, 59], "classifi": 57, "untransform": 57, "latent": 57, "interpret": 57, "logit": [57, 67], "hidden_s": [57, 58, 59], "target_label": [57, 58, 59], "transform_prediction_and_target": [57, 58, 59], "transform_target": [57, 58, 59], "transform_infer": [57, 58, 59], "transform_support": [57, 58, 59], "loss_weight": [57, 58, 59], "binari": [57, 67], "lossfunct": [57, 58, 59, 64, 67], "angl": 58, "associ": [58, 67], "kappa": [58, 67], "var": 58, "3d": [58, 67], "vmf": 58, "stabl": [58, 87], "uncertainti": 58, "vertex": 58, "interact": 58, "That": 58, "hadron": 58, "wrt": 59, "target": [59, 67, 78], "train_ev": 59, "xyzt": 60, "homophili": 60, "measur": 60, "notic": [60, 67], "shape": [60, 67], "xyz_coord": 60, "pairwis": 60, "coordin": 60, "nb_dom": 60, "updat": [60, 62], "config_updat": [61, 62], "weightfitt": [61, 62, 64, 69], "contourfitt": [61, 62], "read_entri": [61, 63], "plot_2d_contour": [61, 63], "plot_1d_contour": [61, 63], "contour": [62, 63], "config_path": 62, "new_config_path": 62, "dummy_sect": 62, "temp": 62, "dummi": 62, "section": 62, "header": 62, "configupdat": 62, "programat": 62, "statistical_fit": 62, "weight": [62, 67, 69, 87], "fit_weight": [62, 69], "config_outdir": 62, "weight_nam": [62, 69], "pisa_config_dict": 62, "add_to_databas": [62, 69], "flux": 62, "_database_path": 62, "statist": 62, "effect": [62, 65, 85], "account": 62, "systemat": 62, "hypersurfac": 62, "assumpt": 62, "regard": 62, "pipeline_path": 62, "post_fix": 62, "model_nam": 62, "include_retro": 62, "_pred": 62, "fit_1d_contour": 62, "run_nam": 62, "config_dict": 62, "grid_siz": 62, "theta23_minmax": 62, "36": 62, "54": 62, "dm31_minmax": 62, "1d": [62, 63], "30": 62, "fit_2d_contour": 62, "2d": [62, 63, 67], "entri": [63, 71], "content": 63, "contour_data": 63, "xlim": 63, "ylim": 63, "0023799999999999997": 63, "0025499999999999997": 63, "chi2_critical_valu": 63, "605": 63, "width": 63, "176": 63, "height": 63, "388": 63, "path_to_pisa_fit_result": 63, "name_of_my_model_in_fit": 63, "legend": 63, "color": 63, "linestyl": 63, "style": [63, 85], "line": [63, 65, 71], "upper": 63, "axi": 63, "critic": [63, 82], "chi2": 63, "90": 63, "cl": 63, "note": 63, "right": [63, 67], "inch": 63, "706": 63, "352": 63, "piecewiselinearlr": [64, 65], "progressbar": [64, 65], "mseloss": [64, 67], "rmseloss": [64, 67], "logcoshloss": [64, 67], "crossentropyloss": [64, 67], "binarycrossentropyloss": [64, 67], "logcmk": [64, 67], "vonmisesfisherloss": [64, 67], "vonmisesfisher2dloss": [64, 67], "euclideandistanceloss": [64, 67], "vonmisesfisher3dloss": [64, 67], "make_dataload": [64, 68], "make_train_validation_dataload": [64, 68], "get_predict": [64, 68], "save_result": [64, 68], "uniform": [64, 69], "bjoernlow": [64, 69], "dure": 65, "mileston": 65, "factor": 65, "last_epoch": 65, "_lrschedul": 65, "interpol": 65, "linearli": 65, "get_lr": 65, "refresh_r": 65, "process_posit": 65, "tqdmprogressbar": 65, "progress": 65, "bar": 65, "customis": 65, "lightn": 65, "init_validation_tqdm": 65, "overrid": 65, "init_predict_tqdm": 65, "init_test_tqdm": 65, "init_train_tqdm": 65, "get_metr": 65, "on_train_epoch_start": 65, "print": [65, 82], "previou": 65, "epoch": [65, 71], "metric": 65, "behaviour": 65, "overwrit": 65, "on_train_epoch_end": 65, "don": [65, 87], "duplciat": 65, "stdout": 65, "runtim": [66, 87], "produc": [66, 69], "azimuth_kei": 66, "zenith_kei": 66, "return_el": 67, "elementwis": 67, "term": 67, "altern": [67, 85], "squar": 67, "error": [67, 82, 85], "root": [67, 87], "cosh": 67, "act": 67, "cross": 67, "entropi": 67, "num_class": 67, "softmax": 67, "ed": 67, "probabl": 67, "mit": 67, "licens": 67, "copyright": 67, "2019": 67, "ryabinin": 67, "permiss": 67, "herebi": 67, "grant": 67, "person": 67, "copi": 67, "document": 67, "deal": 67, "restrict": 67, "limit": 67, "modifi": 67, "publish": 67, "sublicens": 67, "sell": 67, "permit": 67, "whom": 67, "furnish": 67, "so": [67, 87], "subject": 67, "condit": 67, "shall": 67, "substanti": 67, "portion": 67, "THE": 67, "AS": 67, "warranti": 67, "OF": 67, "kind": 67, "OR": 67, "impli": 67, "BUT": 67, "TO": 67, "merchant": 67, "FOR": 67, "particular": [67, 85], "AND": 67, "noninfring": 67, "IN": 67, "NO": 67, "holder": 67, "BE": 67, "liabl": 67, "claim": 67, "damag": 67, "liabil": 67, "action": 67, "contract": 67, "tort": 67, "aris": 67, "WITH": 67, "_____________________": 67, "github": [67, 87], "com": [67, 87], "mryab": 67, "vmf_loss": 67, "blob": 67, "master": 67, "py": [67, 87], "bessel": 67, "exponenti": 67, "scale": 67, "ditto": 67, "iv": 67, "1812": 67, "04616": 67, "spite": 67, "suggest": 67, "sec": 67, "paper": 67, "comparison": 67, "m": 67, "correct": 67, "static": [67, 85], "ctx": 67, "backward": 67, "grad_output": 67, "von": 67, "mise": 67, "fisher": 67, "dimens": 67, "log_cmk_exact": 67, "c_": 67, "exactli": [67, 82], "log_cmk_approx": 67, "approx": 67, "minu": 67, "sign": 67, "log_cmk": 67, "kappa_switch": 67, "sinc": 67, "diverg": 67, "700": 67, "precis": 67, "unaccur": 67, "switch": 67, "three": 67, "database_indic": 68, "test_siz": 68, "33": 68, "tag": [68, 85, 87], "archiv": 68, "public": 69, "bin": 69, "privat": 69, "_fit_weight": 69, "sql": 69, "desir": [69, 80], "match": [69, 80, 83], "space": 69, "np": 69, "log10": 69, "happen": 69, "x_low": 69, "wherea": 69, "curv": 69, "base_config": [70, 72], "dataset_config": [70, 72], "model_config": [70, 72], "training_config": [70, 72], "argumentpars": [70, 71], "is_gcd_fil": [70, 80], "is_i3_fil": [70, 80], "has_extens": [70, 80], "find_i3_fil": [70, 80], "has_icecube_packag": [70, 81], "has_torch_packag": [70, 81], "has_pisa_packag": [70, 81], "requires_icecub": [70, 81], "set_logging_level": [70, 82], "get_formatt": [70, 82], "warn_onc": [70, 82], "repeatfilt": [70, 82], "get_logg": [70, 82, 87], "eps_lik": [70, 83], "consist": [71, 82, 85], "cli": 71, "pop_default": 71, "usag": 71, "descript": 71, "command": [71, 87], "standard_argu": 71, "help": [71, 85], "home": [71, 87], "runner": 71, "lib": [71, 87], "python3": 71, "training_example_data_sqlit": 71, "earli": 71, "stop": 71, "patienc": 71, "after": 71, "narg": 71, "50": 71, "example_energy_reconstruction_model": 71, "num": 71, "fetch": 71, "with_standard_argu": 71, "baseconfig": [72, 73, 74, 75, 76, 78], "get_all_argument_valu": [72, 73], "save_dataset_config": [72, 75], "save_model_config": [72, 76], "traverse_and_appli": [72, 77], "list_all_submodul": [72, 77], "get_all_grapnet_class": [72, 77], "is_graphnet_modul": [72, 77], "is_graphnet_class": [72, 77], "get_graphnet_class": [72, 77], "trainingconfig": [72, 78], "basemodel": [73, 76], "dump": 73, "yaml": [73, 74], "as_dict": [73, 76], "overwritten": 73, "re": [74, 87], "save_config": 74, "init_fn": [75, 76], "__init__": [75, 76], "class_nam": 76, "wrap": 76, "unambigu": 76, "fn_kwarg": 77, "structur": 77, "moduletyp": 77, "grapnet": 77, "lookup": 77, "early_stopping_pati": 78, "system": [80, 87], "filenam": 80, "find": 80, "dir": 80, "search": 80, "test_funct": 81, "colour": 82, "formatt": 82, "coloredformatt": 82, "messag": 82, "warn": 82, "onc": 82, "filter": 82, "repeat": 82, "record": 82, "nb_repeats_allow": 82, "logrecord": 82, "log_fold": 82, "place": [82, 85], "termin": 82, "debug": 82, "loggeradapt": 82, "msg": 82, "deleg": 82, "info": [82, 87], "assort": 83, "ep": 83, "api": 84, "To": [85, 87], "sure": [85, 87], "smooth": 85, "guidelin": 85, "guid": 85, "encourag": 85, "contributor": 85, "discuss": 85, "bug": 85, "anyth": 85, "you": [85, 87], "start": [85, 87], "describ": 85, "would": 85, "yourself": 85, "ownership": 85, "transpar": 85, "agreement": 85, "prioriti": 85, "avoid": 85, "situat": 85, "lot": 85, "effort": 85, "go": 85, "turn": 85, "outsid": 85, "scope": 85, "project": 85, "solut": 85, "better": 85, "fork": 85, "repo": 85, "dedic": 85, "branch": [85, 87], "your": [85, 87], "repositori": 85, "graphbuil": 85, "builder": 85, "own": [85, 87], "team": 85, "accept": 85, "autom": 85, "review": 85, "pep8": 85, "docstr": 85, "googl": 85, "hint": 85, "clean": [85, 87], "adher": 85, "pep": 85, "pylint": 85, "flake8": 85, "black": 85, "well": 85, "recommend": [85, 87], "mypi": 85, "pydocstyl": 85, "docformatt": 85, "commit": 85, "hook": 85, "instal": 85, "come": 85, "pip": [85, 87], "Then": 85, "everytim": 85, "pep257": 85, "concept": 85, "ljvmiranda921": 85, "io": 85, "notebook": 85, "2018": 85, "06": 85, "21": 85, "precommit": 85, "environ": 87, "virtual": 87, "anaconda": 87, "prove": 87, "instruct": 87, "setup": 87, "want": 87, "In": 87, "achiev": 87, "bash": 87, "shell": 87, "cvmf": 87, "opensciencegrid": 87, "py3": 87, "v4": 87, "sh": 87, "rhel_7_x86_64": 87, "metaproject": 87, "combo": 87, "env": 87, "script": 87, "With": 87, "now": 87, "light": 87, "extra": 87, "geometr": 87, "won": 87, "later": 87, "torch_cpu": 87, "txt": 87, "cpu": 87, "torch_gpu": 87, "prefer": 87, "unix": 87, "git": 87, "clone": 87, "usernam": 87, "cd": 87, "conda": 87, "gcc_linux": 87, "64": 87, "gxx_linux": 87, "libgcc": 87, "cudatoolkit": 87, "11": 87, "forg": 87, "torch_maco": 87, "On": 87, "maco": 87, "box": 87, "compil": 87, "gcc": 87, "date": 87, "possibli": 87, "cuda": 87, "toolkit": 87, "recent": 87, "omit": 87, "newer": 87, "export": 87, "ld_library_path": 87, "anaconda3": 87, "miniconda3": 87, "bashrc": 87, "librari": 87, "access": 87, "consid": 87, "rm": 87, "asogaard": 87, "latest": 87, "dc423315742c": 87, "01_icetrai": 87, "01_convert_i3_fil": 87, "2023": 87, "01": 87, "24": 87, "41": 87, "27": 87, "graphnet_20230124": 87, "134127": 87, "46": 87, "convert_i3_fil": 87, "ic86": 87, "thread": 87, "00": 87, "39": 87, "79": 87, "26": 87, "413": 87, "88it": 87, "specialis": 87, "ones": 87, "push": 87, "vx": 87}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [36, 0, 0, "-", "deployment"], [39, 0, 0, "-", "models"], [61, 0, 0, "-", "pisa"], [64, 0, 0, "-", "training"], [70, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [6, 0, 0, "-", "dataloader"], [7, 0, 0, "-", "dataset"], [8, 0, 0, "-", "extractors"], [22, 0, 0, "-", "parquet"], [25, 0, 0, "-", "pipeline"], [26, 0, 0, "-", "sqlite"], [32, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[6, 1, 1, "", "DataLoader"], [6, 5, 1, "", "collate_fn"], [6, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[6, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[7, 6, 1, "", "ColumnMissingException"], [7, 1, 1, "", "Dataset"]], "graphnet.data.dataset.Dataset": [[7, 3, 1, "", "add_label"], [7, 3, 1, "", "concatenate"], [7, 3, 1, "", "from_config"], [7, 4, 1, "", "path"], [7, 3, 1, "", "query_table"], [7, 4, 1, "", "truth_table"]], "graphnet.data.extractors": [[9, 0, 0, "-", "i3extractor"], [10, 0, 0, "-", "i3featureextractor"], [11, 0, 0, "-", "i3genericextractor"], [12, 0, 0, "-", "i3hybridrecoextractor"], [13, 0, 0, "-", "i3pisaextractor"], [14, 0, 0, "-", "i3retroextractor"], [15, 0, 0, "-", "i3splinempeextractor"], [16, 0, 0, "-", "i3truthextractor"], [17, 0, 0, "-", "i3tumextractor"], [18, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[9, 1, 1, "", "I3Extractor"], [9, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[9, 4, 1, "", "name"], [9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[10, 1, 1, "", "I3FeatureExtractor"], [10, 1, 1, "", "I3FeatureExtractorIceCube86"], [10, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [10, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [10, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[11, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[13, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3retroextractor": [[14, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[15, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[16, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[17, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[19, 0, 0, "-", "collections"], [20, 0, 0, "-", "frames"], [21, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[19, 5, 1, "", "flatten_nested_dictionary"], [19, 5, 1, "", "serialise"], [19, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[20, 5, 1, "", "frame_is_montecarlo"], [20, 5, 1, "", "frame_is_noise"], [20, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[21, 5, 1, "", "break_cyclic_recursion"], [21, 5, 1, "", "cast_object_to_pure_python"], [21, 5, 1, "", "cast_pulse_series_to_pure_python"], [21, 5, 1, "", "get_member_variables"], [21, 5, 1, "", "is_boost_class"], [21, 5, 1, "", "is_boost_enum"], [21, 5, 1, "", "is_icecube_class"], [21, 5, 1, "", "is_method"], [21, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[23, 0, 0, "-", "parquet_dataconverter"], [24, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[23, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[23, 2, 1, "", "file_suffix"], [23, 3, 1, "", "merge_files"], [23, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[24, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[24, 3, 1, "", "query_table"]], "graphnet.data.pipeline": [[25, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.sqlite": [[27, 0, 0, "-", "sqlite_dataconverter"], [28, 0, 0, "-", "sqlite_dataset"], [29, 0, 0, "-", "sqlite_dataset_perturbed"], [30, 0, 0, "-", "sqlite_selection"], [31, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[27, 1, 1, "", "SQLiteDataConverter"], [27, 5, 1, "", "construct_dataframe"], [27, 5, 1, "", "is_mc_tree"], [27, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[27, 3, 1, "", "any_pulsemap_is_non_empty"], [27, 2, 1, "", "file_suffix"], [27, 3, 1, "", "merge_files"], [27, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[28, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[28, 3, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[29, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_selection": [[30, 5, 1, "", "get_desired_event_numbers"], [30, 5, 1, "", "get_equal_proportion_neutrino_indices"], [30, 5, 1, "", "get_even_dbang_selection"], [30, 5, 1, "", "get_even_signal_background_indicies"], [30, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[31, 5, 1, "", "attach_index"], [31, 5, 1, "", "create_table"], [31, 5, 1, "", "create_table_and_save_to_sql"], [31, 5, 1, "", "database_exists"], [31, 5, 1, "", "database_table_exists"], [31, 5, 1, "", "run_sql_code"], [31, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[33, 0, 0, "-", "parquet_to_sqlite"], [34, 0, 0, "-", "random"], [35, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[33, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[33, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[34, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[35, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[35, 3, 1, "", "resolve"]], "graphnet.deployment": [[37, 0, 0, "-", "i3modules"]], "graphnet.deployment.i3modules": [[38, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[38, 1, 1, "", "GraphNeTModuleBase"], [38, 1, 1, "", "GraphNeTModuleIceCube86"], [38, 1, 1, "", "GraphNeTModuleIceCubeDeepCore"], [38, 1, 1, "", "GraphNeTModuleIceCubeUpgrade"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase": [[38, 3, 1, "", "Configure"], [38, 2, 1, "", "DTYPES"], [38, 2, 1, "", "FEATURES"], [38, 2, 1, "", "I3FEATUREEXTRACTOR_CLASS"], [38, 3, 1, "", "Physics"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86": [[38, 2, 1, "", "FEATURES"], [38, 2, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore": [[38, 2, 1, "", "FEATURES"], [38, 2, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade": [[38, 2, 1, "", "FEATURES"], [38, 2, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.models": [[40, 0, 0, "-", "coarsening"], [41, 0, 0, "-", "components"], [44, 0, 0, "-", "detector"], [48, 0, 0, "-", "gnn"], [53, 0, 0, "-", "graph_builders"], [54, 0, 0, "-", "model"], [55, 0, 0, "-", "standard_model"], [56, 0, 0, "-", "task"], [60, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[40, 1, 1, "", "AttributeCoarsening"], [40, 1, 1, "", "Coarsening"], [40, 1, 1, "", "CustomDOMCoarsening"], [40, 1, 1, "", "DOMAndTimeWindowCoarsening"], [40, 1, 1, "", "DOMCoarsening"], [40, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[40, 3, 1, "", "forward"], [40, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[42, 0, 0, "-", "layers"], [43, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[42, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[42, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[43, 5, 1, "", "group_by"], [43, 5, 1, "", "group_pulses_to_dom"], [43, 5, 1, "", "group_pulses_to_pmt"], [43, 5, 1, "", "min_pool"], [43, 5, 1, "", "min_pool_x"], [43, 5, 1, "", "std_pool"], [43, 5, 1, "", "std_pool_x"], [43, 5, 1, "", "sum_pool"], [43, 5, 1, "", "sum_pool_and_distribute"], [43, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[45, 0, 0, "-", "detector"], [46, 0, 0, "-", "icecube"], [47, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[45, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[45, 4, 1, "", "features"], [45, 3, 1, "", "forward"], [45, 4, 1, "", "nb_inputs"], [45, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[46, 1, 1, "", "IceCube86"], [46, 1, 1, "", "IceCubeDeepCore"], [46, 1, 1, "", "IceCubeKaggle"], [46, 1, 1, "", "IceCubeUpgrade"], [46, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[46, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[46, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[46, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[46, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[46, 2, 1, "", "features"], [46, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[47, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[47, 2, 1, "", "features"]], "graphnet.models.gnn": [[49, 0, 0, "-", "convnet"], [50, 0, 0, "-", "dynedge"], [51, 0, 0, "-", "dynedge_jinst"], [52, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[49, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[49, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[50, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[50, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[51, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[51, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[52, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[52, 3, 1, "", "forward"], [52, 4, 1, "", "nb_inputs"], [52, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[53, 1, 1, "", "EuclideanGraphBuilder"], [53, 1, 1, "", "GraphBuilder"], [53, 1, 1, "", "KNNGraphBuilder"], [53, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[53, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[53, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[53, 3, 1, "", "forward"]], "graphnet.models.model": [[54, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[54, 3, 1, "", "fit"], [54, 3, 1, "", "forward"], [54, 3, 1, "", "from_config"], [54, 3, 1, "", "load"], [54, 3, 1, "", "load_state_dict"], [54, 3, 1, "", "predict"], [54, 3, 1, "", "predict_as_dataframe"], [54, 3, 1, "", "save"], [54, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[55, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[55, 3, 1, "", "compute_loss"], [55, 3, 1, "", "configure_optimizers"], [55, 3, 1, "", "forward"], [55, 3, 1, "", "inference"], [55, 3, 1, "", "predict"], [55, 3, 1, "", "shared_step"], [55, 3, 1, "", "train"], [55, 3, 1, "", "training_step"], [55, 3, 1, "", "validation_step"]], "graphnet.models.task": [[57, 0, 0, "-", "classification"], [58, 0, 0, "-", "reconstruction"], [59, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[57, 1, 1, "", "BinaryClassificationTask"], [57, 1, 1, "", "BinaryClassificationTaskLogits"], [57, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[57, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[57, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[58, 1, 1, "", "AzimuthReconstruction"], [58, 1, 1, "", "AzimuthReconstructionWithKappa"], [58, 1, 1, "", "DirectionReconstructionWithKappa"], [58, 1, 1, "", "EnergyReconstruction"], [58, 1, 1, "", "EnergyReconstructionWithPower"], [58, 1, 1, "", "EnergyReconstructionWithUncertainty"], [58, 1, 1, "", "InelasticityReconstruction"], [58, 1, 1, "", "PositionReconstruction"], [58, 1, 1, "", "TimeReconstruction"], [58, 1, 1, "", "VertexReconstruction"], [58, 1, 1, "", "ZenithReconstruction"], [58, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[59, 1, 1, "", "IdentityTask"], [59, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[59, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[59, 3, 1, "", "compute_loss"], [59, 3, 1, "", "forward"], [59, 3, 1, "", "inference"], [59, 4, 1, "", "nb_inputs"], [59, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[60, 5, 1, "", "calculate_distance_matrix"], [60, 5, 1, "", "calculate_xyzt_homophily"], [60, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[62, 0, 0, "-", "fitting"], [63, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[62, 1, 1, "", "ContourFitter"], [62, 1, 1, "", "WeightFitter"], [62, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[62, 3, 1, "", "fit_1d_contour"], [62, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[62, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[63, 5, 1, "", "plot_1D_contour"], [63, 5, 1, "", "plot_2D_contour"], [63, 5, 1, "", "read_entry"]], "graphnet.training": [[65, 0, 0, "-", "callbacks"], [66, 0, 0, "-", "labels"], [67, 0, 0, "-", "loss_functions"], [68, 0, 0, "-", "utils"], [69, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[65, 1, 1, "", "PiecewiseLinearLR"], [65, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[65, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[65, 3, 1, "", "get_metrics"], [65, 3, 1, "", "init_predict_tqdm"], [65, 3, 1, "", "init_test_tqdm"], [65, 3, 1, "", "init_train_tqdm"], [65, 3, 1, "", "init_validation_tqdm"], [65, 3, 1, "", "on_train_epoch_end"], [65, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[66, 1, 1, "", "Direction"], [66, 1, 1, "", "Label"]], "graphnet.training.loss_functions": [[67, 1, 1, "", "BinaryCrossEntropyLoss"], [67, 1, 1, "", "CrossEntropyLoss"], [67, 1, 1, "", "EuclideanDistanceLoss"], [67, 1, 1, "", "LogCMK"], [67, 1, 1, "", "LogCoshLoss"], [67, 1, 1, "", "LossFunction"], [67, 1, 1, "", "MSELoss"], [67, 1, 1, "", "RMSELoss"], [67, 1, 1, "", "VonMisesFisher2DLoss"], [67, 1, 1, "", "VonMisesFisher3DLoss"], [67, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[67, 3, 1, "", "backward"], [67, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[67, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[67, 3, 1, "", "log_cmk"], [67, 3, 1, "", "log_cmk_approx"], [67, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[68, 5, 1, "", "collate_fn"], [68, 5, 1, "", "get_predictions"], [68, 5, 1, "", "make_dataloader"], [68, 5, 1, "", "make_train_validation_dataloader"], [68, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[69, 1, 1, "", "BjoernLow"], [69, 1, 1, "", "Uniform"], [69, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[69, 3, 1, "", "fit"]], "graphnet.utilities": [[71, 0, 0, "-", "argparse"], [72, 0, 0, "-", "config"], [79, 0, 0, "-", "decorators"], [80, 0, 0, "-", "filesys"], [81, 0, 0, "-", "imports"], [82, 0, 0, "-", "logging"], [83, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[71, 1, 1, "", "ArgumentParser"], [71, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[71, 2, 1, "", "standard_arguments"], [71, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[71, 3, 1, "", "contains"], [71, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[73, 0, 0, "-", "base_config"], [74, 0, 0, "-", "configurable"], [75, 0, 0, "-", "dataset_config"], [76, 0, 0, "-", "model_config"], [77, 0, 0, "-", "parsing"], [78, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[73, 1, 1, "", "BaseConfig"], [73, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[73, 3, 1, "", "as_dict"], [73, 3, 1, "", "dump"], [73, 3, 1, "", "load"]], "graphnet.utilities.config.configurable": [[74, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[74, 4, 1, "", "config"], [74, 3, 1, "", "from_config"], [74, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[75, 1, 1, "", "DatasetConfig"], [75, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[75, 2, 1, "", "features"], [75, 2, 1, "", "index_column"], [75, 2, 1, "", "loss_weight_column"], [75, 2, 1, "", "loss_weight_default_value"], [75, 2, 1, "", "loss_weight_table"], [75, 2, 1, "", "node_truth"], [75, 2, 1, "", "node_truth_table"], [75, 2, 1, "", "path"], [75, 2, 1, "", "pulsemaps"], [75, 2, 1, "", "seed"], [75, 2, 1, "", "selection"], [75, 2, 1, "", "string_selection"], [75, 2, 1, "", "truth"], [75, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[76, 1, 1, "", "ModelConfig"], [76, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[76, 2, 1, "", "arguments"], [76, 3, 1, "", "as_dict"], [76, 2, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[77, 5, 1, "", "get_all_grapnet_classes"], [77, 5, 1, "", "get_graphnet_classes"], [77, 5, 1, "", "is_graphnet_class"], [77, 5, 1, "", "is_graphnet_module"], [77, 5, 1, "", "list_all_submodules"], [77, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[78, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[78, 2, 1, "", "dataloader"], [78, 2, 1, "", "early_stopping_patience"], [78, 2, 1, "", "fit"], [78, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[80, 5, 1, "", "find_i3_files"], [80, 5, 1, "", "has_extension"], [80, 5, 1, "", "is_gcd_file"], [80, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[81, 5, 1, "", "has_icecube_package"], [81, 5, 1, "", "has_pisa_package"], [81, 5, 1, "", "has_torch_package"], [81, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[82, 1, 1, "", "LoggerMixin"], [82, 1, 1, "", "RepeatFilter"], [82, 5, 1, "", "get_formatters"], [82, 5, 1, "", "get_logger"], [82, 5, 1, "", "set_logging_level"], [82, 5, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[82, 3, 1, "", "critical"], [82, 3, 1, "", "debug"], [82, 3, 1, "", "error"], [82, 3, 1, "", "info"], [82, 3, 1, "", "warning"]], "graphnet.utilities.logging.RepeatFilter": [[82, 3, 1, "", "filter"]], "graphnet.utilities.maths": [[83, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 86], "impact": [0, 86], "usag": [0, 86], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": 7, "extractor": 8, "i3extractor": 9, "i3featureextractor": 10, "i3genericextractor": 11, "i3hybridrecoextractor": 12, "i3pisaextractor": 13, "i3retroextractor": 14, "i3splinempeextractor": 15, "i3truthextractor": 16, "i3tumextractor": 17, "util": [18, 32, 60, 68, 70], "collect": 19, "frame": 20, "type": 21, "parquet": 22, "parquet_dataconvert": 23, "parquet_dataset": 24, "pipelin": 25, "sqlite": 26, "sqlite_dataconvert": 27, "sqlite_dataset": 28, "sqlite_dataset_perturb": 29, "sqlite_select": 30, "sqlite_util": 31, "parquet_to_sqlit": 33, "random": 34, "string_selection_resolv": 35, "deploy": 36, "i3modul": 37, "graphnet_modul": 38, "model": [39, 54], "coarsen": 40, "compon": 41, "layer": 42, "pool": 43, "detector": [44, 45], "icecub": 46, "prometheu": 47, "gnn": [48, 52], "convnet": 49, "dynedg": 50, "dynedge_jinst": 51, "graph_build": 53, "standard_model": 55, "task": [56, 59], "classif": 57, "reconstruct": 58, "pisa": 61, "fit": 62, "plot": 63, "train": 64, "callback": 65, "label": 66, "loss_funct": 67, "weight_fit": 69, "argpars": 71, "config": 72, "base_config": 73, "configur": 74, "dataset_config": 75, "model_config": 76, "pars": 77, "training_config": 78, "decor": 79, "filesi": 80, "import": 81, "log": 82, "math": 83, "src": 84, "contribut": 85, "github": 85, "issu": 85, "pull": 85, "request": 85, "convent": 85, "code": 85, "qualiti": 85, "instal": 87, "icetrai": 87, "stand": 87, "alon": 87, "run": 87, "docker": 87}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [86, "about"]], "Impact": [[0, "impact"], [86, "impact"]], "Usage": [[0, "usage"], [86, "usage"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "module-graphnet.data.dataloader"]], "dataset": [[7, "module-graphnet.data.dataset"]], "extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3pisaextractor": [[13, "module-graphnet.data.extractors.i3pisaextractor"]], "i3retroextractor": [[14, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[15, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[16, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[17, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[18, "module-graphnet.data.extractors.utilities"], [32, "module-graphnet.data.utilities"], [70, "module-graphnet.utilities"]], "collections": [[19, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[20, "module-graphnet.data.extractors.utilities.frames"]], "types": [[21, "module-graphnet.data.extractors.utilities.types"]], "parquet": [[22, "module-graphnet.data.parquet"]], "parquet_dataconverter": [[23, "module-graphnet.data.parquet.parquet_dataconverter"]], "parquet_dataset": [[24, "module-graphnet.data.parquet.parquet_dataset"]], "pipeline": [[25, "module-graphnet.data.pipeline"]], "sqlite": [[26, "module-graphnet.data.sqlite"]], "sqlite_dataconverter": [[27, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_dataset": [[28, "module-graphnet.data.sqlite.sqlite_dataset"]], "sqlite_dataset_perturbed": [[29, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "sqlite_selection": [[30, "module-graphnet.data.sqlite.sqlite_selection"]], "sqlite_utilities": [[31, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[33, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[34, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[35, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[36, "module-graphnet.deployment"]], "i3modules": [[37, "module-graphnet.deployment.i3modules"]], "graphnet_module": [[38, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[39, "module-graphnet.models"]], "coarsening": [[40, "module-graphnet.models.coarsening"]], "components": [[41, "module-graphnet.models.components"]], "layers": [[42, "module-graphnet.models.components.layers"]], "pool": [[43, "module-graphnet.models.components.pool"]], "detector": [[44, "module-graphnet.models.detector"], [45, "module-graphnet.models.detector.detector"]], "icecube": [[46, "module-graphnet.models.detector.icecube"]], "prometheus": [[47, "module-graphnet.models.detector.prometheus"]], "gnn": [[48, "module-graphnet.models.gnn"], [52, "module-graphnet.models.gnn.gnn"]], "convnet": [[49, "module-graphnet.models.gnn.convnet"]], "dynedge": [[50, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[51, "module-graphnet.models.gnn.dynedge_jinst"]], "graph_builders": [[53, "module-graphnet.models.graph_builders"]], "model": [[54, "module-graphnet.models.model"]], "standard_model": [[55, "module-graphnet.models.standard_model"]], "task": [[56, "module-graphnet.models.task"], [59, "module-graphnet.models.task.task"]], "classification": [[57, "module-graphnet.models.task.classification"]], "reconstruction": [[58, "module-graphnet.models.task.reconstruction"]], "utils": [[60, "module-graphnet.models.utils"], [68, "module-graphnet.training.utils"]], "pisa": [[61, "module-graphnet.pisa"]], "fitting": [[62, "module-graphnet.pisa.fitting"]], "plotting": [[63, "module-graphnet.pisa.plotting"]], "training": [[64, "module-graphnet.training"]], "callbacks": [[65, "module-graphnet.training.callbacks"]], "labels": [[66, "module-graphnet.training.labels"]], "loss_functions": [[67, "module-graphnet.training.loss_functions"]], "weight_fitting": [[69, "module-graphnet.training.weight_fitting"]], "argparse": [[71, "module-graphnet.utilities.argparse"]], "config": [[72, "module-graphnet.utilities.config"]], "base_config": [[73, "module-graphnet.utilities.config.base_config"]], "configurable": [[74, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[75, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[76, "module-graphnet.utilities.config.model_config"]], "parsing": [[77, "module-graphnet.utilities.config.parsing"]], "training_config": [[78, "module-graphnet.utilities.config.training_config"]], "decorators": [[79, "module-graphnet.utilities.decorators"]], "filesys": [[80, "module-graphnet.utilities.filesys"]], "imports": [[81, "module-graphnet.utilities.imports"]], "logging": [[82, "module-graphnet.utilities.logging"]], "maths": [[83, "module-graphnet.utilities.maths"]], "src": [[84, "src"]], "Contributing": [[85, "contributing"]], "GitHub issues": [[85, "github-issues"]], "Pull requests": [[85, "pull-requests"]], "Conventions": [[85, "conventions"]], "Code quality": [[85, "code-quality"]], "Install": [[87, "install"]], "Installing with IceTray": [[87, "installing-with-icetray"]], "Installing stand-alone": [[87, "installing-stand-alone"]], "Running in Docker": [[87, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [6, "module-graphnet.data.dataloader"], [7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.extractors"], [9, "module-graphnet.data.extractors.i3extractor"], [10, "module-graphnet.data.extractors.i3featureextractor"], [11, "module-graphnet.data.extractors.i3genericextractor"], [12, "module-graphnet.data.extractors.i3hybridrecoextractor"], [13, "module-graphnet.data.extractors.i3pisaextractor"], [14, "module-graphnet.data.extractors.i3retroextractor"], [15, "module-graphnet.data.extractors.i3splinempeextractor"], [16, "module-graphnet.data.extractors.i3truthextractor"], [17, "module-graphnet.data.extractors.i3tumextractor"], [18, "module-graphnet.data.extractors.utilities"], [19, "module-graphnet.data.extractors.utilities.collections"], [20, "module-graphnet.data.extractors.utilities.frames"], [21, "module-graphnet.data.extractors.utilities.types"], [22, "module-graphnet.data.parquet"], [23, "module-graphnet.data.parquet.parquet_dataconverter"], [24, "module-graphnet.data.parquet.parquet_dataset"], [25, "module-graphnet.data.pipeline"], [26, "module-graphnet.data.sqlite"], [27, "module-graphnet.data.sqlite.sqlite_dataconverter"], [28, "module-graphnet.data.sqlite.sqlite_dataset"], [29, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [30, "module-graphnet.data.sqlite.sqlite_selection"], [31, "module-graphnet.data.sqlite.sqlite_utilities"], [32, "module-graphnet.data.utilities"], [33, "module-graphnet.data.utilities.parquet_to_sqlite"], [34, "module-graphnet.data.utilities.random"], [35, "module-graphnet.data.utilities.string_selection_resolver"], [36, "module-graphnet.deployment"], [37, "module-graphnet.deployment.i3modules"], [38, "module-graphnet.deployment.i3modules.graphnet_module"], [39, "module-graphnet.models"], [40, "module-graphnet.models.coarsening"], [41, "module-graphnet.models.components"], [42, "module-graphnet.models.components.layers"], [43, "module-graphnet.models.components.pool"], [44, "module-graphnet.models.detector"], [45, "module-graphnet.models.detector.detector"], [46, "module-graphnet.models.detector.icecube"], [47, "module-graphnet.models.detector.prometheus"], [48, "module-graphnet.models.gnn"], [49, "module-graphnet.models.gnn.convnet"], [50, "module-graphnet.models.gnn.dynedge"], [51, "module-graphnet.models.gnn.dynedge_jinst"], [52, "module-graphnet.models.gnn.gnn"], [53, "module-graphnet.models.graph_builders"], [54, "module-graphnet.models.model"], [55, "module-graphnet.models.standard_model"], [56, "module-graphnet.models.task"], [57, "module-graphnet.models.task.classification"], [58, "module-graphnet.models.task.reconstruction"], [59, "module-graphnet.models.task.task"], [60, "module-graphnet.models.utils"], [61, "module-graphnet.pisa"], [62, "module-graphnet.pisa.fitting"], [63, "module-graphnet.pisa.plotting"], [64, "module-graphnet.training"], [65, "module-graphnet.training.callbacks"], [66, "module-graphnet.training.labels"], [67, "module-graphnet.training.loss_functions"], [68, "module-graphnet.training.utils"], [69, "module-graphnet.training.weight_fitting"], [70, "module-graphnet.utilities"], [71, "module-graphnet.utilities.argparse"], [72, "module-graphnet.utilities.config"], [73, "module-graphnet.utilities.config.base_config"], [74, "module-graphnet.utilities.config.configurable"], [75, "module-graphnet.utilities.config.dataset_config"], [76, "module-graphnet.utilities.config.model_config"], [77, "module-graphnet.utilities.config.parsing"], [78, "module-graphnet.utilities.config.training_config"], [79, "module-graphnet.utilities.decorators"], [80, "module-graphnet.utilities.filesys"], [81, "module-graphnet.utilities.imports"], [82, "module-graphnet.utilities.logging"], [83, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "dataloader (class in graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[6, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[6, "module-graphnet.data.dataloader"]], "columnmissingexception": [[7, "graphnet.data.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset)": [[7, "graphnet.data.dataset.Dataset"]], "add_label() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.from_config"]], "graphnet.data.dataset": [[7, "module-graphnet.data.dataset"]], "path (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.truth_table"]], "graphnet.data.extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[11, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[12, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[13, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[13, "module-graphnet.data.extractors.i3pisaextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[14, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[14, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[15, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[15, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[16, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[16, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[17, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[17, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[18, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[19, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[19, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[19, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[19, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[20, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[20, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[20, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[20, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[21, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_type"]], "graphnet.data.parquet": [[22, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[23, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[23, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[23, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[23, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[23, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[24, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.parquet.parquet_dataset": [[24, "module-graphnet.data.parquet.parquet_dataset"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[24, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[25, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[25, "module-graphnet.data.pipeline"]], "graphnet.data.sqlite": [[26, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[27, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[28, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset": [[28, "module-graphnet.data.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[28, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[29, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[29, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_selection": [[30, "module-graphnet.data.sqlite.sqlite_selection"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[31, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[32, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[33, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[33, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[33, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[34, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[34, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[35, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[35, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[35, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[36, "module-graphnet.deployment"]], "graphnet.deployment.i3modules": [[37, "module-graphnet.deployment.i3modules"]], "configure() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.Configure"]], "dtypes (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.DTYPES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecube86 attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubedeepcore attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubeupgrade attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade.FEATURES"]], "graphnetmodulebase (class in graphnet.deployment.i3modules.graphnet_module)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase"]], "graphnetmoduleicecube86 (class in graphnet.deployment.i3modules.graphnet_module)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86"]], "graphnetmoduleicecubedeepcore (class in graphnet.deployment.i3modules.graphnet_module)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore"]], "graphnetmoduleicecubeupgrade (class in graphnet.deployment.i3modules.graphnet_module)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecube86 attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubedeepcore attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubeupgrade attribute)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade.I3FEATUREEXTRACTOR_CLASS"]], "physics() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[38, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.Physics"]], "graphnet.deployment.i3modules.graphnet_module": [[38, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[39, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[40, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[40, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[40, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[40, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[40, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[40, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[40, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[40, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[40, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[41, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[42, "graphnet.models.components.layers.DynEdgeConv"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[42, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components.layers": [[42, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[43, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[43, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[44, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[45, "graphnet.models.detector.detector.Detector"]], "features (graphnet.models.detector.detector.detector property)": [[45, "graphnet.models.detector.detector.Detector.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[45, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector.detector": [[45, "module-graphnet.models.detector.detector"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[45, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[45, "graphnet.models.detector.detector.Detector.nb_outputs"]], "icecube86 (class in graphnet.models.detector.icecube)": [[46, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[46, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[46, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[46, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[46, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[46, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[46, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[46, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[46, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[46, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "graphnet.models.detector.icecube": [[46, "module-graphnet.models.detector.icecube"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[46, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "prometheus (class in graphnet.models.detector.prometheus)": [[47, "graphnet.models.detector.prometheus.Prometheus"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[47, "graphnet.models.detector.prometheus.Prometheus.features"]], "graphnet.models.detector.prometheus": [[47, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn": [[48, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[49, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[49, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[49, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[50, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[50, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[50, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[51, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[51, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[51, "module-graphnet.models.gnn.dynedge_jinst"]], "gnn (class in graphnet.models.gnn.gnn)": [[52, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[52, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[52, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[52, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[52, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[53, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[53, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[53, "graphnet.models.graph_builders.KNNGraphBuilder"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[53, "graphnet.models.graph_builders.RadialGraphBuilder"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[53, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[53, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[53, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "graphnet.models.graph_builders": [[53, "module-graphnet.models.graph_builders"]], "model (class in graphnet.models.model)": [[54, "graphnet.models.model.Model"]], "fit() (graphnet.models.model.model method)": [[54, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.model.model method)": [[54, "graphnet.models.model.Model.forward"]], "from_config() (graphnet.models.model.model class method)": [[54, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[54, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[54, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[54, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[54, "graphnet.models.model.Model.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[54, "graphnet.models.model.Model.predict_as_dataframe"]], "save() (graphnet.models.model.model method)": [[54, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[54, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[55, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[55, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.predict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[55, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[56, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[57, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[57, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[57, "graphnet.models.task.classification.MulticlassClassificationTask"]], "graphnet.models.task.classification": [[57, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[57, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[57, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[58, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction": [[58, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[58, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[58, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[58, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[58, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[58, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[58, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[58, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[58, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[58, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[58, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[58, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[58, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[59, "graphnet.models.task.task.IdentityTask"]], "task (class in graphnet.models.task.task)": [[59, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.task method)": [[59, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[59, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task.task": [[59, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[59, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[59, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[59, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[59, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[60, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[60, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[60, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[60, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[61, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[62, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[62, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[62, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[62, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[62, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[62, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[62, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[63, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[63, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[63, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[63, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[64, "module-graphnet.training"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[65, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[65, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[65, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[65, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[65, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[65, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[65, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[65, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[65, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[65, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[65, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "direction (class in graphnet.training.labels)": [[66, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[66, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[66, "module-graphnet.training.labels"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[67, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[67, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[67, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[67, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[67, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[67, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[67, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[67, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[68, "graphnet.training.utils.collate_fn"]], "get_predictions() (in module graphnet.training.utils)": [[68, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[68, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[68, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[68, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[68, "graphnet.training.utils.save_results"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[69, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[69, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[69, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[69, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[69, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[70, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[71, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[71, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[71, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[71, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[71, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[71, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[71, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[72, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[73, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[73, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[73, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[73, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[73, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[73, "graphnet.utilities.config.base_config.BaseConfig.load"]], "configurable (class in graphnet.utilities.config.configurable)": [[74, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[74, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[74, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[74, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[74, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graphnet.utilities.config.dataset_config": [[75, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[75, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[75, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[76, "graphnet.utilities.config.model_config.ModelConfig"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[76, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[76, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[76, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[76, "module-graphnet.utilities.config.model_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[76, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[77, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[77, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[77, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[77, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[77, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[77, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[77, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[78, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[78, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[78, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[78, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[78, "module-graphnet.utilities.config.training_config"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[78, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[79, "module-graphnet.utilities.decorators"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[80, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[80, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[80, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[80, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[80, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[81, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[81, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[81, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[81, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[81, "graphnet.utilities.imports.requires_icecube"]], "loggermixin (class in graphnet.utilities.logging)": [[82, "graphnet.utilities.logging.LoggerMixin"]], "repeatfilter (class in graphnet.utilities.logging)": [[82, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.loggermixin method)": [[82, "graphnet.utilities.logging.LoggerMixin.critical"]], "debug() (graphnet.utilities.logging.loggermixin method)": [[82, "graphnet.utilities.logging.LoggerMixin.debug"]], "error() (graphnet.utilities.logging.loggermixin method)": [[82, "graphnet.utilities.logging.LoggerMixin.error"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[82, "graphnet.utilities.logging.RepeatFilter.filter"]], "get_formatters() (in module graphnet.utilities.logging)": [[82, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[82, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities.logging": [[82, "module-graphnet.utilities.logging"]], "info() (graphnet.utilities.logging.loggermixin method)": [[82, "graphnet.utilities.logging.LoggerMixin.info"]], "set_logging_level() (in module graphnet.utilities.logging)": [[82, "graphnet.utilities.logging.set_logging_level"]], "warn_once() (in module graphnet.utilities.logging)": [[82, "graphnet.utilities.logging.warn_once"]], "warning() (graphnet.utilities.logging.loggermixin method)": [[82, "graphnet.utilities.logging.LoggerMixin.warning"]], "eps_like() (in module graphnet.utilities.maths)": [[83, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[83, "module-graphnet.utilities.maths"]]}})