Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.data", "api/graphnet.data.extractors", "api/graphnet.data.extractors.utilities", "api/graphnet.data.parquet", "api/graphnet.data.sqlite", "api/graphnet.data.utilities", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.models", "api/graphnet.models.components", "api/graphnet.models.detector", "api/graphnet.models.gnn", "api/graphnet.models.task", "api/graphnet.pisa", "api/graphnet.training", "api/graphnet.utilities", "api/graphnet.utilities.config", "api/modules", "contribute", "examples/01_icetray/01_convert_i3_files", "examples/01_icetray/02_compare_sqlite_and_parquet", "examples/01_icetray/modules", "examples/02_data/01_read_dataset", "examples/02_data/02_plot_feature_distributions", "examples/02_data/03_convert_parquet_to_sqlite", "examples/02_data/modules", "examples/03_weights/01_fit_uniform_weights", "examples/03_weights/02_fit_bjoern_low_weights", "examples/03_weights/modules", "examples/04_training/01_train_model", "examples/04_training/02_train_model_without_configs", "examples/04_training/modules", "examples/05_pisa/01_fit_pisa_weights", "examples/05_pisa/02_make_pipeline_database", "examples/05_pisa/03_contour_fitting", "examples/05_pisa/04_contour_plotting", "examples/05_pisa/modules", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.data.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.utilities.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.models.rst", "api/graphnet.models.components.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.task.rst", "api/graphnet.pisa.rst", "api/graphnet.training.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.config.rst", "api/modules.rst", "contribute.md", "examples/01_icetray/01_convert_i3_files.rst", "examples/01_icetray/02_compare_sqlite_and_parquet.rst", "examples/01_icetray/modules.rst", "examples/02_data/01_read_dataset.rst", "examples/02_data/02_plot_feature_distributions.rst", "examples/02_data/03_convert_parquet_to_sqlite.rst", "examples/02_data/modules.rst", "examples/03_weights/01_fit_uniform_weights.rst", "examples/03_weights/02_fit_bjoern_low_weights.rst", "examples/03_weights/modules.rst", "examples/04_training/01_train_model.rst", "examples/04_training/02_train_model_without_configs.rst", "examples/04_training/modules.rst", "examples/05_pisa/01_fit_pisa_weights.rst", "examples/05_pisa/02_make_pipeline_database.rst", "examples/05_pisa/03_contour_fitting.rst", "examples/05_pisa/04_contour_plotting.rst", "examples/05_pisa/modules.rst", "index.rst", "install.md"], "titles": ["About", "graphnet package", "graphnet.data package", "graphnet.data.extractors package", "graphnet.data.extractors.utilities package", "graphnet.data.parquet package", "graphnet.data.sqlite package", "graphnet.data.utilities package", "graphnet.deployment package", "graphnet.deployment.i3modules package", "graphnet.models package", "graphnet.models.components package", "graphnet.models.detector package", "graphnet.models.gnn package", "graphnet.models.task package", "graphnet.pisa package", "graphnet.training package", "graphnet.utilities package", "graphnet.utilities.config package", "src", "Contribute", "01_convert_i3_files module", "02_compare_sqlite_and_parquet module", "01_icetray", "01_read_dataset module", "02_plot_feature_distributions module", "03_convert_parquet_to_sqlite module", "02_data", "01_fit_uniform_weights module", "02_fit_bjoern_low_weights module", "03_weights", "01_train_model module", "02_train_model_without_configs module", "04_training", "01_fit_pisa_weights module", "02_make_pipeline_database module", "03_contour_fitting module", "04_contour_plotting module", "05_pisa", "About", "Install"], "terms": {"graphnet": [0, 19, 20, 39, 40], "i": [0, 1, 2, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 39, 40], "an": [0, 2, 3, 4, 6, 7, 16, 17, 20, 39, 40], "open": [0, 6, 20, 39], "sourc": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 39], "python": [0, 1, 2, 3, 4, 20, 39, 40], "framework": [0, 39], "aim": [0, 1, 20, 39], "provid": [0, 1, 2, 3, 6, 10, 16, 20, 39, 40], "high": [0, 39], "qualiti": [0, 39], "user": [0, 3, 10, 16, 39, 40], "friendli": [0, 39], "end": [0, 1, 2, 39], "function": [0, 2, 4, 6, 7, 10, 11, 14, 15, 16, 17, 18, 39], "perform": [0, 2, 10, 11, 13, 14, 39], "reconstruct": [0, 1, 2, 3, 8, 10, 39], "task": [0, 1, 10, 16, 20, 39], "neutrino": [0, 1, 3, 6, 15, 39], "telescop": [0, 1, 39], "us": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 39, 40], "graph": [0, 1, 2, 6, 10, 11, 12, 16, 20, 39], "neural": [0, 1, 39], "network": [0, 1, 13, 39], "gnn": [0, 1, 2, 10, 15, 39, 40], "make": [0, 2, 6, 16, 18, 20, 39, 40], "fast": [0, 16, 39, 40], "easi": [0, 39], "train": [0, 1, 6, 7, 8, 10, 17, 18, 19, 39, 40], "complex": [0, 10, 39], "model": [0, 1, 6, 8, 15, 16, 17, 18, 19, 39, 40], "can": [0, 1, 2, 3, 6, 7, 10, 11, 15, 16, 18, 20, 39, 40], "event": [0, 1, 2, 6, 7, 10, 11, 14, 15, 16, 18, 39], "state": [0, 39], "art": [0, 39], "arbitrari": [0, 39], "detector": [0, 1, 3, 10, 39], "configur": [0, 1, 2, 10, 15, 17, 39], "infer": [0, 1, 2, 8, 10, 14, 39, 40], "time": [0, 2, 6, 10, 11, 12, 14, 17, 39, 40], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 18, 20, 39, 40], "order": [0, 4, 10, 39], "magnitud": [0, 39], "faster": [0, 16, 39], "than": [0, 2, 14, 16, 17, 39], "tradit": [0, 39], "techniqu": [0, 39], "common": [0, 1, 16, 17, 39], "ml": [0, 1, 39], "develop": [0, 1, 20, 39, 40], "physicist": [0, 1, 39], "wish": [0, 20, 39], "tool": [0, 1, 39], "research": [0, 39], "By": [0, 7, 10, 14, 39], "unit": [0, 2, 16, 17, 20, 39], "both": [0, 3, 14, 15, 39], "group": [0, 2, 11, 39], "increas": [0, 16, 39], "longev": [0, 39], "usabl": [0, 39], "individu": [0, 2, 6, 10, 11, 13, 39], "code": [0, 2, 3, 6, 18, 39], "contribut": [0, 39, 40], "from": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 15, 16, 17, 18, 20, 39, 40], "build": [0, 1, 10, 12, 18, 39], "gener": [0, 2, 3, 6, 14, 16, 39], "reusabl": [0, 39], "softwar": [0, 16, 39], "packag": [0, 19, 20, 39, 40], "base": [0, 2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 39], "engin": [0, 39], "best": [0, 20, 39], "practic": [0, 20, 39], "lower": [0, 15, 39], "technic": [0, 39], "threshold": [0, 10, 39], "most": [0, 1, 7, 39, 40], "scientif": [0, 1, 39], "problem": [0, 20, 39], "The": [0, 2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 39], "improv": [0, 1, 17, 39], "classif": [0, 1, 2, 10, 16, 39], "yield": [0, 13, 15, 16, 39], "veri": [0, 7, 39], "accur": [0, 39], "e": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 20, 39, 40], "g": [0, 1, 2, 3, 4, 6, 7, 10, 11, 14, 16, 20, 39, 40], "low": [0, 39], "energi": [0, 2, 3, 14, 16, 39], "observ": [0, 39], "icecub": [0, 1, 3, 4, 10, 17, 39, 40], "here": [0, 20, 39, 40], "implement": [0, 1, 2, 3, 5, 6, 11, 13, 16, 20, 39], "wa": [0, 2, 3, 39], "appli": [0, 2, 3, 6, 10, 11, 13, 18, 39], "oscil": [0, 15, 39], "lead": [0, 39], "signific": [0, 39], "angular": [0, 39], "rang": [0, 3, 14, 39], "relev": [0, 1, 4, 7, 17, 20, 39], "studi": [0, 39], "furthermor": [0, 39], "shown": [0, 39], "could": [0, 20, 39], "muon": [0, 3, 6, 39], "v": [0, 14, 39], "therebi": [0, 1, 6, 18, 39], "effici": [0, 39], "puriti": [0, 39], "sampl": [0, 2, 7, 39], "analysi": [0, 2, 39, 40], "similarli": [0, 4, 39], "ha": [0, 2, 3, 4, 5, 6, 13, 16, 17, 39, 40], "great": [0, 39], "point": [0, 3, 16, 39], "analys": [0, 8, 15, 39], "final": [0, 3, 6, 11, 16, 18, 39], "millisecond": [0, 39], "allow": [0, 2, 8, 10, 11, 16, 39, 40], "whole": [0, 39], "new": [0, 1, 11, 20, 39], "type": [0, 2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 39], "cosmic": [0, 39], "alert": [0, 39], "which": [0, 2, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 39, 40], "were": [0, 39], "previous": [0, 39], "unfeas": [0, 39], "possibl": [0, 3, 4, 20, 39], "identifi": [0, 2, 3, 6, 18, 39], "10": [0, 2, 10, 16, 17, 39], "tev": [0, 39], "monitor": [0, 39], "rate": [0, 16, 39], "direct": [0, 1, 14, 16, 39], "real": [0, 39], "thi": [0, 2, 3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 20, 39, 40], "enabl": [0, 2, 17, 39], "first": [0, 3, 16, 20, 39], "ever": [0, 39], "despit": [0, 39], "larg": [0, 16, 39], "background": [0, 39], "origin": [0, 15, 39], "compris": [0, 39], "number": [0, 2, 6, 7, 11, 12, 13, 14, 16, 17, 39], "modul": [0, 8, 19, 23, 27, 30, 33, 38, 39], "necessari": [0, 4, 6, 20, 39], "workflow": [0, 39], "ingest": [0, 1, 2, 12, 39], "raw": [0, 39], "data": [0, 1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 39, 40], "domain": [0, 1, 2, 8, 39], "specif": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 16, 20, 39, 40], "format": [0, 1, 2, 3, 4, 5, 6, 15, 18, 20, 39, 40], "deploi": [0, 1, 8, 39], "chain": [0, 1, 8, 10, 39, 40], "illustr": [0, 20, 39], "figur": [0, 15, 39], "below": [0, 7, 15, 16, 20, 39, 40], "level": [0, 2, 3, 6, 10, 11, 17, 39, 40], "overview": [0, 39], "typic": [0, 4, 39], "convert": [0, 1, 2, 4, 5, 6, 7, 39, 40], "industri": [0, 2, 39], "standard": [0, 2, 6, 7, 10, 17, 20, 39], "intermedi": [0, 1, 2, 5, 6, 13, 39, 40], "file": [0, 1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 17, 18, 39, 40], "read": [0, 2, 4, 5, 6, 10, 12, 13, 14, 39, 40], "simpl": [0, 10, 39], "physic": [0, 1, 3, 4, 6, 8, 10, 14, 39], "orient": [0, 10, 39], "compon": [0, 1, 10, 39], "manag": [0, 3, 16, 39], "experi": [0, 1, 16, 39], "log": [0, 1, 14, 16, 19, 39, 40], "deploy": [0, 1, 19, 39], "modular": [0, 10, 39], "subclass": [0, 10, 39], "torch": [0, 2, 5, 6, 10, 11, 13, 17, 39, 40], "nn": [0, 10, 11, 13, 39], "mean": [0, 2, 5, 6, 10, 13, 16, 18, 39], "onli": [0, 1, 2, 6, 10, 11, 14, 15, 16, 17, 18, 39, 40], "need": [0, 2, 4, 10, 16, 39, 40], "import": [0, 1, 3, 6, 10, 19, 39], "few": [0, 10, 20, 39], "exist": [0, 2, 3, 6, 10, 18, 39], "purpos": [0, 10, 16, 39], "built": [0, 10, 39], "them": [0, 1, 2, 4, 10, 13, 14, 15, 39, 40], "togeth": [0, 10, 39], "form": [0, 10, 14, 39], "complet": [0, 10, 39], "extend": [0, 1, 39], "suit": [0, 39], "through": [0, 16, 39], "layer": [0, 1, 10, 13, 14, 39], "connect": [0, 6, 10, 12, 16, 39], "etc": [0, 16, 39], "optimis": [0, 1, 39], "differ": [0, 2, 3, 6, 10, 16, 20, 39, 40], "track": [0, 3, 14, 20, 39], "These": [0, 20, 39], "prepar": [0, 16, 39], "satisfi": [0, 39], "o": [0, 14, 39], "load": [0, 1, 2, 3, 7, 10, 17, 18, 39], "requir": [0, 3, 6, 14, 16, 39, 40], "when": [0, 2, 4, 6, 11, 13, 20, 39, 40], "batch": [0, 2, 10, 11, 13, 16, 17, 39], "do": [0, 16, 18, 20, 39, 40], "predict": [0, 1, 2, 3, 10, 13, 14, 16, 39], "either": [0, 2, 16, 39, 40], "contain": [0, 1, 2, 3, 4, 5, 6, 10, 13, 14, 16, 17, 39, 40], "imag": [0, 1, 6, 20, 39, 40], "portabl": [0, 39], "depend": [0, 39, 40], "free": [0, 16, 39], "split": [0, 10, 39], "up": [0, 2, 20, 39, 40], "abov": [0, 2, 7, 15, 16, 39, 40], "interfac": [0, 15, 39, 40], "block": [0, 1, 39], "pre": [0, 6, 12, 20, 39], "directli": [0, 2, 3, 17, 39], "while": [0, 3, 16, 39], "continu": [0, 16, 39], "expand": [0, 39], "": [0, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 39, 40], "capabl": [0, 39], "conveni": [1, 20, 40], "collabor": 1, "solv": [1, 20], "It": [1, 4, 6, 20], "leverag": 1, "advanc": [1, 11], "machin": [1, 40], "learn": [1, 16, 40], "without": [1, 15, 16, 40], "have": [1, 2, 3, 6, 7, 11, 14, 16, 20, 40], "expert": 1, "themselv": [1, 18], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 2, 3, 5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 20, 40], "streamlin": 1, "process": [1, 2, 3, 6, 12, 13, 20, 40], "transform": [1, 11, 14, 16], "extens": [1, 17], "basic": 1, "across": [1, 2, 4, 6, 7, 10, 11, 16, 17, 18], "variou": 1, "easili": 1, "architectur": [1, 10, 13], "main": [1, 2, 10, 13, 20, 40], "featur": [1, 2, 3, 5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 20], "i3": [1, 2, 3, 4, 5, 6, 7, 17, 40], "more": [1, 2, 6, 7, 17, 18], "index": [1, 2, 4, 5, 6, 10, 11, 16], "sqlite": [1, 2, 7, 40], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 2, 3, 10, 12, 13, 14, 16, 18], "awai": 1, "detail": [1, 40], "expos": 1, "physicst": 1, "what": [1, 20], "i3modul": [1, 8], "includ": [1, 6, 10, 15, 16, 18, 20], "docker": 1, "run": [1, 2, 7], "containeris": 1, "fashion": 1, "extractor": [1, 2, 5, 6], "i3extractor": [1, 2, 5, 6], "i3featureextractor": [1, 2, 6], "i3genericextractor": [1, 2, 6], "i3hybridrecoextractor": [1, 2], "i3pisaextractor": [1, 2], "i3retroextractor": [1, 2], "i3splinempeextractor": [1, 2], "i3truthextractor": [1, 2], "i3tumextractor": [1, 2], "parquet": [1, 2, 7, 40], "parquet_dataconvert": [1, 2], "parquet_dataset": [1, 2], "sqlite_dataconvert": [1, 2], "sqlite_dataset": [1, 2], "sqlite_dataset_perturb": [1, 2], "sqlite_select": [1, 2], "sqlite_util": [1, 2], "util": [1, 2, 3, 6, 19], "parquet_to_sqlit": [1, 2], "random": [1, 2, 6, 18], "string_selection_resolv": [1, 2], "deepcor": [1, 2, 3, 12], "icecube86": [1, 2, 10, 12], "kaggl": [1, 2, 12], "prometheu": [1, 2, 10], "upgrad": [1, 2, 3, 12, 40], "truth": [1, 2, 3, 5, 6, 15, 16, 17, 18], "dataconvert": [1, 5, 6, 19], "__call__": [1, 2, 3, 16], "__init__": [1, 2, 3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "_extract_data": [1, 2], "_iterate_over_batches_of_fil": [1, 2], "_save_filenam": [1, 2], "_update_shared_vari": [1, 2], "execut": [1, 2, 6], "file_suffix": [1, 2, 5, 6], "get_map_funct": [1, 2], "merge_fil": [1, 2, 5, 6], "save_data": [1, 2, 5, 6], "fileset": [1, 2], "gcd_file": [1, 2, 3], "i3_fil": [1, 2, 3], "cache_output_fil": [1, 2], "init_global_index": [1, 2], "dataload": [1, 6, 10, 16, 17, 18, 19], "from_dataset_config": [1, 2], "collate_fn": [1, 2, 16], "do_shuffl": [1, 2], "dataset": [1, 5, 6, 7, 17, 18, 19], "columnmissingexcept": [1, 2], "__getitem__": [1, 2, 6], "__len__": [1, 2, 17], "_check_missing_column": [1, 2], "_construct_dataset_from_list_of_str": [1, 2], "_construct_datasets_from_dict": [1, 2], "_create_graph": [1, 2], "_get_all_indic": [1, 2], "_get_dbang_label": [1, 2], "_get_event_index": [1, 2], "_get_label": [1, 2], "_init": [1, 2], "_post_init": [1, 2], "_queri": [1, 2], "_remove_missing_column": [1, 2], "_resolve_string_selection_to_indic": [1, 2], "add_label": [1, 2], "concaten": [1, 2, 4, 13], "from_config": [1, 2, 10, 17, 18], "path": [1, 2, 3, 5, 6, 7, 10, 15, 17, 18, 40], "query_t": [1, 2, 5, 6], "truth_tabl": [1, 2, 5, 6, 15, 16, 17, 18], "pipelin": [1, 19], "insqlitepipelin": [1, 2], "graphnet_modul": [1, 8], "pool": [1, 2, 10, 13], "convnet": [1, 10], "dynedg": [1, 10], "dynedge_jinst": [1, 10], "coarsen": [1, 11, 19], "attributecoarsen": [1, 10], "_perform_clust": [1, 10], "_additional_featur": [1, 10], "_transfer_attribut": [1, 10], "forward": [1, 10, 11, 12, 13, 14, 16], "reduce_opt": [1, 10], "customdomcoarsen": [1, 10], "domandtimewindowcoarsen": [1, 10], "domcoarsen": [1, 10], "unbatch_edge_index": [1, 10], "graph_build": [1, 12, 19], "euclideangraphbuild": [1, 10], "graphbuild": [1, 10, 12], "knngraphbuild": [1, 10], "radialgraphbuild": [1, 10], "fit": [1, 10, 16, 17, 18, 19], "load_state_dict": [1, 10], "predict_as_datafram": [1, 10], "save": [1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 17, 18, 40], "save_state_dict": [1, 10], "standard_model": [1, 19], "standardmodel": [1, 10], "compute_loss": [1, 10, 14], "configure_optim": [1, 10], "shared_step": [1, 10], "training_step": [1, 10], "validation_step": [1, 10], "calculate_distance_matrix": [1, 10], "calculate_xyzt_homophili": [1, 10], "knn_graph_batch": [1, 10], "pisa": [1, 2, 3, 17, 19, 40], "contourfitt": [1, 15], "_check_input": [1, 15], "_fit_contour": [1, 15], "_parallel_fit_1d_contour": [1, 15], "_parallel_fit_2d_contour": [1, 15], "fit_1d_contour": [1, 15], "fit_2d_contour": [1, 15], "weightfitt": [1, 15, 16], "fit_weight": [1, 15, 16], "config_updat": [1, 15], "plot": [1, 19], "plot_1d_contour": [1, 15], "plot_2d_contour": [1, 15], "read_entri": [1, 15], "callback": [1, 10, 19], "piecewiselinearlr": [1, 16], "get_lr": [1, 16], "progressbar": [1, 16], "get_metr": [1, 16], "init_predict_tqdm": [1, 16], "init_test_tqdm": [1, 16], "init_train_tqdm": [1, 16], "init_validation_tqdm": [1, 16], "on_train_epoch_end": [1, 16], "on_train_epoch_start": [1, 16], "label": [1, 2, 13, 14, 15, 19], "loss_funct": [1, 14, 19], "binarycrossentropyloss": [1, 16], "crossentropyloss": [1, 16], "_forward": [1, 10, 12, 14, 16], "euclideandistanceloss": [1, 16], "logcmk": [1, 16], "backward": [1, 16], "logcoshloss": [1, 16], "_log_cosh": [1, 16], "lossfunct": [1, 14, 16], "mseloss": [1, 16], "rmseloss": [1, 16], "vonmisesfisher2dloss": [1, 16], "vonmisesfisher3dloss": [1, 16], "vonmisesfisherloss": [1, 16], "_evalu": [1, 16], "log_cmk": [1, 16], "log_cmk_approx": [1, 16], "log_cmk_exact": [1, 16], "get_predict": [1, 16], "make_dataload": [1, 16], "make_train_validation_dataload": [1, 16], "save_result": [1, 16], "weight_fit": [1, 19], "bjoernlow": [1, 16], "_fit_weight": [1, 16], "uniform": [1, 16], "_get_truth": [1, 16], "config": [1, 2, 7, 15, 16, 17], "base_config": [1, 17], "dataset_config": [1, 17], "model_config": [1, 17], "pars": [1, 3, 7, 15, 17], "training_config": [1, 17], "argpars": [1, 19], "argumentpars": [1, 17], "standard_argu": [1, 17], "with_standard_argu": [1, 17], "option": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 40], "__repr__": [1, 17], "pop_default": [1, 17], "decor": [1, 2, 19], "filesi": [1, 19], "find_i3_fil": [1, 17], "has_extens": [1, 17], "is_gcd_fil": [1, 17], "is_i3_fil": [1, 17], "has_icecube_packag": [1, 17], "has_pisa_packag": [1, 17], "has_torch_packag": [1, 17], "requires_icecub": [1, 17], "loggermixin": [1, 2, 3, 7, 10, 16, 17, 18], "_get_logg": [1, 17], "critic": [1, 15, 17], "debug": [1, 17], "error": [1, 2, 3, 6, 16, 17, 20], "info": [1, 17, 40], "warn": [1, 17], "repeatfilt": [1, 17], "filter": [1, 17], "get_formatt": [1, 17], "get_logg": [1, 17, 40], "set_logging_level": [1, 17], "warn_onc": [1, 17], "math": [1, 19], "eps_lik": [1, 17], "global": [1, 2, 10, 13], "collect": [2, 3, 16, 17], "frame": [2, 3, 6], "_load_gcd_data": [2, 3], "name": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 20, 40], "set_fil": [2, 3], "i3extractorcollect": [2, 3], "i3featureextractoricecube86": [2, 3], "i3featureextractoricecubedeepcor": [2, 3], "i3featureextractoricecubeupgrad": [2, 3], "i3pulsenoisetruthflagicecubeupgrad": [2, 3], "_cast_mc_tre": [2, 3], "_cast_trigg": [2, 3], "_extract_per_pulse_attribut": [2, 3], "_extract_pulse_series_map": [2, 3], "_flatten_result": [2, 3], "_flatten_result_mctre": [2, 3], "_get_kei": [2, 3], "i3galacticplanehybridrecoextractor": [2, 3], "_try_get_kei": [2, 3], "i3splinempeicextractor": [2, 3], "_find_data_typ": [2, 3], "_get_primary_particle_interaction_type_and_elast": [2, 3], "_get_primary_track_energy_and_inelast": [2, 3], "_muon_stop": [2, 3], "parquetdataconvert": [2, 5], "parquetdataset": [2, 5], "_format_dictionary_result": [2, 5], "sqlitedataconvert": [2, 6, 40], "_extract_everyth": [2, 6], "_extract_table_nam": [2, 6], "_merge_temporary_databas": [2, 6], "_submit_to_databas": [2, 6], "any_pulsemap_is_non_empti": [2, 6], "construct_datafram": [2, 6], "is_mc_tre": [2, 6], "is_pulse_map": [2, 6], "sqlitedataset": [2, 6], "_close_connect": [2, 6], "_establish_connect": [2, 6], "sqlitedatasetperturb": [2, 6], "get_desired_event_numb": [2, 6], "get_equal_proportion_neutrino_indic": [2, 6], "get_even_dbang_select": [2, 6], "get_even_signal_background_indici": [2, 6], "get_even_track_cascade_indici": [2, 6], "attach_index": [2, 6], "create_t": [2, 6], "create_table_and_save_to_sql": [2, 6], "database_exist": [2, 6], "database_table_exist": [2, 6], "run_sql_cod": [2, 6], "save_to_sql": [2, 6], "parquettosqliteconvert": [2, 7], "_save_config": [2, 7], "pairwise_shuffl": [2, 7], "stringselectionresolv": [2, 7], "_get_index_cache_path": [2, 7], "_get_random_events_from_select": [2, 7], "_get_values_cache_path": [2, 7], "_parse_variable_nam": [2, 7], "resolv": [2, 7], "class": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "object": [2, 3, 4, 6, 11, 12, 14, 15, 16, 17], "namespac": [2, 10], "work": [2, 4, 20, 40], "dom_x": [2, 12], "dom_i": [2, 12], "dom_z": [2, 12], "dom_tim": [2, 12], "charg": [2, 3, 12, 16], "rde": [2, 12], "pmt_area": [2, 12], "x": [2, 3, 10, 11, 12, 13, 14, 15, 16], "y": [2, 3, 10, 12, 15, 40], "z": [2, 3, 10, 12, 40], "auxiliari": [2, 12], "sensor_pos_x": [2, 12], "sensor_pos_i": [2, 12], "sensor_pos_z": [2, 12], "t": [2, 3, 4, 6, 12, 15, 16, 40], "string": [2, 4, 6, 7, 11, 12, 17, 18], "pmt_number": [2, 12], "dom_numb": [2, 12], "pmt_dir_x": [2, 12], "pmt_dir_i": [2, 12], "pmt_dir_z": [2, 12], "dom_typ": [2, 12], "energy_track": 2, "position_x": [2, 3], "position_i": [2, 3], "position_z": [2, 3], "azimuth": [2, 14, 16], "zenith": [2, 14, 16], "pid": [2, 7, 18], "elast": [2, 3], "sim_typ": [2, 3], "interaction_typ": 2, "interaction_tim": 2, "inelast": [2, 3, 14], "stopped_muon": 2, "injection_energi": 2, "injection_typ": 2, "injection_interaction_typ": 2, "injection_zenith": 2, "injection_azimuth": 2, "injection_bjorkenx": 2, "injection_bjorkeni": 2, "injection_position_x": 2, "injection_position_i": 2, "injection_position_z": 2, "injection_column_depth": 2, "primary_lepton_1_typ": 2, "primary_hadron_1_typ": 2, "primary_lepton_1_position_x": 2, "primary_lepton_1_position_i": 2, "primary_lepton_1_position_z": 2, "primary_hadron_1_position_x": 2, "primary_hadron_1_position_i": 2, "primary_hadron_1_position_z": 2, "primary_lepton_1_direction_theta": 2, "primary_lepton_1_direction_phi": 2, "primary_hadron_1_direction_theta": 2, "primary_hadron_1_direction_phi": 2, "primary_lepton_1_energi": 2, "primary_hadron_1_energi": 2, "total_energi": 2, "outdir": [2, 5, 6, 7, 15], "gcd_rescu": [2, 5, 6, 17], "none": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "nb_files_to_batch": [2, 5, 6], "sequential_batch_pattern": [2, 5, 6], "input_file_batch_pattern": [2, 5, 6], "worker": [2, 5, 6, 7, 15, 17], "1": [2, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 18, 40], "index_column": [2, 5, 6, 7, 10, 15, 16, 17, 18], "event_no": [2, 5, 6, 7, 10, 15, 16, 18], "icetray_verbos": [2, 5, 6], "0": [2, 3, 5, 6, 7, 10, 11, 13, 15, 16, 18, 40], "abc": [2, 3, 10, 16, 18], "paramet": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "list": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "str": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "default": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "int": [2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "directori": [2, 7, 15, 17], "union": [2, 3, 4, 5, 6, 7, 10, 11, 13, 14, 16, 17, 18], "One": [2, 7, 15], "within": [2, 3, 10, 11, 13], "should": [2, 3, 4, 6, 7, 11, 16, 18, 20, 40], "return": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "construct": [2, 3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18], "regular": [2, 4], "express": [2, 10, 16], "accord": [2, 5, 6, 10, 11], "match": [2, 16, 17], "certain": [2, 7, 15], "pattern": 2, "wildcard": 2, "same": [2, 3, 4, 6, 10, 11, 14, 16, 18], "output": [2, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18, 40], "input": [2, 6, 7, 10, 12, 13, 14, 15], "replac": 2, "period": 2, "special": [2, 3, 10], "interpret": [2, 14], "liter": 2, "ani": [2, 3, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 18, 40], "charact": 2, "regex": 2, "For": [2, 4, 16], "instanc": [2, 3, 4, 5, 6, 10, 15, 16, 17, 18, 40], "A": [2, 3, 10, 11, 15, 16, 40], "_": 2, "9": 2, "5": [2, 7, 17, 40], "zst": 2, "find": [2, 17], "whose": [2, 3], "one": [2, 6, 10, 11, 17, 18, 20, 40], "capit": 2, "letter": 2, "follow": [2, 3, 10, 13, 16, 20, 40], "underscor": 2, "five": 2, "upgrade_genie_step4_141020_a_000000": 2, "upgrade_genie_step4_141020_a_000001": 2, "upgrade_genie_step4_141020_a_000008": 2, "upgrade_genie_step4_141020_a_000009": 2, "would": [2, 20], "upgrade_genie_step4_141020_a_00000x": 2, "suffix": 2, "upgrade_genie_step4_141020_a_000010": 2, "separ": [2, 4, 16, 40], "upgrade_genie_step4_141020_a_00001x": 2, "extract": [2, 3, 4, 6, 7, 14, 16], "singl": [2, 3, 11, 13, 16, 18], "If": [2, 3, 5, 6, 10, 15, 16, 20, 40], "strategi": 2, "each": [2, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17], "correspond": [2, 3, 4, 6, 7, 13, 14, 16, 17, 40], "method": [2, 3, 4, 5, 6, 10, 11, 14, 16], "distinct": 2, "rather": [2, 14], "send": 2, "back": 2, "gcd": [2, 3, 4, 7, 17], "ordereddict": [2, 5, 6], "arg": [2, 14, 16, 17, 18], "iter": 2, "over": 2, "result": [2, 3, 5, 6, 11, 15, 16, 18, 40], "tupl": [2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17], "csv": [2, 7, 15, 18], "updat": [2, 10, 14, 15, 16], "self": [2, 15, 18], "_index": 2, "_output_fil": 2, "set": [2, 3, 14, 15, 17, 20], "multiprocess": [2, 40], "In": [2, 18, 40], "case": [2, 3, 6, 11, 14, 40], "been": [2, 5, 16, 20], "abl": [2, 4, 40], "write": [2, 40], "we": [2, 4, 7, 20, 40], "get": [2, 3, 4, 6, 15, 16, 17, 40], "sync": 2, "inherit": [2, 3, 4, 12, 14, 16, 17], "properti": [2, 3, 4, 11, 12, 13, 14, 18], "nb_file": 2, "map": [2, 3, 6], "pure": [2, 3, 4], "output_fil": [2, 5, 6], "input_fil": [2, 3, 5, 6], "merg": [2, 5, 6, 15, 16, 40], "current": [2, 3, 5, 6, 7, 16, 20, 40], "rais": [2, 3, 5, 10], "notimplementederror": [2, 5], "backend": [2, 5, 6], "question": 2, "process_method": 2, "cach": [2, 7], "typevar": 2, "f": [2, 11], "bound": [2, 15], "callabl": [2, 4, 11, 14, 16, 17, 18], "global_index": 2, "avail": [2, 3, 17], "synchron": 2, "batch_siz": [2, 10, 16], "shuffl": [2, 7, 16], "num_work": [2, 16], "persistent_work": [2, 16], "true": [2, 6, 7, 10, 15, 16], "kwarg": [2, 11, 14, 16, 17, 18], "bool": [2, 3, 4, 6, 7, 10, 13, 15, 16, 17, 18], "0x7f5c3e78b370": 2, "classmethod": [2, 10, 16, 18], "select": [2, 5, 6, 7, 16, 17, 18, 20], "datasetconfig": [2, 7, 17, 18], "dict": [2, 3, 4, 5, 6, 10, 12, 15, 16, 17, 18], "remov": [2, 16, 17], "less": [2, 16], "two": [2, 3, 13, 15, 16], "dom": [2, 6, 10, 11, 16], "hit": [2, 16], "occur": [2, 16], "product": [2, 16], "selection_nam": 2, "check": [2, 3, 4, 6, 15, 17, 18, 20, 40], "whether": [2, 3, 4, 6, 10, 13, 15, 16, 17, 18], "except": [2, 3], "indic": [2, 3, 6, 7, 11, 16, 17, 20], "miss": 2, "column": [2, 5, 6, 10, 15, 16], "pulsemap": [2, 3, 5, 6, 16, 17, 18], "node_truth": [2, 5, 6, 16, 17, 18], "node_truth_t": [2, 5, 6, 16, 17, 18], "string_select": [2, 5, 6, 16, 17, 18], "dtype": [2, 5, 6, 17], "float32": [2, 5, 6], "loss_weight_t": [2, 5, 6, 16, 17, 18], "loss_weight_column": [2, 5, 6, 16, 17, 18], "loss_weight_default_valu": [2, 5, 6, 17, 18], "seed": [2, 5, 6, 7, 16, 17, 18], "float": [2, 3, 5, 6, 7, 10, 13, 15, 16, 18], "sequential_index": [2, 5, 6], "puls": [2, 3, 4, 6, 10, 11], "seri": [2, 3, 4, 6], "node": [2, 6, 10, 11, 13, 14], "multipl": [2, 3, 6, 16, 18], "store": [2, 3, 6, 15, 16], "ad": [2, 3, 6, 13, 15], "attribut": [2, 3, 6, 10, 14], "uniqu": [2, 6, 7, 18], "indici": [2, 4, 6, 7, 16], "tabl": [2, 3, 5, 6, 15, 16], "inform": [2, 3, 6, 15, 16], "subset": [2, 6, 11, 13], "given": [2, 6, 11, 16], "queri": [2, 3, 5, 6, 7], "pass": [2, 6, 10, 11, 13, 14, 16, 20], "tensor": [2, 6, 10, 11, 13, 14, 16, 17], "per": [2, 3, 6, 11, 14, 16], "loss": [2, 6, 10, 14, 16, 17], "weight": [2, 6, 14, 15, 16, 18, 40], "also": [2, 6, 7, 17, 18], "assign": [2, 6, 7, 10, 11, 20], "note": [2, 6, 15, 18], "valu": [2, 3, 4, 6, 11, 15, 16, 17, 18], "specifi": [2, 6, 7, 10, 14, 15, 16, 17, 40], "That": [2, 6, 13, 14, 16], "ignor": [2, 4, 6], "10000": [2, 7], "20": [2, 7, 17], "entri": [2, 3, 13, 15, 17, 18], "loss_weight": [2, 14], "creat": [2, 6, 18, 20, 40], "pytorch": [2, 5, 6, 16, 40], "No": 2, "preprocess": [2, 12], "stage": 2, "just": [2, 11, 40], "adjanc": 2, "impos": 2, "edge_attr": 2, "edge_weight": 2, "associ": [2, 3, 14, 16], "weigh": 2, "_index_column": 2, "truth_dict": 2, "doubl": 2, "bang": 2, "dictionari": [2, 3, 4, 5, 6, 15, 18], "intern": 2, "represent": [2, 4, 11, 17], "implemen": 2, "after": [2, 11, 13, 16, 17], "constructor": [2, 3], "length": [2, 4, 15, 16], "Their": 2, "constitu": 2, "sequenti": 2, "len": 2, "_may_": 2, "_indic": 2, "respect": 2, "present": [2, 17], "_featur": 2, "_truth": 2, "expect": [2, 6, 7, 15], "panda": [2, 6, 7, 16], "datafram": [2, 6, 7, 10, 15, 16], "compat": [2, 7], "syntax": [2, 7, 12, 14, 16], "mai": [2, 7, 12, 40], "fix": [2, 7], "randomli": [2, 6, 7, 18], "kei": [2, 3, 4, 6, 11, 16, 18], "fn": [2, 4, 18], "add": [2, 13, 17, 20, 40], "custom": [2, 16], "defin": [2, 7, 11, 18], "concatdataset": [2, 18], "some": [2, 3, 5, 6], "out": [2, 10, 13, 14, 16, 17, 20, 40], "entir": [2, 10], "befor": [2, 6, 13, 14, 16], "scalar": [2, 10, 16], "element": [2, 4, 10, 18], "module_dict": 2, "devic": 2, "retro_table_nam": 2, "retro": [2, 3], "100": [2, 3, 16, 40], "n_worker": [2, 15], "pipeline_nam": 2, "databas": [2, 3, 6, 7, 15, 16, 40], "chunk_siz": 2, "1000000": 2, "field": [2, 3, 7, 15, 16], "_module_dict": 2, "target": [2, 14, 16, 17, 18], "slice": [2, 11, 13], "chunk": 2, "size": [2, 11, 13, 17], "control": [2, 16], "memori": 2, "usag": [2, 17], "initialis": [2, 18], "gnn_module_for_energy_regress": 2, "modulelist": 2, "comput": [2, 10, 14, 16], "alreadi": [2, 3, 6, 17, 40], "prompt": 2, "avoid": [2, 6, 16, 20], "overwrit": [2, 16], "i3fram": [3, 4], "flatten_nested_dictionari": [3, 4], "serialis": [3, 4, 18], "transpose_list_of_dict": [3, 4], "frame_is_montecarlo": [3, 4], "frame_is_nois": [3, 4], "get_om_keys_and_pulseseri": [3, 4], "break_cyclic_recurs": [3, 4], "cast_object_to_pure_python": [3, 4], "cast_pulse_series_to_pure_python": [3, 4], "get_member_vari": [3, 4], "is_boost_class": [3, 4], "is_boost_enum": [3, 4], "is_icecube_class": [3, 4], "is_method": [3, 4], "is_typ": [3, 4], "icetrai": [3, 4, 17], "keep": 3, "proven": 3, "geospati": 3, "refer": [3, 18], "being": [3, 14], "member": [3, 4, 17, 18], "treat": 3, "86": [3, 12], "p": [3, 4, 6, 16], "nois": [3, 4, 6], "flag": 3, "exclude_kei": 3, "dynam": [3, 11, 13], "call": [3, 4, 6, 11, 15, 16, 17], "tri": [3, 4], "automat": [3, 16, 20], "cast": [3, 4], "done": [3, 11, 17, 20], "recurs": [3, 4, 17, 18], "look": [3, 40], "variabl": [3, 4, 7, 10, 13, 16], "signatur": [3, 4], "similar": [3, 4, 40], "handl": [3, 16, 17], "hand": 3, "mc": [3, 6], "tree": [3, 6], "trigger": 3, "other": [3, 6, 16, 20], "exclud": [3, 7, 40], "valueerror": [3, 10], "obj": [3, 4, 18], "i3mctre": 3, "dataclass": [3, 4], "hierarchi": 3, "i3triggerhierarchi": 3, "i3mapkeyuint": 3, "like": [3, 4, 10, 11, 12, 14, 16, 17, 20], "om": [3, 4], "integ": [3, 6, 13, 16], "vector": [3, 10, 11, 16], "flatten": [3, 4], "otherwis": [3, 4, 16], "possibli": [3, 40], "ones": [3, 40], "explicitli": 3, "hybrid": 3, "dnn_hybrid": 3, "galatict": 3, "plane": [3, 16], "tum": 3, "dnn": 3, "reconcstruct": 3, "quantiti": [3, 10, 14], "pisa_depend": 3, "padding_valu": 3, "default_valu": 3, "splinemp": 3, "spline_mpe_": 3, "border": 3, "ndarrai": [3, 16], "arrai": [3, 4], "boundari": 3, "volum": 3, "coordin": [3, 10], "particl": [3, 6, 16], "start": [3, 20, 40], "stop": [3, 17], "hard": 3, "determin": [3, 15], "mont": [3, 4], "carlo": [3, 4], "simul": [3, 4], "primari": [3, 6], "interact": [3, 14], "handler": 3, "doe": [3, 4, 18], "thing": 3, "catch": 3, "issu": 3, "relat": [3, 7, 17], "where": [3, 6, 16], "doesn": [3, 6], "record": [3, 17], "pad": 3, "mciniceprimari": 3, "encod": 3, "2": [3, 4, 10, 11, 13, 14, 15, 16, 18], "neutral": 3, "neither": 3, "total": 3, "shrink_horizont": 3, "shrink_vert": 3, "calcul": [3, 10, 13, 16], "posit": [3, 11, 14], "analogouo": 3, "vertex": [3, 14], "under": [3, 6], "second": 3, "axi": [3, 15], "min": [3, 10, 11, 13], "max": [3, 10, 11, 13, 16, 17], "depth": 3, "see": [3, 10, 16, 20, 40], "exampl": [3, 4, 7, 10, 11, 16, 18, 40], "shrink": 3, "further": 3, "exclus": 3, "zone": 3, "meter": 3, "height": [3, 15], "well": [3, 10, 20], "boolean": 3, "chosen": [3, 10], "fiduci": 3, "tum_dnn": 3, "recoconstruct": 3, "manipul": 4, "parent_kei": 4, "__": 4, "nest": 4, "non": [4, 6, 16, 17], "d": [4, 16, 20], "b": [4, 10, 11], "c": [4, 11, 16, 40], "a__b": 4, "applic": 4, "combin": [4, 14, 18], "parent": 4, "nester": 4, "json": [4, 18], "therefor": 4, "outer": 4, "de": 4, "transpos": 4, "pulseseri": 4, "calibr": 4, "gcd_dict": 4, "i3calibr": 4, "indicesfor": 4, "ensur": [4, 7, 16, 20, 40], "isn": 4, "take": [4, 6, 11, 20], "mainli": 4, "cannot": 4, "trivial": [4, 14], "try": 4, "support": [4, 20, 40], "equival": 4, "its": [4, 6], "itself": [4, 14], "deem": 4, "wai": [4, 7, 20, 40], "optic": 4, "found": [4, 16], "return_discard": 4, "fals": [4, 10, 13, 15, 16, 18], "valid": [4, 7, 10, 14, 16, 17], "mangl": 4, "boost": 4, "enum": 4, "ak": 5, "to_list": 5, "db": [6, 16], "everyth": 6, "temporari": [6, 15], "submit": 6, "data_dict": 6, "empti": 6, "retriev": 6, "splitinicepuls": 6, "least": [6, 20, 40], "becaus": [6, 7], "instead": [6, 16], "alwai": 6, "table_nam": 6, "sure": [6, 20, 40], "sqlite3": 6, "replica": 6, "own": [6, 20, 40], "databaseerror": 6, "disk": 6, "malform": 6, "due": 6, "inabl": 6, "accross": 6, "perturb": 6, "perturbation_dict": 6, "step": [6, 10, 16], "intend": [6, 40], "test": [6, 7, 14, 16, 17, 18, 20], "stabil": 6, "small": [6, 16], "chang": [6, 15, 16, 20], "deviat": 6, "desired_s": 6, "fraction_nois": 6, "fraction_muon": 6, "fraction_nu_": 6, "fraction_nu_mu": 6, "fraction_nu_tau": 6, "fraction": [6, 13], "nu_e": 6, "nu_mu": 6, "nu_tau": 6, "reed": 6, "42": [6, 16, 40], "equal": 6, "flavour": 6, "proport": 6, "resp": 6, "min_max_decay_length": 6, "dbang": 6, "cc": 6, "nc": 6, "mu": 6, "database_path": [6, 15, 16], "attach": 6, "default_typ": 6, "NOT": [6, 16], "null": 6, "integer_primary_kei": 6, "Such": 6, "row": [6, 11], "appropri": [6, 14], "df": 6, "must": [6, 10, 16, 20], "parquet_path": 7, "mc_truth_tabl": 7, "mc_truth": 7, "excluded_field": 7, "id": 7, "everi": [7, 40], "choos": 7, "argument": [7, 14, 16, 17, 18], "exclude_field": 7, "database_nam": 7, "convers": [7, 40], "rng": 7, "i3_list": [7, 17], "gcd_list": [7, 17], "correpond": 7, "handi": 7, "even": [7, 16], "files_list": 7, "gcd_shuffl": 7, "i3_shuffl": 7, "use_cach": 7, "flexibl": 7, "show": [7, 16], "involv": 7, "cover": 7, "yml": [7, 17, 18], "50000": [7, 18], "ab": [7, 16, 18], "12": [7, 18], "14": [7, 18], "16": [7, 18], "13": [7, 40], "num": [7, 11, 17], "frac": 7, "part": [7, 40], "did": 7, "entiti": 7, "funtion": 7, "submodul": [8, 19], "dynedgeconv": [10, 11, 13], "_group_ident": [10, 11], "group_bi": [10, 11], "group_pulses_to_dom": [10, 11], "group_pulses_to_pmt": [10, 11], "min_pool": [10, 11], "min_pool_x": [10, 11], "std_pool": [10, 11], "std_pool_x": [10, 11], "sum_pool": [10, 11], "sum_pool_and_distribut": [10, 11], "sum_pool_x": [10, 11], "nb_input": [10, 12, 13, 14], "nb_output": [10, 12, 13, 14], "icecubedeepcor": [10, 12], "icecubekaggl": [10, 12], "icecubeupgrad": [10, 12], "icecubeupgrade_v2": [10, 12], "_calculate_global_vari": [10, 13], "_construct_lay": [10, 13], "_global_pool": [10, 13], "dynedgejinst": [10, 13], "binaryclassificationtask": [10, 14], "binaryclassificationtasklogit": [10, 14], "multiclassclassificationtask": [10, 14], "azimuthreconstruct": [10, 14], "azimuthreconstructionwithkappa": [10, 14], "directionreconstructionwithkappa": [10, 14], "energyreconstruct": [10, 14], "energyreconstructionwithpow": [10, 14], "energyreconstructionwithuncertainti": [10, 14], "inelasticityreconstruct": [10, 14], "positionreconstruct": [10, 14], "timereconstruct": [10, 14], "vertexreconstruct": [10, 14], "zenithreconstruct": [10, 14], "zenithreconstructionwithkappa": [10, 14], "identitytask": [10, 14], "_validate_and_set_transform": [10, 14], "train_ev": [10, 14], "oper": [10, 11, 13], "cluster": [10, 11, 13], "local": [10, 17], "reduc": 10, "avg": 10, "transfer_attribut": 10, "simplecoarsen": 10, "longtensor": [10, 11, 13], "addit": [10, 11, 16], "nomin": 10, "pooling_method": 10, "overwritten": [10, 18], "bespok": 10, "original_data": 10, "pooled_data": 10, "transfer": 10, "avg_pool": 10, "avg_pool_x": 10, "max_pool": [10, 11], "max_pool_x": [10, 11], "sum": [10, 11, 13], "time_window": 10, "window": 10, "edge_index": [10, 11, 13], "mathbf": [10, 11], "ldot": [10, 11], "n": [10, 11, 16], "sigma": 10, "euclidean": [10, 16, 20], "distanc": [10, 16], "between": [10, 16], "http": [10, 16, 20], "arxiv": [10, 16], "org": [10, 16, 40], "pdf": 10, "1809": 10, "06166": 10, "nb_nearest_neighbour": 10, "k": [10, 13, 16], "nearest": [10, 13], "neighbour": [10, 11, 13], "radiu": 10, "sphere": [10, 16], "centr": 10, "lightningmodul": [10, 11, 16], "train_dataload": 10, "val_dataload": 10, "max_epoch": 10, "gpu": [10, 17, 40], "ckpt_path": 10, "logger": [10, 17], "log_every_n_step": 10, "gradient_clip_v": 10, "distribution_strategi": 10, "ddp": 10, "trainer_kwarg": 10, "pytorch_lightn": 10, "trainer": [10, 16], "trust": [10, 18], "load_modul": [10, 18], "modelconfig": [10, 17, 18], "enough": 10, "eval": [10, 40], "lambda": 10, "definit": 10, "consequ": 10, "state_dict": 10, "prediction_column": [10, 16], "node_level": [10, 16], "additional_attribut": [10, 13, 16], "optimizer_class": 10, "optim": [10, 16], "adam": 10, "optimizer_kwarg": 10, "scheduler_class": 10, "scheduler_kwarg": 10, "scheduler_config": 10, "pred": [10, 14], "verbos": [10, 16], "activ": [10, 14, 20, 40], "mode": [10, 14], "batch_idx": 10, "share": 10, "deactiv": [10, 14], "train_batch": 10, "val_batch": 10, "xyz_coord": 10, "matrix": [10, 11, 16], "pairwis": 10, "shape": [10, 11, 16], "nb_dom": 10, "3": [10, 11, 13, 14, 15, 16, 20, 40], "xyzt": 10, "homophili": 10, "measur": 10, "notic": [10, 16], "assum": [10, 12, 14], "edg": [10, 11, 13], "aggr": 11, "nb_neighbor": 11, "8": [11, 13, 16, 20, 40], "features_subset": [11, 13], "edgeconv": 11, "convolut": [11, 13], "sequenc": 11, "mlp": [11, 13], "aggreg": 11, "sparsetensor": 11, "ident": [11, 14], "pmt": 11, "f1": 11, "f2": 11, "6": [11, 15, 16, 20], "7": [11, 15], "groupbi": 11, "negat": 11, "repres": [11, 18], "std": 11, "averag": [11, 16], "torch_geometr": 11, "version": [11, 14, 16, 20, 40], "mathbb": 11, "r": [11, 40], "n_1": 11, "n_b": 11, "maximum": [11, 14, 17], "obtain": [11, 16], "wise": 11, "dens": 11, "fc": 11, "known": 11, "cluster_index": 11, "distribut": [11, 13, 14, 16], "standardis": 12, "scaler": 12, "ins": 12, "implent": [12, 14, 16], "adjac": 12, "overridden": 12, "competit": 12, "prototyp": 12, "learnabl": 13, "author": [13, 16], "martin": 13, "minh": 13, "nb_intermedi": 13, "128": [13, 17], "dropout_ratio": 13, "dimens": [13, 16], "drop": 13, "nb_neighbour": 13, "dynedge_layer_s": 13, "post_processing_layer_s": 13, "readout_layer_s": 13, "global_pooling_schem": 13, "add_global_variables_after_pool": 13, "latent": [13, 14], "metric": [13, 16], "dimenion": 13, "multi": 13, "perceptron": 13, "256": 13, "336": 13, "hidden": [13, 14], "skip": 13, "post": 13, "_and_": 13, "As": 13, "last": [13, 14, 16], "scheme": 13, "altern": [13, 16, 20], "exact": [13, 16], "2209": 13, "03042": 13, "rasmu": 13, "oerso": 13, "layer_size_scal": 13, "4": [13, 14, 15, 16], "scale": [13, 14, 16], "core": 13, "hidden_s": 14, "target_label": 14, "transform_prediction_and_target": 14, "transform_target": 14, "transform_infer": 14, "transform_support": 14, "binari": [14, 16], "logit": [14, 16], "classifi": 14, "untransform": 14, "angl": [14, 16], "kappa": [14, 16], "var": 14, "3d": [14, 16], "vmf": 14, "stabl": [14, 16, 40], "uncertainti": 14, "hadron": 14, "affin": 14, "feed": 14, "numer": [14, 16], "log10": [14, 16], "conjunct": 14, "invers": 14, "recov": 14, "minimum": 14, "restrict": [14, 16], "invert": 14, "1e6": 14, "assert": 14, "wrt": 14, "contour": 15, "pipeline_path": 15, "post_fix": 15, "_pred": 15, "model_nam": 15, "include_retro": 15, "statistical_fit": 15, "contour_typ": 15, "dm31_minmax": 15, "theta23_minmax": 15, "run_nam": 15, "config_dict": 15, "grid_siz": 15, "1d": 15, "parallel": 15, "amount": 15, "job": 15, "later": [15, 40], "2d": [15, 16], "30": 15, "36": 15, "54": 15, "config_outdir": 15, "weight_nam": [15, 16], "pisa_config_dict": 15, "add_to_databas": [15, 16], "flux": 15, "_database_path": 15, "statist": 15, "effect": [15, 16, 20], "account": 15, "systemat": 15, "hypersurfac": 15, "assumpt": 15, "regard": 15, "config_path": 15, "new_config_path": 15, "dummy_sect": 15, "temp": 15, "dummi": 15, "section": 15, "header": 15, "configupdat": 15, "programat": 15, "contour_data": 15, "chi2_critical_valu": 15, "706": 15, "width": 15, "352": 15, "388": 15, "path_to_pisa_fit_result": 15, "name_of_my_model_in_fit": 15, "legend": 15, "color": 15, "linestyl": 15, "style": [15, 20], "line": [15, 16, 17], "chi2": 15, "90": 15, "cl": 15, "right": [15, 16], "inch": 15, "xlim": 15, "ylim": 15, "0023799999999999997": 15, "0025499999999999997": 15, "605": 15, "176": 15, "upper": 15, "content": 15, "dure": 16, "mileston": 16, "factor": 16, "last_epoch": 16, "_lrschedul": 16, "interpol": 16, "linearli": 16, "denot": 16, "multipli": 16, "closest": 16, "vice": 16, "versa": 16, "wrap": [16, 18], "epoch": [16, 17], "print": [16, 17], "messag": [16, 17], "stdout": 16, "refresh_r": 16, "process_posit": 16, "tqdmprogressbar": 16, "progress": 16, "bar": 16, "customis": 16, "lightn": 16, "overrid": 16, "don": [16, 40], "duplciat": 16, "previou": 16, "behaviour": 16, "runtim": [16, 40], "azimuth_kei": 16, "zenith_kei": 16, "produc": 16, "cross": 16, "entropi": 16, "probabl": 16, "num_class": 16, "softmax": 16, "ed": 16, "squar": 16, "three": 16, "elementwis": 16, "von": 16, "mise": 16, "fisher": 16, "term": 16, "mit": 16, "licens": 16, "copyright": 16, "2019": 16, "ryabinin": 16, "permiss": 16, "herebi": 16, "grant": 16, "person": 16, "copi": 16, "document": 16, "deal": 16, "limit": 16, "modifi": 16, "publish": 16, "sublicens": 16, "sell": 16, "permit": 16, "whom": 16, "furnish": 16, "so": [16, 40], "subject": 16, "condit": 16, "shall": 16, "substanti": 16, "portion": 16, "THE": 16, "AS": 16, "warranti": 16, "OF": 16, "kind": 16, "OR": 16, "impli": 16, "BUT": 16, "TO": 16, "merchant": 16, "FOR": 16, "particular": [16, 20], "AND": 16, "noninfring": 16, "IN": 16, "NO": 16, "holder": 16, "BE": 16, "liabl": 16, "claim": 16, "damag": 16, "liabil": 16, "action": 16, "contract": 16, "tort": 16, "aris": 16, "WITH": 16, "_____________________": 16, "github": [16, 40], "com": [16, 40], "mryab": 16, "vmf_loss": 16, "blob": 16, "master": 16, "py": [16, 40], "bessel": 16, "exponenti": 16, "ditto": 16, "iv": 16, "1812": 16, "04616": 16, "spite": 16, "suggest": 16, "sec": 16, "paper": 16, "comparison": 16, "m": 16, "correct": 16, "static": [16, 20], "ctx": 16, "grad_output": 16, "cosh": 16, "act": 16, "inf": 16, "moder": 16, "kera": 16, "team": [16, 20], "v2": 16, "l1580": 16, "l1617": 16, "return_el": 16, "root": [16, 40], "0th": 16, "1st": 16, "estim": 16, "dimenson": 16, "utilis": 16, "dimension": 16, "space": 16, "kappa_switch": 16, "c_": 16, "sinc": 16, "diverg": 16, "700": 16, "float64": 16, "precis": 16, "unaccur": 16, "switch": 16, "approx": 16, "minu": 16, "sign": 16, "exactli": [16, 17], "database_indic": 16, "test_siz": 16, "33": 16, "tag": [16, 20, 40], "archiv": 16, "x_low": 16, "wherea": 16, "curv": 16, "alpha": 16, "05": 16, "cut": 16, "off": 16, "how": 16, "approach": 16, "zero": 16, "larger": 16, "public": 16, "uniformweightfitt": 16, "bin": 16, "privat": 16, "sql": 16, "desir": [16, 17], "np": 16, "happen": 16, "baseconfig": [17, 18], "as_dict": [17, 18], "dump": [17, 18], "get_all_argument_valu": [17, 18], "save_config": [17, 18], "save_dataset_config": [17, 18], "_construct_model": [17, 18], "_is_model_config_entri": [17, 18], "_parse_if_model_config_entri": [17, 18], "_serialis": [17, 18], "class_nam": [17, 18], "save_model_config": [17, 18], "get_all_grapnet_class": [17, 18], "get_graphnet_class": [17, 18], "is_graphnet_class": [17, 18], "is_graphnet_modul": [17, 18], "list_all_submodul": [17, 18], "traverse_and_appli": [17, 18], "trainingconfig": [17, 18], "early_stopping_pati": [17, 18], "consist": [17, 20], "cli": 17, "descript": 17, "command": [17, 40], "help": [17, 20], "home": [17, 40], "runner": 17, "lib": [17, 40], "python3": 17, "training_example_data_sqlit": 17, "earli": 17, "patienc": 17, "narg": 17, "50": 17, "example_energy_reconstruction_model": 17, "fetch": 17, "system": [17, 40], "dir": 17, "search": 17, "filenam": 17, "test_funct": 17, "loggeradapt": 17, "msg": 17, "deleg": 17, "repeat": 17, "nb_repeats_allow": 17, "logrecord": 17, "colour": 17, "formatt": 17, "coloredformatt": 17, "log_fold": 17, "place": [17, 20], "termin": 17, "onc": 17, "assort": 17, "ep": 17, "basemodel": 18, "yaml": 18, "re": [18, 40], "dataconfig": 18, "transpar": [18, 20], "reproduc": 18, "session": 18, "anoth": 18, "you": [18, 20, 40], "still": 18, "train_select": 18, "test_select": 18, "init_fn": 18, "trainabl": 18, "hyperparamet": 18, "instanti": 18, "thu": 18, "basi": 18, "unambigu": 18, "grapnet": 18, "moduletyp": 18, "lookup": 18, "fn_kwarg": 18, "structur": 18, "subpackag": 19, "constant": 19, "To": [20, 40], "smooth": 20, "guidelin": 20, "guid": 20, "encourag": 20, "contributor": 20, "discuss": 20, "bug": 20, "anyth": 20, "describ": 20, "yourself": 20, "ownership": 20, "agreement": 20, "prioriti": 20, "situat": 20, "lot": 20, "effort": 20, "go": 20, "turn": 20, "outsid": 20, "scope": 20, "project": 20, "solut": 20, "better": 20, "fork": 20, "repo": 20, "dedic": 20, "branch": [20, 40], "your": [20, 40], "repositori": 20, "graphbuil": 20, "builder": 20, "accept": 20, "autom": 20, "review": 20, "pep8": 20, "docstr": 20, "googl": 20, "hint": 20, "clean": [20, 40], "adher": 20, "pep": 20, "pylint": 20, "flake8": 20, "black": 20, "recommend": [20, 40], "mypi": 20, "pydocstyl": 20, "docformatt": 20, "commit": 20, "hook": 20, "instal": 20, "come": 20, "pip": [20, 40], "Then": 20, "everytim": 20, "pep257": 20, "concept": 20, "ljvmiranda921": 20, "io": 20, "notebook": 20, "2018": 20, "06": 20, "21": 20, "precommit": 20, "01_convert_i3_fil": [23, 40], "02_compare_sqlite_and_parquet": 23, "01_read_dataset": 27, "02_plot_feature_distribut": 27, "03_convert_parquet_to_sqlit": 27, "01_fit_uniform_weight": 30, "02_fit_bjoern_low_weight": 30, "01_train_model": 33, "02_train_model_without_config": 33, "01_fit_pisa_weight": 38, "02_make_pipeline_databas": 38, "03_contour_fit": 38, "04_contour_plot": 38, "environ": 40, "virtual": 40, "anaconda": 40, "prove": 40, "instruct": 40, "setup": 40, "want": 40, "achiev": 40, "bash": 40, "shell": 40, "cvmf": 40, "opensciencegrid": 40, "py3": 40, "v4": 40, "sh": 40, "rhel_7_x86_64": 40, "metaproject": 40, "combo": 40, "env": 40, "alia": 40, "script": 40, "With": 40, "now": 40, "light": 40, "extra": 40, "geometr": 40, "won": 40, "torch_cpu": 40, "txt": 40, "cpu": 40, "torch_gpu": 40, "prefer": 40, "unix": 40, "git": 40, "clone": 40, "usernam": 40, "cd": 40, "conda": 40, "gcc_linux": 40, "64": 40, "gxx_linux": 40, "libgcc": 40, "cudatoolkit": 40, "11": 40, "forg": 40, "torch_maco": 40, "On": 40, "maco": 40, "box": 40, "compil": 40, "gcc": 40, "date": 40, "cuda": 40, "toolkit": 40, "recent": 40, "omit": 40, "newer": 40, "export": 40, "ld_library_path": 40, "anaconda3": 40, "miniconda3": 40, "bashrc": 40, "librari": 40, "access": 40, "consid": 40, "rm": 40, "asogaard": 40, "latest": 40, "dc423315742c": 40, "01_icetrai": 40, "2023": 40, "01": 40, "24": 40, "41": 40, "27": 40, "graphnet_20230124": 40, "134127": 40, "46": 40, "convert_i3_fil": 40, "ic86": 40, "thread": 40, "00": 40, "39": 40, "79": 40, "26": 40, "413": 40, "88it": 40, "specialis": 40, "push": 40, "vx": 40}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[1, 0, 0, "-", "constants"], [2, 0, 0, "-", "data"], [8, 0, 0, "-", "deployment"], [10, 0, 0, "-", "models"], [15, 0, 0, "-", "pisa"], [16, 0, 0, "-", "training"], [17, 0, 0, "-", "utilities"]], "graphnet.data": [[2, 0, 0, "-", "constants"], [2, 0, 0, "-", "dataconverter"], [2, 0, 0, "-", "dataloader"], [2, 0, 0, "-", "dataset"], [3, 0, 0, "-", "extractors"], [5, 0, 0, "-", "parquet"], [2, 0, 0, "-", "pipeline"], [6, 0, 0, "-", "sqlite"], [7, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[2, 1, 1, "", "FEATURES"], [2, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[2, 2, 1, "", "DEEPCORE"], [2, 2, 1, "", "ICECUBE86"], [2, 2, 1, "", "KAGGLE"], [2, 2, 1, "", "PROMETHEUS"], [2, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[2, 2, 1, "", "DEEPCORE"], [2, 2, 1, "", "ICECUBE86"], [2, 2, 1, "", "KAGGLE"], [2, 2, 1, "", "PROMETHEUS"], [2, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[2, 1, 1, "", "DataConverter"], [2, 1, 1, "", "FileSet"], [2, 5, 1, "", "cache_output_files"], [2, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "_extract_data"], [2, 3, 1, "", "_iterate_over_batches_of_files"], [2, 3, 1, "", "_save_filenames"], [2, 3, 1, "", "_update_shared_variables"], [2, 3, 1, "", "execute"], [2, 4, 1, "", "file_suffix"], [2, 3, 1, "", "get_map_function"], [2, 3, 1, "", "merge_files"], [2, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[2, 2, 1, "", "gcd_file"], [2, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[2, 1, 1, "", "DataLoader"], [2, 5, 1, "", "collate_fn"], [2, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[2, 6, 1, "", "ColumnMissingException"], [2, 1, 1, "", "Dataset"]], "graphnet.data.dataset.Dataset": [[2, 3, 1, "", "__getitem__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "__len__"], [2, 3, 1, "", "_check_missing_columns"], [2, 3, 1, "", "_construct_dataset_from_list_of_strings"], [2, 3, 1, "", "_construct_datasets_from_dict"], [2, 3, 1, "", "_create_graph"], [2, 3, 1, "", "_get_all_indices"], [2, 3, 1, "", "_get_dbang_label"], [2, 3, 1, "", "_get_event_index"], [2, 3, 1, "", "_get_labels"], [2, 3, 1, "", "_init"], [2, 3, 1, "", "_post_init"], [2, 3, 1, "", "_query"], [2, 3, 1, "", "_remove_missing_columns"], [2, 3, 1, "", "_resolve_string_selection_to_indices"], [2, 3, 1, "", "add_label"], [2, 3, 1, "", "concatenate"], [2, 3, 1, "", "from_config"], [2, 4, 1, "", "path"], [2, 3, 1, "", "query_table"], [2, 4, 1, "", "truth_table"]], "graphnet.data.extractors": [[3, 0, 0, "-", "i3extractor"], [3, 0, 0, "-", "i3featureextractor"], [3, 0, 0, "-", "i3genericextractor"], [3, 0, 0, "-", "i3hybridrecoextractor"], [3, 0, 0, "-", "i3pisaextractor"], [3, 0, 0, "-", "i3retroextractor"], [3, 0, 0, "-", "i3splinempeextractor"], [3, 0, 0, "-", "i3truthextractor"], [3, 0, 0, "-", "i3tumextractor"], [4, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[3, 1, 1, "", "I3Extractor"], [3, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "_load_gcd_data"], [3, 4, 1, "", "name"], [3, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[3, 1, 1, "", "I3FeatureExtractor"], [3, 1, 1, "", "I3FeatureExtractorIceCube86"], [3, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [3, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [3, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor": [[3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86": [[3, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade": [[3, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade": [[3, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3genericextractor": [[3, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor.I3GenericExtractor": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "_cast_mc_tree"], [3, 3, 1, "", "_cast_triggers"], [3, 3, 1, "", "_extract_per_pulse_attribute"], [3, 3, 1, "", "_extract_pulse_series_map"], [3, 3, 1, "", "_flatten_result"], [3, 3, 1, "", "_flatten_result_mctree"], [3, 3, 1, "", "_get_keys"]], "graphnet.data.extractors.i3hybridrecoextractor": [[3, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3pisaextractor": [[3, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3retroextractor": [[3, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor.I3RetroExtractor": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "_try_get_key"]], "graphnet.data.extractors.i3splinempeextractor": [[3, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3truthextractor": [[3, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor.I3TruthExtractor": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "_find_data_type"], [3, 3, 1, "", "_get_primary_particle_interaction_type_and_elasticity"], [3, 3, 1, "", "_get_primary_track_energy_and_inelasticity"], [3, 3, 1, "", "_muon_stopped"]], "graphnet.data.extractors.i3tumextractor": [[3, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor.I3TUMExtractor": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"]], "graphnet.data.extractors.utilities": [[4, 0, 0, "-", "collections"], [4, 0, 0, "-", "frames"], [4, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[4, 5, 1, "", "flatten_nested_dictionary"], [4, 5, 1, "", "serialise"], [4, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[4, 5, 1, "", "frame_is_montecarlo"], [4, 5, 1, "", "frame_is_noise"], [4, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[4, 5, 1, "", "break_cyclic_recursion"], [4, 5, 1, "", "cast_object_to_pure_python"], [4, 5, 1, "", "cast_pulse_series_to_pure_python"], [4, 5, 1, "", "get_member_variables"], [4, 5, 1, "", "is_boost_class"], [4, 5, 1, "", "is_boost_enum"], [4, 5, 1, "", "is_icecube_class"], [4, 5, 1, "", "is_method"], [4, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[5, 0, 0, "-", "parquet_dataconverter"], [5, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[5, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[5, 2, 1, "", "file_suffix"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[5, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[5, 3, 1, "", "_format_dictionary_result"], [5, 3, 1, "", "query_table"]], "graphnet.data.pipeline": [[2, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pipeline.InSQLitePipeline": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "__init__"]], "graphnet.data.sqlite": [[6, 0, 0, "-", "sqlite_dataconverter"], [6, 0, 0, "-", "sqlite_dataset"], [6, 0, 0, "-", "sqlite_dataset_perturbed"], [6, 0, 0, "-", "sqlite_selection"], [6, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, 1, 1, "", "SQLiteDataConverter"], [6, 5, 1, "", "construct_dataframe"], [6, 5, 1, "", "is_mc_tree"], [6, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[6, 3, 1, "", "_extract_everything"], [6, 3, 1, "", "_extract_table_names"], [6, 3, 1, "", "_merge_temporary_databases"], [6, 3, 1, "", "_submit_to_database"], [6, 3, 1, "", "any_pulsemap_is_non_empty"], [6, 2, 1, "", "file_suffix"], [6, 3, 1, "", "merge_files"], [6, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[6, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[6, 3, 1, "", "_close_connection"], [6, 3, 1, "", "_establish_connection"], [6, 3, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed": [[6, 3, 1, "", "__getitem__"], [6, 3, 1, "", "__init__"]], "graphnet.data.sqlite.sqlite_selection": [[6, 5, 1, "", "get_desired_event_numbers"], [6, 5, 1, "", "get_equal_proportion_neutrino_indices"], [6, 5, 1, "", "get_even_dbang_selection"], [6, 5, 1, "", "get_even_signal_background_indicies"], [6, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[6, 5, 1, "", "attach_index"], [6, 5, 1, "", "create_table"], [6, 5, 1, "", "create_table_and_save_to_sql"], [6, 5, 1, "", "database_exists"], [6, 5, 1, "", "database_table_exists"], [6, 5, 1, "", "run_sql_code"], [6, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[7, 0, 0, "-", "parquet_to_sqlite"], [7, 0, 0, "-", "random"], [7, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[7, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "_save_config"], [7, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[7, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[7, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "_get_index_cache_path"], [7, 3, 1, "", "_get_random_events_from_selection"], [7, 3, 1, "", "_get_values_cache_path"], [7, 3, 1, "", "_parse_variable_names"], [7, 3, 1, "", "resolve"]], "graphnet.models": [[10, 0, 0, "-", "coarsening"], [11, 0, 0, "-", "components"], [12, 0, 0, "-", "detector"], [13, 0, 0, "-", "gnn"], [10, 0, 0, "-", "graph_builders"], [10, 0, 0, "-", "model"], [10, 0, 0, "-", "standard_model"], [14, 0, 0, "-", "task"], [10, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[10, 1, 1, "", "AttributeCoarsening"], [10, 1, 1, "", "Coarsening"], [10, 1, 1, "", "CustomDOMCoarsening"], [10, 1, 1, "", "DOMAndTimeWindowCoarsening"], [10, 1, 1, "", "DOMCoarsening"], [10, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.AttributeCoarsening": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "_perform_clustering"]], "graphnet.models.coarsening.Coarsening": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "_additional_features"], [10, 3, 1, "", "_perform_clustering"], [10, 3, 1, "", "_transfer_attributes"], [10, 3, 1, "", "forward"], [10, 2, 1, "", "reduce_options"]], "graphnet.models.coarsening.CustomDOMCoarsening": [[10, 3, 1, "", "_additional_features"]], "graphnet.models.coarsening.DOMAndTimeWindowCoarsening": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "_perform_clustering"]], "graphnet.models.coarsening.DOMCoarsening": [[10, 3, 1, "", "_perform_clustering"]], "graphnet.models.components": [[11, 0, 0, "-", "layers"], [11, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[11, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[11, 5, 1, "", "_group_identical"], [11, 5, 1, "", "group_by"], [11, 5, 1, "", "group_pulses_to_dom"], [11, 5, 1, "", "group_pulses_to_pmt"], [11, 5, 1, "", "min_pool"], [11, 5, 1, "", "min_pool_x"], [11, 5, 1, "", "std_pool"], [11, 5, 1, "", "std_pool_x"], [11, 5, 1, "", "sum_pool"], [11, 5, 1, "", "sum_pool_and_distribute"], [11, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[12, 0, 0, "-", "detector"], [12, 0, 0, "-", "icecube"], [12, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[12, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "_forward"], [12, 4, 1, "", "features"], [12, 3, 1, "", "forward"], [12, 4, 1, "", "nb_inputs"], [12, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[12, 1, 1, "", "IceCube86"], [12, 1, 1, "", "IceCubeDeepCore"], [12, 1, 1, "", "IceCubeKaggle"], [12, 1, 1, "", "IceCubeUpgrade"], [12, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[12, 3, 1, "", "_forward"], [12, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[12, 3, 1, "", "_forward"], [12, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[12, 3, 1, "", "_forward"], [12, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[12, 3, 1, "", "_forward"], [12, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[12, 3, 1, "", "_forward"], [12, 2, 1, "", "features"], [12, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[12, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[12, 3, 1, "", "_forward"], [12, 2, 1, "", "features"]], "graphnet.models.gnn": [[13, 0, 0, "-", "convnet"], [13, 0, 0, "-", "dynedge"], [13, 0, 0, "-", "dynedge_jinst"], [13, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[13, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[13, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "_calculate_global_variables"], [13, 3, 1, "", "_construct_layers"], [13, 3, 1, "", "_global_pooling"], [13, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[13, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[13, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "forward"], [13, 4, 1, "", "nb_inputs"], [13, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[10, 1, 1, "", "EuclideanGraphBuilder"], [10, 1, 1, "", "GraphBuilder"], [10, 1, 1, "", "KNNGraphBuilder"], [10, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "forward"]], "graphnet.models.model": [[10, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[10, 3, 1, "", "fit"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "from_config"], [10, 3, 1, "", "load"], [10, 3, 1, "", "load_state_dict"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_as_dataframe"], [10, 3, 1, "", "save"], [10, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[10, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "compute_loss"], [10, 3, 1, "", "configure_optimizers"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "inference"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "shared_step"], [10, 3, 1, "", "train"], [10, 3, 1, "", "training_step"], [10, 3, 1, "", "validation_step"]], "graphnet.models.task": [[14, 0, 0, "-", "classification"], [14, 0, 0, "-", "reconstruction"], [14, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[14, 1, 1, "", "BinaryClassificationTask"], [14, 1, 1, "", "BinaryClassificationTaskLogits"], [14, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[14, 1, 1, "", "AzimuthReconstruction"], [14, 1, 1, "", "AzimuthReconstructionWithKappa"], [14, 1, 1, "", "DirectionReconstructionWithKappa"], [14, 1, 1, "", "EnergyReconstruction"], [14, 1, 1, "", "EnergyReconstructionWithPower"], [14, 1, 1, "", "EnergyReconstructionWithUncertainty"], [14, 1, 1, "", "InelasticityReconstruction"], [14, 1, 1, "", "PositionReconstruction"], [14, 1, 1, "", "TimeReconstruction"], [14, 1, 1, "", "VertexReconstruction"], [14, 1, 1, "", "ZenithReconstruction"], [14, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[14, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[14, 1, 1, "", "IdentityTask"], [14, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[14, 3, 1, "", "__init__"], [14, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "_forward"], [14, 3, 1, "", "_validate_and_set_transforms"], [14, 3, 1, "", "compute_loss"], [14, 3, 1, "", "forward"], [14, 3, 1, "", "inference"], [14, 4, 1, "", "nb_inputs"], [14, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[10, 5, 1, "", "calculate_distance_matrix"], [10, 5, 1, "", "calculate_xyzt_homophily"], [10, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[15, 0, 0, "-", "fitting"], [15, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[15, 1, 1, "", "ContourFitter"], [15, 1, 1, "", "WeightFitter"], [15, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "_check_inputs"], [15, 3, 1, "", "_fit_contours"], [15, 3, 1, "", "_parallel_fit_1d_contour"], [15, 3, 1, "", "_parallel_fit_2d_contour"], [15, 3, 1, "", "fit_1d_contour"], [15, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[15, 5, 1, "", "plot_1D_contour"], [15, 5, 1, "", "plot_2D_contour"], [15, 5, 1, "", "read_entry"]], "graphnet.training": [[16, 0, 0, "-", "callbacks"], [16, 0, 0, "-", "labels"], [16, 0, 0, "-", "loss_functions"], [16, 0, 0, "-", "utils"], [16, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[16, 1, 1, "", "PiecewiseLinearLR"], [16, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[16, 3, 1, "", "get_metrics"], [16, 3, 1, "", "init_predict_tqdm"], [16, 3, 1, "", "init_test_tqdm"], [16, 3, 1, "", "init_train_tqdm"], [16, 3, 1, "", "init_validation_tqdm"], [16, 3, 1, "", "on_train_epoch_end"], [16, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[16, 1, 1, "", "Direction"], [16, 1, 1, "", "Label"]], "graphnet.training.labels.Direction": [[16, 3, 1, "", "__call__"], [16, 3, 1, "", "__init__"]], "graphnet.training.labels.Label": [[16, 3, 1, "", "__call__"], [16, 3, 1, "", "__init__"]], "graphnet.training.loss_functions": [[16, 1, 1, "", "BinaryCrossEntropyLoss"], [16, 1, 1, "", "CrossEntropyLoss"], [16, 1, 1, "", "EuclideanDistanceLoss"], [16, 1, 1, "", "LogCMK"], [16, 1, 1, "", "LogCoshLoss"], [16, 1, 1, "", "LossFunction"], [16, 1, 1, "", "MSELoss"], [16, 1, 1, "", "RMSELoss"], [16, 1, 1, "", "VonMisesFisher2DLoss"], [16, 1, 1, "", "VonMisesFisher3DLoss"], [16, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.CrossEntropyLoss": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.EuclideanDistanceLoss": [[16, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.LogCMK": [[16, 3, 1, "", "backward"], [16, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LogCoshLoss": [[16, 3, 1, "", "_forward"], [16, 3, 1, "", "_log_cosh"]], "graphnet.training.loss_functions.LossFunction": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "_forward"], [16, 3, 1, "", "forward"]], "graphnet.training.loss_functions.MSELoss": [[16, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.RMSELoss": [[16, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher2DLoss": [[16, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher3DLoss": [[16, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[16, 3, 1, "", "_evaluate"], [16, 3, 1, "", "log_cmk"], [16, 3, 1, "", "log_cmk_approx"], [16, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[16, 5, 1, "", "collate_fn"], [16, 5, 1, "", "get_predictions"], [16, 5, 1, "", "make_dataloader"], [16, 5, 1, "", "make_train_validation_dataloader"], [16, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[16, 1, 1, "", "BjoernLow"], [16, 1, 1, "", "Uniform"], [16, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.BjoernLow": [[16, 3, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.Uniform": [[16, 3, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.WeightFitter": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "_get_truth"], [16, 3, 1, "", "fit"]], "graphnet.utilities": [[17, 0, 0, "-", "argparse"], [18, 0, 0, "-", "config"], [17, 0, 0, "-", "decorators"], [17, 0, 0, "-", "filesys"], [17, 0, 0, "-", "imports"], [17, 0, 0, "-", "logging"], [17, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[17, 1, 1, "", "ArgumentParser"], [17, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[17, 3, 1, "", "__init__"], [17, 2, 1, "", "standard_arguments"], [17, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "__len__"], [17, 3, 1, "", "__repr__"], [17, 3, 1, "", "contains"], [17, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[18, 0, 0, "-", "base_config"], [18, 0, 0, "-", "configurable"], [18, 0, 0, "-", "dataset_config"], [18, 0, 0, "-", "model_config"], [18, 0, 0, "-", "parsing"], [18, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[18, 1, 1, "", "BaseConfig"], [18, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[18, 3, 1, "", "as_dict"], [18, 3, 1, "", "dump"], [18, 3, 1, "", "load"]], "graphnet.utilities.config.configurable": [[18, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[18, 3, 1, "", "__init__"], [18, 4, 1, "", "config"], [18, 3, 1, "", "from_config"], [18, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[18, 1, 1, "", "DatasetConfig"], [18, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[18, 3, 1, "", "__init__"], [18, 2, 1, "", "features"], [18, 2, 1, "", "index_column"], [18, 2, 1, "", "loss_weight_column"], [18, 2, 1, "", "loss_weight_default_value"], [18, 2, 1, "", "loss_weight_table"], [18, 2, 1, "", "node_truth"], [18, 2, 1, "", "node_truth_table"], [18, 2, 1, "", "path"], [18, 2, 1, "", "pulsemaps"], [18, 2, 1, "", "seed"], [18, 2, 1, "", "selection"], [18, 2, 1, "", "string_selection"], [18, 2, 1, "", "truth"], [18, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[18, 1, 1, "", "ModelConfig"], [18, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "_construct_model"], [18, 3, 1, "", "_is_model_config_entry"], [18, 3, 1, "", "_parse_if_model_config_entry"], [18, 3, 1, "", "_serialise"], [18, 2, 1, "", "arguments"], [18, 3, 1, "", "as_dict"], [18, 2, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[18, 5, 1, "", "get_all_grapnet_classes"], [18, 5, 1, "", "get_graphnet_classes"], [18, 5, 1, "", "is_graphnet_class"], [18, 5, 1, "", "is_graphnet_module"], [18, 5, 1, "", "list_all_submodules"], [18, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[18, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[18, 2, 1, "", "dataloader"], [18, 2, 1, "", "early_stopping_patience"], [18, 2, 1, "", "fit"], [18, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[17, 5, 1, "", "find_i3_files"], [17, 5, 1, "", "has_extension"], [17, 5, 1, "", "is_gcd_file"], [17, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[17, 5, 1, "", "has_icecube_package"], [17, 5, 1, "", "has_pisa_package"], [17, 5, 1, "", "has_torch_package"], [17, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[17, 1, 1, "", "LoggerMixin"], [17, 1, 1, "", "RepeatFilter"], [17, 5, 1, "", "get_formatters"], [17, 5, 1, "", "get_logger"], [17, 5, 1, "", "set_logging_level"], [17, 5, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[17, 3, 1, "", "_get_logger"], [17, 3, 1, "", "critical"], [17, 3, 1, "", "debug"], [17, 3, 1, "", "error"], [17, 3, 1, "", "info"], [17, 3, 1, "", "warning"]], "graphnet.utilities.logging.RepeatFilter": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "filter"]], "graphnet.utilities.maths": [[17, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 39], "impact": [0, 39], "usag": [0, 39], "graphnet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "packag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "subpackag": [1, 2, 3, 8, 10, 17], "submodul": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "constant": [1, 2], "modul": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 28, 29, 31, 32, 34, 35, 36, 37], "data": [2, 3, 4, 5, 6, 7], "dataconvert": 2, "dataload": 2, "dataset": 2, "pipelin": 2, "extractor": [3, 4], "i3extractor": 3, "i3featureextractor": 3, "i3genericextractor": 3, "i3hybridrecoextractor": 3, "i3pisaextractor": 3, "i3retroextractor": 3, "i3splinempeextractor": 3, "i3truthextractor": 3, "i3tumextractor": 3, "util": [4, 7, 10, 16, 17, 18], "collect": 4, "frame": 4, "type": 4, "parquet": 5, "parquet_dataconvert": 5, "parquet_dataset": 5, "sqlite": 6, "sqlite_dataconvert": 6, "sqlite_dataset": 6, "sqlite_dataset_perturb": 6, "sqlite_select": 6, "sqlite_util": 6, "parquet_to_sqlit": 7, "random": 7, "string_selection_resolv": 7, "deploy": [8, 9], "i3modul": 9, "graphnet_modul": 9, "model": [10, 11, 12, 13, 14], "coarsen": 10, "graph_build": 10, "standard_model": 10, "compon": 11, "layer": 11, "pool": 11, "detector": 12, "icecub": 12, "prometheu": 12, "gnn": 13, "convnet": 13, "dynedg": 13, "dynedge_jinst": 13, "task": 14, "classif": 14, "reconstruct": 14, "pisa": 15, "fit": 15, "plot": 15, "train": 16, "callback": 16, "label": 16, "loss_funct": 16, "weight_fit": 16, "argpars": 17, "decor": 17, "filesi": 17, "import": 17, "log": 17, "math": 17, "config": 18, "base_config": 18, "configur": 18, "dataset_config": 18, "model_config": 18, "pars": 18, "training_config": 18, "src": 19, "contribut": 20, "github": 20, "issu": 20, "pull": 20, "request": 20, "convent": 20, "code": 20, "qualiti": 20, "01_convert_i3_fil": 21, "02_compare_sqlite_and_parquet": 22, "01_icetrai": 23, "01_read_dataset": 24, "02_plot_feature_distribut": 25, "03_convert_parquet_to_sqlit": 26, "02_data": 27, "01_fit_uniform_weight": 28, "02_fit_bjoern_low_weight": 29, "03_weight": 30, "01_train_model": 31, "02_train_model_without_config": 32, "04_train": 33, "01_fit_pisa_weight": 34, "02_make_pipeline_databas": 35, "03_contour_fit": 36, "04_contour_plot": 37, "05_pisa": 38, "instal": 40, "icetrai": 40, "stand": 40, "alon": 40, "run": 40, "docker": 40}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [39, "about"]], "Impact": [[0, "impact"], [39, "impact"]], "Usage": [[0, "usage"], [39, "usage"]], "graphnet package": [[1, "module-graphnet"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"], [3, "subpackages"], [8, "subpackages"], [10, "subpackages"], [17, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"]], "graphnet.constants module": [[1, "module-graphnet.constants"]], "graphnet.data package": [[2, "module-graphnet.data"]], "graphnet.data.constants module": [[2, "module-graphnet.data.constants"]], "graphnet.data.dataconverter module": [[2, "module-graphnet.data.dataconverter"]], "graphnet.data.dataloader module": [[2, "module-graphnet.data.dataloader"]], "graphnet.data.dataset module": [[2, "module-graphnet.data.dataset"]], "graphnet.data.pipeline module": [[2, "module-graphnet.data.pipeline"]], "graphnet.data.extractors package": [[3, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor module": [[3, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor module": [[3, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor module": [[3, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor module": [[3, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3pisaextractor module": [[3, "module-graphnet.data.extractors.i3pisaextractor"]], "graphnet.data.extractors.i3retroextractor module": [[3, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor module": [[3, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor module": [[3, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor module": [[3, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities package": [[4, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections module": [[4, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames module": [[4, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types module": [[4, "module-graphnet.data.extractors.utilities.types"]], "graphnet.data.parquet package": [[5, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter module": [[5, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset module": [[5, "module-graphnet.data.parquet.parquet_dataset"]], "graphnet.data.sqlite package": [[6, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter module": [[6, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset module": [[6, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed module": [[6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection module": [[6, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities module": [[6, "module-graphnet.data.sqlite.sqlite_utilities"]], "graphnet.data.utilities package": [[7, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite module": [[7, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random module": [[7, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver module": [[7, "module-graphnet.data.utilities.string_selection_resolver"]], "graphnet.deployment package": [[8, "module-graphnet.deployment"]], "graphnet.deployment.i3modules package": [[9, "graphnet-deployment-i3modules-package"]], "graphnet.deployment.i3modules.graphnet_module module": [[9, "graphnet-deployment-i3modules-graphnet-module-module"]], "graphnet.models package": [[10, "module-graphnet.models"]], "graphnet.models.coarsening module": [[10, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders module": [[10, "module-graphnet.models.graph_builders"]], "graphnet.models.model module": [[10, "module-graphnet.models.model"]], "graphnet.models.standard_model module": [[10, "module-graphnet.models.standard_model"]], "graphnet.models.utils module": [[10, "module-graphnet.models.utils"]], "graphnet.models.components package": [[11, "module-graphnet.models.components"]], "graphnet.models.components.layers module": [[11, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool module": [[11, "module-graphnet.models.components.pool"]], "graphnet.models.detector package": [[12, "module-graphnet.models.detector"]], "graphnet.models.detector.detector module": [[12, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube module": [[12, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus module": [[12, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn package": [[13, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet module": [[13, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge module": [[13, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst module": [[13, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn module": [[13, "module-graphnet.models.gnn.gnn"]], "graphnet.models.task package": [[14, "module-graphnet.models.task"]], "graphnet.models.task.classification module": [[14, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction module": [[14, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task module": [[14, "module-graphnet.models.task.task"]], "graphnet.pisa package": [[15, "module-graphnet.pisa"]], "graphnet.pisa.fitting module": [[15, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting module": [[15, "module-graphnet.pisa.plotting"]], "graphnet.training package": [[16, "module-graphnet.training"]], "graphnet.training.callbacks module": [[16, "module-graphnet.training.callbacks"]], "graphnet.training.labels module": [[16, "module-graphnet.training.labels"]], "graphnet.training.loss_functions module": [[16, "module-graphnet.training.loss_functions"]], "graphnet.training.utils module": [[16, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting module": [[16, "module-graphnet.training.weight_fitting"]], "graphnet.utilities package": [[17, "module-graphnet.utilities"]], "graphnet.utilities.argparse module": [[17, "module-graphnet.utilities.argparse"]], "graphnet.utilities.decorators module": [[17, "module-graphnet.utilities.decorators"]], "graphnet.utilities.filesys module": [[17, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports module": [[17, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging module": [[17, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths module": [[17, "module-graphnet.utilities.maths"]], "graphnet.utilities.config package": [[18, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config module": [[18, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable module": [[18, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config module": [[18, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config module": [[18, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing module": [[18, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config module": [[18, "module-graphnet.utilities.config.training_config"]], "src": [[19, "src"]], "Contribute": [[20, "contribute"]], "GitHub issues": [[20, "github-issues"]], "Pull requests": [[20, "pull-requests"]], "Conventions": [[20, "conventions"]], "Code quality": [[20, "code-quality"]], "01_convert_i3_files module": [[21, "convert-i3-files-module"]], "02_compare_sqlite_and_parquet module": [[22, "compare-sqlite-and-parquet-module"]], "01_icetray": [[23, "icetray"]], "01_read_dataset module": [[24, "read-dataset-module"]], "02_plot_feature_distributions module": [[25, "plot-feature-distributions-module"]], "03_convert_parquet_to_sqlite module": [[26, "convert-parquet-to-sqlite-module"]], "02_data": [[27, "data"]], "01_fit_uniform_weights module": [[28, "fit-uniform-weights-module"]], "02_fit_bjoern_low_weights module": [[29, "fit-bjoern-low-weights-module"]], "03_weights": [[30, "weights"]], "01_train_model module": [[31, "train-model-module"]], "02_train_model_without_configs module": [[32, "train-model-without-configs-module"]], "04_training": [[33, "training"]], "01_fit_pisa_weights module": [[34, "fit-pisa-weights-module"]], "02_make_pipeline_database module": [[35, "make-pipeline-database-module"]], "03_contour_fitting module": [[36, "contour-fitting-module"]], "04_contour_plotting module": [[37, "contour-plotting-module"]], "05_pisa": [[38, "pisa"]], "Install": [[40, "install"]], "Installing with IceTray": [[40, "installing-with-icetray"]], "Installing stand-alone": [[40, "installing-stand-alone"]], "Running in Docker": [[40, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "graphnet.constants": [[1, "module-graphnet.constants"]], "module": [[1, "module-graphnet"], [1, "module-graphnet.constants"], [2, "module-graphnet.data"], [2, "module-graphnet.data.constants"], [2, "module-graphnet.data.dataconverter"], [2, "module-graphnet.data.dataloader"], [2, "module-graphnet.data.dataset"], [2, "module-graphnet.data.pipeline"], [3, "module-graphnet.data.extractors"], [3, "module-graphnet.data.extractors.i3extractor"], [3, "module-graphnet.data.extractors.i3featureextractor"], [3, "module-graphnet.data.extractors.i3genericextractor"], [3, "module-graphnet.data.extractors.i3hybridrecoextractor"], [3, "module-graphnet.data.extractors.i3pisaextractor"], [3, "module-graphnet.data.extractors.i3retroextractor"], [3, "module-graphnet.data.extractors.i3splinempeextractor"], [3, "module-graphnet.data.extractors.i3truthextractor"], [3, "module-graphnet.data.extractors.i3tumextractor"], [4, "module-graphnet.data.extractors.utilities"], [4, "module-graphnet.data.extractors.utilities.collections"], [4, "module-graphnet.data.extractors.utilities.frames"], [4, "module-graphnet.data.extractors.utilities.types"], [5, "module-graphnet.data.parquet"], [5, "module-graphnet.data.parquet.parquet_dataconverter"], [5, "module-graphnet.data.parquet.parquet_dataset"], [6, "module-graphnet.data.sqlite"], [6, "module-graphnet.data.sqlite.sqlite_dataconverter"], [6, "module-graphnet.data.sqlite.sqlite_dataset"], [6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [6, "module-graphnet.data.sqlite.sqlite_selection"], [6, "module-graphnet.data.sqlite.sqlite_utilities"], [7, "module-graphnet.data.utilities"], [7, "module-graphnet.data.utilities.parquet_to_sqlite"], [7, "module-graphnet.data.utilities.random"], [7, "module-graphnet.data.utilities.string_selection_resolver"], [8, "module-graphnet.deployment"], [10, "module-graphnet.models"], [10, "module-graphnet.models.coarsening"], [10, "module-graphnet.models.graph_builders"], [10, "module-graphnet.models.model"], [10, "module-graphnet.models.standard_model"], [10, "module-graphnet.models.utils"], [11, "module-graphnet.models.components"], [11, "module-graphnet.models.components.layers"], [11, "module-graphnet.models.components.pool"], [12, "module-graphnet.models.detector"], [12, "module-graphnet.models.detector.detector"], [12, "module-graphnet.models.detector.icecube"], [12, "module-graphnet.models.detector.prometheus"], [13, "module-graphnet.models.gnn"], [13, "module-graphnet.models.gnn.convnet"], [13, "module-graphnet.models.gnn.dynedge"], [13, "module-graphnet.models.gnn.dynedge_jinst"], [13, "module-graphnet.models.gnn.gnn"], [14, "module-graphnet.models.task"], [14, "module-graphnet.models.task.classification"], [14, "module-graphnet.models.task.reconstruction"], [14, "module-graphnet.models.task.task"], [15, "module-graphnet.pisa"], [15, "module-graphnet.pisa.fitting"], [15, "module-graphnet.pisa.plotting"], [16, "module-graphnet.training"], [16, "module-graphnet.training.callbacks"], [16, "module-graphnet.training.labels"], [16, "module-graphnet.training.loss_functions"], [16, "module-graphnet.training.utils"], [16, "module-graphnet.training.weight_fitting"], [17, "module-graphnet.utilities"], [17, "module-graphnet.utilities.argparse"], [17, "module-graphnet.utilities.decorators"], [17, "module-graphnet.utilities.filesys"], [17, "module-graphnet.utilities.imports"], [17, "module-graphnet.utilities.logging"], [17, "module-graphnet.utilities.maths"], [18, "module-graphnet.utilities.config"], [18, "module-graphnet.utilities.config.base_config"], [18, "module-graphnet.utilities.config.configurable"], [18, "module-graphnet.utilities.config.dataset_config"], [18, "module-graphnet.utilities.config.model_config"], [18, "module-graphnet.utilities.config.parsing"], [18, "module-graphnet.utilities.config.training_config"]], "columnmissingexception": [[2, "graphnet.data.dataset.ColumnMissingException"]], "deepcore (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.DEEPCORE"]], "dataconverter (class in graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.DataConverter"]], "dataloader (class in graphnet.data.dataloader)": [[2, "graphnet.data.dataloader.DataLoader"]], "dataset (class in graphnet.data.dataset)": [[2, "graphnet.data.dataset.Dataset"]], "features (class in graphnet.data.constants)": [[2, "graphnet.data.constants.FEATURES"]], "fileset (class in graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.FileSet"]], "icecube86 (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.ICECUBE86"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[2, "graphnet.data.pipeline.InSQLitePipeline"]], "kaggle (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[2, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[2, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[2, "graphnet.data.constants.TRUTH.UPGRADE"]], "__call__() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.__call__"]], "__call__() (graphnet.data.pipeline.insqlitepipeline method)": [[2, "graphnet.data.pipeline.InSQLitePipeline.__call__"]], "__getitem__() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.__getitem__"]], "__init__() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.__init__"]], "__init__() (graphnet.data.dataloader.dataloader method)": [[2, "graphnet.data.dataloader.DataLoader.__init__"]], "__init__() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.__init__"]], "__init__() (graphnet.data.pipeline.insqlitepipeline method)": [[2, "graphnet.data.pipeline.InSQLitePipeline.__init__"]], "__len__() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.__len__"]], "_check_missing_columns() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._check_missing_columns"]], "_construct_dataset_from_list_of_strings() (graphnet.data.dataset.dataset class method)": [[2, "graphnet.data.dataset.Dataset._construct_dataset_from_list_of_strings"]], "_construct_datasets_from_dict() (graphnet.data.dataset.dataset class method)": [[2, "graphnet.data.dataset.Dataset._construct_datasets_from_dict"]], "_create_graph() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._create_graph"]], "_extract_data() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter._extract_data"]], "_get_all_indices() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._get_all_indices"]], "_get_dbang_label() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._get_dbang_label"]], "_get_event_index() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._get_event_index"]], "_get_labels() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._get_labels"]], "_init() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._init"]], "_iterate_over_batches_of_files() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter._iterate_over_batches_of_files"]], "_post_init() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._post_init"]], "_query() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._query"]], "_remove_missing_columns() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._remove_missing_columns"]], "_resolve_string_selection_to_indices() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset._resolve_string_selection_to_indices"]], "_save_filenames() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter._save_filenames"]], "_update_shared_variables() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter._update_shared_variables"]], "add_label() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.add_label"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.cache_output_files"]], "collate_fn() (in module graphnet.data.dataloader)": [[2, "graphnet.data.dataloader.collate_fn"]], "concatenate() (graphnet.data.dataset.dataset class method)": [[2, "graphnet.data.dataset.Dataset.concatenate"]], "do_shuffle() (in module graphnet.data.dataloader)": [[2, "graphnet.data.dataloader.do_shuffle"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[2, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "from_config() (graphnet.data.dataset.dataset class method)": [[2, "graphnet.data.dataset.Dataset.from_config"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[2, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[2, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data": [[2, "module-graphnet.data"]], "graphnet.data.constants": [[2, "module-graphnet.data.constants"]], "graphnet.data.dataconverter": [[2, "module-graphnet.data.dataconverter"]], "graphnet.data.dataloader": [[2, "module-graphnet.data.dataloader"]], "graphnet.data.dataset": [[2, "module-graphnet.data.dataset"]], "graphnet.data.pipeline": [[2, "module-graphnet.data.pipeline"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[2, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[2, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.merge_files"]], "path (graphnet.data.dataset.dataset property)": [[2, "graphnet.data.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset method)": [[2, "graphnet.data.dataset.Dataset.query_table"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[2, "graphnet.data.dataconverter.DataConverter.save_data"]], "truth_table (graphnet.data.dataset.dataset property)": [[2, "graphnet.data.dataset.Dataset.truth_table"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[3, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[3, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[3, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[3, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[3, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "__call__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.__call__"]], "__call__() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecube86 method)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecubeupgrade method)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3pulsenoisetruthflagicecubeupgrade method)": [[3, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3hybridrecoextractor.i3galacticplanehybridrecoextractor method)": [[3, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3pisaextractor.i3pisaextractor method)": [[3, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3splinempeextractor.i3splinempeicextractor method)": [[3, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3tumextractor.i3tumextractor method)": [[3, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor.__call__"]], "__init__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.__init__"]], "__init__() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.__init__"]], "__init__() (graphnet.data.extractors.i3featureextractor.i3featureextractor method)": [[3, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3hybridrecoextractor.i3galacticplanehybridrecoextractor method)": [[3, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3pisaextractor.i3pisaextractor method)": [[3, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3splinempeextractor.i3splinempeicextractor method)": [[3, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3tumextractor.i3tumextractor method)": [[3, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor.__init__"]], "_cast_mc_tree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_mc_tree"]], "_cast_triggers() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_triggers"]], "_extract_per_pulse_attribute() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_per_pulse_attribute"]], "_extract_pulse_series_map() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_pulse_series_map"]], "_find_data_type() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._find_data_type"]], "_flatten_result() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result"]], "_flatten_result_mctree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result_mctree"]], "_get_keys() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[3, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._get_keys"]], "_get_primary_particle_interaction_type_and_elasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_particle_interaction_type_and_elasticity"]], "_get_primary_track_energy_and_inelasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_track_energy_and_inelasticity"]], "_load_gcd_data() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor._load_gcd_data"]], "_muon_stopped() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[3, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._muon_stopped"]], "_try_get_key() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[3, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor._try_get_key"]], "graphnet.data.extractors": [[3, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor": [[3, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor": [[3, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor": [[3, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[3, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3pisaextractor": [[3, "module-graphnet.data.extractors.i3pisaextractor"]], "graphnet.data.extractors.i3retroextractor": [[3, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor": [[3, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor": [[3, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor": [[3, "module-graphnet.data.extractors.i3tumextractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[3, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[3, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.get_member_variables"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities": [[4, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[4, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[4, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[4, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_type"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "_format_dictionary_result() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset._format_dictionary_result"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet": [[5, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[5, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[5, "module-graphnet.data.parquet.parquet_dataset"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "__getitem__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__getitem__"]], "__init__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__init__"]], "_close_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._close_connection"]], "_establish_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._establish_connection"]], "_extract_everything() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_everything"]], "_extract_table_names() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_table_names"]], "_merge_temporary_databases() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._merge_temporary_databases"]], "_submit_to_database() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._submit_to_database"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite": [[6, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[6, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[6, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[6, "module-graphnet.data.sqlite.sqlite_utilities"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "__init__() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.__init__"]], "__init__() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.__init__"]], "_get_index_cache_path() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_index_cache_path"]], "_get_random_events_from_selection() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_random_events_from_selection"]], "_get_values_cache_path() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_values_cache_path"]], "_parse_variable_names() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._parse_variable_names"]], "_save_config() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter._save_config"]], "graphnet.data.utilities": [[7, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[7, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[7, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver": [[7, "module-graphnet.data.utilities.string_selection_resolver"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[7, "graphnet.data.utilities.random.pairwise_shuffle"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.deployment": [[8, "module-graphnet.deployment"]], "attributecoarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.DOMCoarsening"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[10, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[10, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[10, "graphnet.models.graph_builders.KNNGraphBuilder"]], "model (class in graphnet.models.model)": [[10, "graphnet.models.model.Model"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[10, "graphnet.models.graph_builders.RadialGraphBuilder"]], "standardmodel (class in graphnet.models.standard_model)": [[10, "graphnet.models.standard_model.StandardModel"]], "__init__() (graphnet.models.coarsening.attributecoarsening method)": [[10, "graphnet.models.coarsening.AttributeCoarsening.__init__"]], "__init__() (graphnet.models.coarsening.coarsening method)": [[10, "graphnet.models.coarsening.Coarsening.__init__"]], "__init__() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[10, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.__init__"]], "__init__() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[10, "graphnet.models.graph_builders.EuclideanGraphBuilder.__init__"]], "__init__() (graphnet.models.graph_builders.knngraphbuilder method)": [[10, "graphnet.models.graph_builders.KNNGraphBuilder.__init__"]], "__init__() (graphnet.models.graph_builders.radialgraphbuilder method)": [[10, "graphnet.models.graph_builders.RadialGraphBuilder.__init__"]], "__init__() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.__init__"]], "_additional_features() (graphnet.models.coarsening.coarsening method)": [[10, "graphnet.models.coarsening.Coarsening._additional_features"]], "_additional_features() (graphnet.models.coarsening.customdomcoarsening method)": [[10, "graphnet.models.coarsening.CustomDOMCoarsening._additional_features"]], "_perform_clustering() (graphnet.models.coarsening.attributecoarsening method)": [[10, "graphnet.models.coarsening.AttributeCoarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.coarsening method)": [[10, "graphnet.models.coarsening.Coarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[10, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domcoarsening method)": [[10, "graphnet.models.coarsening.DOMCoarsening._perform_clustering"]], "_transfer_attributes() (graphnet.models.coarsening.coarsening method)": [[10, "graphnet.models.coarsening.Coarsening._transfer_attributes"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[10, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[10, "graphnet.models.utils.calculate_xyzt_homophily"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.coarsening.coarsening method)": [[10, "graphnet.models.coarsening.Coarsening.forward"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[10, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[10, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[10, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "forward() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.forward"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.forward"]], "from_config() (graphnet.models.model.model class method)": [[10, "graphnet.models.model.Model.from_config"]], "graphnet.models": [[10, "module-graphnet.models"]], "graphnet.models.coarsening": [[10, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders": [[10, "module-graphnet.models.graph_builders"]], "graphnet.models.model": [[10, "module-graphnet.models.model"]], "graphnet.models.standard_model": [[10, "module-graphnet.models.standard_model"]], "graphnet.models.utils": [[10, "module-graphnet.models.utils"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.inference"]], "knn_graph_batch() (in module graphnet.models.utils)": [[10, "graphnet.models.utils.knn_graph_batch"]], "load() (graphnet.models.model.model class method)": [[10, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.predict"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.predict_as_dataframe"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[10, "graphnet.models.coarsening.Coarsening.reduce_options"]], "save() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[10, "graphnet.models.model.Model.save_state_dict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.training_step"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[10, "graphnet.models.coarsening.unbatch_edge_index"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[10, "graphnet.models.standard_model.StandardModel.validation_step"]], "dynedgeconv (class in graphnet.models.components.layers)": [[11, "graphnet.models.components.layers.DynEdgeConv"]], "__init__() (graphnet.models.components.layers.dynedgeconv method)": [[11, "graphnet.models.components.layers.DynEdgeConv.__init__"]], "_group_identical() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool._group_identical"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[11, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components": [[11, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[11, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[11, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool_x"]], "detector (class in graphnet.models.detector.detector)": [[12, "graphnet.models.detector.detector.Detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "prometheus (class in graphnet.models.detector.prometheus)": [[12, "graphnet.models.detector.prometheus.Prometheus"]], "__init__() (graphnet.models.detector.detector.detector method)": [[12, "graphnet.models.detector.detector.Detector.__init__"]], "_forward() (graphnet.models.detector.detector.detector method)": [[12, "graphnet.models.detector.detector.Detector._forward"]], "_forward() (graphnet.models.detector.icecube.icecube86 method)": [[12, "graphnet.models.detector.icecube.IceCube86._forward"]], "_forward() (graphnet.models.detector.icecube.icecubedeepcore method)": [[12, "graphnet.models.detector.icecube.IceCubeDeepCore._forward"]], "_forward() (graphnet.models.detector.icecube.icecubekaggle method)": [[12, "graphnet.models.detector.icecube.IceCubeKaggle._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade method)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade_v2 method)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2._forward"]], "_forward() (graphnet.models.detector.prometheus.prometheus method)": [[12, "graphnet.models.detector.prometheus.Prometheus._forward"]], "features (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.features"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[12, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[12, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[12, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[12, "graphnet.models.detector.prometheus.Prometheus.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[12, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector": [[12, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[12, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[12, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus": [[12, "module-graphnet.models.detector.prometheus"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.nb_outputs"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "convnet (class in graphnet.models.gnn.convnet)": [[13, "graphnet.models.gnn.convnet.ConvNet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[13, "graphnet.models.gnn.dynedge.DynEdge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "gnn (class in graphnet.models.gnn.gnn)": [[13, "graphnet.models.gnn.gnn.GNN"]], "__init__() (graphnet.models.gnn.convnet.convnet method)": [[13, "graphnet.models.gnn.convnet.ConvNet.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge.__init__"]], "__init__() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.__init__"]], "__init__() (graphnet.models.gnn.gnn.gnn method)": [[13, "graphnet.models.gnn.gnn.GNN.__init__"]], "_calculate_global_variables() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge._calculate_global_variables"]], "_construct_layers() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge._construct_layers"]], "_global_pooling() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge._global_pooling"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[13, "graphnet.models.gnn.convnet.ConvNet.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[13, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn": [[13, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[13, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[13, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[13, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[13, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[13, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[13, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "identitytask (class in graphnet.models.task.task)": [[14, "graphnet.models.task.task.IdentityTask"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.MulticlassClassificationTask"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.PositionReconstruction"]], "task (class in graphnet.models.task.task)": [[14, "graphnet.models.task.task.Task"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "__init__() (graphnet.models.task.task.identitytask method)": [[14, "graphnet.models.task.task.IdentityTask.__init__"]], "__init__() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.__init__"]], "_forward() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task._forward"]], "_validate_and_set_transforms() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task._validate_and_set_transforms"]], "compute_loss() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task": [[14, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[14, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[14, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[14, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[14, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[14, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[14, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[14, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[14, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.train_eval"]], "contourfitter (class in graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.WeightFitter"]], "__init__() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.__init__"]], "__init__() (graphnet.pisa.fitting.weightfitter method)": [[15, "graphnet.pisa.fitting.WeightFitter.__init__"]], "_check_inputs() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter._check_inputs"]], "_fit_contours() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter._fit_contours"]], "_parallel_fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter._parallel_fit_1d_contour"]], "_parallel_fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter._parallel_fit_2d_contour"]], "config_updater() (in module graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[15, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa": [[15, "module-graphnet.pisa"]], "graphnet.pisa.fitting": [[15, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[15, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.read_entry"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.BjoernLow"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.CrossEntropyLoss"]], "direction (class in graphnet.training.labels)": [[16, "graphnet.training.labels.Direction"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "label (class in graphnet.training.labels)": [[16, "graphnet.training.labels.Label"]], "logcmk (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.MSELoss"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[16, "graphnet.training.callbacks.ProgressBar"]], "rmseloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.RMSELoss"]], "uniform (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.Uniform"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "weightfitter (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.WeightFitter"]], "__call__() (graphnet.training.labels.direction method)": [[16, "graphnet.training.labels.Direction.__call__"]], "__call__() (graphnet.training.labels.label method)": [[16, "graphnet.training.labels.Label.__call__"]], "__init__() (graphnet.training.callbacks.piecewiselinearlr method)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR.__init__"]], "__init__() (graphnet.training.labels.direction method)": [[16, "graphnet.training.labels.Direction.__init__"]], "__init__() (graphnet.training.labels.label method)": [[16, "graphnet.training.labels.Label.__init__"]], "__init__() (graphnet.training.loss_functions.crossentropyloss method)": [[16, "graphnet.training.loss_functions.CrossEntropyLoss.__init__"]], "__init__() (graphnet.training.loss_functions.lossfunction method)": [[16, "graphnet.training.loss_functions.LossFunction.__init__"]], "__init__() (graphnet.training.weight_fitting.weightfitter method)": [[16, "graphnet.training.weight_fitting.WeightFitter.__init__"]], "_evaluate() (graphnet.training.loss_functions.vonmisesfisherloss method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss._evaluate"]], "_fit_weights() (graphnet.training.weight_fitting.bjoernlow method)": [[16, "graphnet.training.weight_fitting.BjoernLow._fit_weights"]], "_fit_weights() (graphnet.training.weight_fitting.uniform method)": [[16, "graphnet.training.weight_fitting.Uniform._fit_weights"]], "_forward() (graphnet.training.loss_functions.crossentropyloss method)": [[16, "graphnet.training.loss_functions.CrossEntropyLoss._forward"]], "_forward() (graphnet.training.loss_functions.euclideandistanceloss method)": [[16, "graphnet.training.loss_functions.EuclideanDistanceLoss._forward"]], "_forward() (graphnet.training.loss_functions.logcoshloss method)": [[16, "graphnet.training.loss_functions.LogCoshLoss._forward"]], "_forward() (graphnet.training.loss_functions.lossfunction method)": [[16, "graphnet.training.loss_functions.LossFunction._forward"]], "_forward() (graphnet.training.loss_functions.mseloss method)": [[16, "graphnet.training.loss_functions.MSELoss._forward"]], "_forward() (graphnet.training.loss_functions.rmseloss method)": [[16, "graphnet.training.loss_functions.RMSELoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher2dloss method)": [[16, "graphnet.training.loss_functions.VonMisesFisher2DLoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher3dloss method)": [[16, "graphnet.training.loss_functions.VonMisesFisher3DLoss._forward"]], "_get_truth() (graphnet.training.weight_fitting.weightfitter method)": [[16, "graphnet.training.weight_fitting.WeightFitter._get_truth"]], "_log_cosh() (graphnet.training.loss_functions.logcoshloss class method)": [[16, "graphnet.training.loss_functions.LogCoshLoss._log_cosh"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[16, "graphnet.training.loss_functions.LogCMK.backward"]], "collate_fn() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.collate_fn"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[16, "graphnet.training.weight_fitting.WeightFitter.fit"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[16, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[16, "graphnet.training.loss_functions.LossFunction.forward"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "get_predictions() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.get_predictions"]], "graphnet.training": [[16, "module-graphnet.training"]], "graphnet.training.callbacks": [[16, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[16, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[16, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[16, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[16, "module-graphnet.training.weight_fitting"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "make_dataloader() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.make_train_validation_dataloader"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "save_results() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.save_results"]], "argumentparser (class in graphnet.utilities.argparse)": [[17, "graphnet.utilities.argparse.ArgumentParser"]], "loggermixin (class in graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.LoggerMixin"]], "options (class in graphnet.utilities.argparse)": [[17, "graphnet.utilities.argparse.Options"]], "repeatfilter (class in graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.RepeatFilter"]], "__init__() (graphnet.utilities.argparse.argumentparser method)": [[17, "graphnet.utilities.argparse.ArgumentParser.__init__"]], "__init__() (graphnet.utilities.argparse.options method)": [[17, "graphnet.utilities.argparse.Options.__init__"]], "__init__() (graphnet.utilities.logging.repeatfilter method)": [[17, "graphnet.utilities.logging.RepeatFilter.__init__"]], "__len__() (graphnet.utilities.argparse.options method)": [[17, "graphnet.utilities.argparse.Options.__len__"]], "__repr__() (graphnet.utilities.argparse.options method)": [[17, "graphnet.utilities.argparse.Options.__repr__"]], "_get_logger() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin._get_logger"]], "contains() (graphnet.utilities.argparse.options method)": [[17, "graphnet.utilities.argparse.Options.contains"]], "critical() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.critical"]], "debug() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.debug"]], "eps_like() (in module graphnet.utilities.maths)": [[17, "graphnet.utilities.maths.eps_like"]], "error() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.error"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[17, "graphnet.utilities.logging.RepeatFilter.filter"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[17, "graphnet.utilities.filesys.find_i3_files"]], "get_formatters() (in module graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities": [[17, "module-graphnet.utilities"]], "graphnet.utilities.argparse": [[17, "module-graphnet.utilities.argparse"]], "graphnet.utilities.decorators": [[17, "module-graphnet.utilities.decorators"]], "graphnet.utilities.filesys": [[17, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports": [[17, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging": [[17, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths": [[17, "module-graphnet.utilities.maths"]], "has_extension() (in module graphnet.utilities.filesys)": [[17, "graphnet.utilities.filesys.has_extension"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[17, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[17, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[17, "graphnet.utilities.imports.has_torch_package"]], "info() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.info"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[17, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[17, "graphnet.utilities.filesys.is_i3_file"]], "pop_default() (graphnet.utilities.argparse.options method)": [[17, "graphnet.utilities.argparse.Options.pop_default"]], "requires_icecube() (in module graphnet.utilities.imports)": [[17, "graphnet.utilities.imports.requires_icecube"]], "set_logging_level() (in module graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.set_logging_level"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[17, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "warn_once() (in module graphnet.utilities.logging)": [[17, "graphnet.utilities.logging.warn_once"]], "warning() (graphnet.utilities.logging.loggermixin method)": [[17, "graphnet.utilities.logging.LoggerMixin.warning"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[17, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[18, "graphnet.utilities.config.base_config.BaseConfig"]], "configurable (class in graphnet.utilities.config.configurable)": [[18, "graphnet.utilities.config.configurable.Configurable"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[18, "graphnet.utilities.config.model_config.ModelConfig"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[18, "graphnet.utilities.config.training_config.TrainingConfig"]], "__init__() (graphnet.utilities.config.configurable.configurable method)": [[18, "graphnet.utilities.config.configurable.Configurable.__init__"]], "__init__() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.__init__"]], "__init__() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig.__init__"]], "_construct_model() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig._construct_model"]], "_is_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig._is_model_config_entry"]], "_parse_if_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig._parse_if_model_config_entry"]], "_serialise() (graphnet.utilities.config.model_config.modelconfig class method)": [[18, "graphnet.utilities.config.model_config.ModelConfig._serialise"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[18, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[18, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "config (graphnet.utilities.config.configurable.configurable property)": [[18, "graphnet.utilities.config.configurable.Configurable.config"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[18, "graphnet.utilities.config.configurable.Configurable.from_config"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[18, "graphnet.utilities.config.base_config.get_all_argument_values"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config": [[18, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[18, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[18, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[18, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[18, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[18, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[18, "module-graphnet.utilities.config.training_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.list_all_submodules"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.load"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[18, "graphnet.utilities.config.configurable.Configurable.save_config"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[18, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[18, "graphnet.utilities.config.model_config.save_model_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.traverse_and_apply"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]]}})