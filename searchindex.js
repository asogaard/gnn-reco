Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.parquet.parquet_dataset", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_dataset", "api/graphnet.data.sqlite.sqlite_dataset_perturbed", "api/graphnet.data.sqlite.sqlite_selection", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graph_builders", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.parquet.parquet_dataset.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_dataset.rst", "api/graphnet.data.sqlite.sqlite_dataset_perturbed.rst", "api/graphnet.data.sqlite.sqlite_selection.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graph_builders.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3pisaextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "parquet", "parquet_dataconverter", "parquet_dataset", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_dataset", "sqlite_dataset_perturbed", "sqlite_selection", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "gnn", "graph_builders", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88], "i": [0, 1, 7, 9, 11, 19, 20, 21, 24, 27, 28, 29, 31, 34, 35, 39, 41, 44, 50, 51, 58, 59, 60, 61, 64, 66, 67, 68, 70, 72, 77, 78, 81, 82, 86, 87, 88], "an": [0, 5, 21, 23, 25, 27, 35, 68, 81, 83, 86, 87, 88], "open": [0, 86, 87], "sourc": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 39, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87], "python": [0, 1, 5, 8, 9, 11, 19, 21, 86, 87, 88], "framework": [0, 87], "aim": [0, 1, 86, 87], "provid": [0, 1, 7, 24, 28, 29, 39, 40, 68, 86, 87, 88], "high": [0, 87], "qualiti": [0, 87], "user": [0, 40, 66, 87, 88], "friendli": [0, 87], "end": [0, 1, 5, 23, 27, 87], "function": [0, 5, 6, 7, 21, 30, 31, 34, 39, 41, 44, 55, 58, 59, 60, 61, 63, 64, 68, 69, 71, 76, 77, 78, 81, 82, 84, 87], "perform": [0, 41, 43, 44, 49, 51, 56, 58, 59, 60, 87], "reconstruct": [0, 1, 10, 12, 14, 15, 17, 25, 36, 40, 57, 60, 87], "task": [0, 1, 40, 56, 58, 59, 68, 86, 87], "neutrino": [0, 1, 30, 63, 87], "telescop": [0, 1, 87], "us": [0, 1, 2, 4, 5, 6, 7, 9, 18, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 43, 44, 46, 51, 52, 55, 57, 58, 59, 60, 61, 63, 66, 68, 70, 71, 72, 73, 76, 77, 78, 82, 83, 86, 87, 88], "graph": [0, 1, 6, 7, 24, 28, 29, 39, 43, 44, 46, 54, 61, 67, 69, 86, 87], "neural": [0, 1, 87], "network": [0, 1, 50, 87], "gnn": [0, 1, 25, 40, 50, 51, 52, 56, 87, 88], "make": [0, 5, 70, 76, 77, 86, 87, 88], "fast": [0, 87, 88], "easi": [0, 87], "train": [0, 1, 29, 30, 35, 36, 39, 56, 66, 67, 68, 69, 70, 72, 76, 77, 79, 85, 87, 88], "complex": [0, 40, 87], "model": [0, 1, 29, 36, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 72, 74, 77, 79, 85, 87, 88], "can": [0, 1, 7, 9, 11, 24, 28, 29, 33, 44, 63, 64, 70, 74, 76, 77, 86, 87, 88], "event": [0, 1, 7, 24, 28, 29, 30, 31, 33, 35, 44, 58, 59, 60, 61, 63, 68, 70, 76, 87], "state": [0, 87], "art": [0, 87], "arbitrari": [0, 87], "detector": [0, 1, 16, 40, 47, 48, 56, 87], "configur": [0, 1, 7, 40, 54, 55, 56, 63, 71, 73, 76, 77, 79, 83, 87], "infer": [0, 1, 25, 36, 39, 56, 60, 87, 88], "time": [0, 4, 31, 41, 44, 47, 59, 83, 87, 88], "ar": [0, 1, 4, 5, 7, 11, 21, 23, 24, 27, 28, 29, 33, 35, 44, 51, 58, 63, 68, 70, 77, 86, 87, 88], "order": [0, 19, 41, 61, 87], "magnitud": [0, 87], "faster": [0, 87], "than": [0, 6, 58, 59, 60, 69, 83, 87], "tradit": [0, 87], "techniqu": [0, 87], "common": [0, 1, 68, 80, 82, 87], "ml": [0, 1, 87], "develop": [0, 1, 86, 87, 88], "physicist": [0, 1, 87], "wish": [0, 86, 87], "tool": [0, 1, 87], "research": [0, 87], "By": [0, 33, 58, 59, 60, 87], "unit": [0, 5, 82, 86, 87], "both": [0, 11, 58, 59, 60, 64, 87], "group": [0, 5, 23, 27, 44, 87], "increas": [0, 66, 87], "longev": [0, 87], "usabl": [0, 87], "individu": [0, 5, 7, 24, 28, 29, 44, 51, 61, 87], "code": [0, 16, 31, 76, 77, 87], "contribut": [0, 87, 88], "from": [0, 1, 6, 7, 8, 9, 11, 19, 20, 21, 24, 25, 27, 28, 29, 30, 33, 39, 44, 54, 55, 58, 59, 60, 61, 64, 66, 67, 68, 74, 75, 77, 79, 83, 86, 87, 88], "build": [0, 1, 40, 46, 54, 55, 74, 77, 87], "gener": [0, 5, 7, 11, 24, 28, 30, 39, 58, 68, 87], "reusabl": [0, 87], "softwar": [0, 68, 87], "packag": [0, 1, 34, 78, 81, 82, 86, 87, 88], "base": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 27, 28, 29, 33, 35, 39, 41, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 66, 67, 68, 70, 72, 74, 75, 76, 77, 79, 82, 83, 87], "engin": [0, 87], "best": [0, 86, 87], "practic": [0, 86, 87], "lower": [0, 64, 87], "technic": [0, 87], "threshold": [0, 39, 54, 87], "most": [0, 1, 35, 87, 88], "scientif": [0, 1, 87], "problem": [0, 86, 87], "The": [0, 5, 7, 19, 21, 24, 25, 28, 31, 39, 41, 43, 44, 51, 58, 59, 60, 61, 63, 64, 66, 67, 68, 83, 87], "improv": [0, 1, 72, 87], "classif": [0, 1, 40, 57, 60, 68, 87], "yield": [0, 51, 63, 68, 87], "veri": [0, 35, 87], "accur": [0, 87], "e": [0, 1, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 35, 39, 41, 43, 44, 46, 47, 48, 50, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 70, 74, 86, 87, 88], "g": [0, 1, 5, 7, 16, 19, 21, 23, 24, 25, 27, 28, 29, 31, 35, 39, 44, 58, 59, 60, 61, 70, 86, 87, 88], "low": [0, 87], "energi": [0, 4, 25, 58, 59, 60, 70, 87], "observ": [0, 87], "icecub": [0, 1, 10, 20, 21, 40, 45, 82, 87, 88], "here": [0, 86, 87, 88], "implement": [0, 1, 5, 9, 22, 23, 26, 27, 43, 50, 51, 52, 68, 86, 87], "wa": [0, 87], "appli": [0, 7, 9, 24, 28, 29, 44, 50, 51, 52, 53, 56, 78, 87], "oscil": [0, 62, 87], "lead": [0, 87], "signific": [0, 87], "angular": [0, 87], "rang": [0, 58, 59, 60, 87], "relev": [0, 1, 21, 34, 81, 86, 87], "studi": [0, 87], "furthermor": [0, 87], "shown": [0, 87], "could": [0, 86, 87], "muon": [0, 30, 87], "v": [0, 59, 87], "therebi": [0, 1, 76, 77, 87], "effici": [0, 87], "puriti": [0, 87], "sampl": [0, 35, 87], "analysi": [0, 25, 87, 88], "similarli": [0, 21, 87], "ha": [0, 5, 21, 23, 27, 31, 39, 50, 68, 81, 87, 88], "great": [0, 87], "point": [0, 15, 67, 68, 87], "analys": [0, 36, 62, 87], "final": [0, 44, 66, 76, 87], "millisecond": [0, 87], "allow": [0, 36, 40, 44, 66, 87, 88], "whole": [0, 87], "new": [0, 1, 43, 74, 79, 86, 87], "type": [0, 5, 6, 7, 8, 9, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 41, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87], "cosmic": [0, 87], "alert": [0, 87], "which": [0, 7, 9, 10, 20, 24, 25, 28, 29, 30, 35, 39, 41, 44, 51, 55, 58, 63, 68, 72, 87, 88], "were": [0, 87], "previous": [0, 87], "unfeas": [0, 87], "possibl": [0, 19, 86, 87], "identifi": [0, 5, 7, 16, 24, 28, 29, 77, 87], "10": [0, 25, 72, 87], "tev": [0, 87], "monitor": [0, 87], "rate": [0, 66, 87], "direct": [0, 58, 59, 60, 65, 67, 87], "real": [0, 87], "thi": [0, 3, 5, 7, 9, 11, 21, 23, 24, 27, 28, 29, 31, 34, 39, 40, 44, 46, 51, 56, 58, 59, 60, 61, 63, 64, 66, 68, 70, 74, 77, 86, 87, 88], "enabl": [0, 3, 83, 87], "first": [0, 66, 86, 87], "ever": [0, 87], "despit": [0, 87], "larg": [0, 68, 87], "background": [0, 87], "origin": [0, 63, 87], "compris": [0, 87], "number": [0, 5, 7, 23, 24, 25, 27, 28, 30, 35, 43, 44, 46, 47, 50, 51, 52, 53, 58, 59, 60, 66, 72, 87], "modul": [0, 3, 21, 25, 36, 39, 40, 43, 45, 49, 55, 57, 62, 65, 71, 73, 76, 77, 78, 79, 82, 87], "necessari": [0, 19, 86, 87], "workflow": [0, 87], "ingest": [0, 1, 3, 45, 87], "raw": [0, 87], "data": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 69, 72, 74, 76, 79, 82, 85, 87, 88], "domain": [0, 1, 3, 36, 87], "specif": [0, 1, 3, 5, 7, 10, 21, 22, 23, 24, 26, 27, 28, 30, 31, 36, 41, 44, 45, 46, 47, 48, 49, 53, 56, 57, 58, 59, 60, 68, 86, 87, 88], "format": [0, 1, 3, 5, 7, 19, 23, 27, 64, 76, 86, 87, 88], "deploi": [0, 1, 36, 39, 87], "chain": [0, 1, 36, 40, 56, 87, 88], "illustr": [0, 86, 87], "figur": [0, 64, 87], "level": [0, 7, 16, 24, 28, 29, 31, 41, 44, 83, 87, 88], "overview": [0, 87], "typic": [0, 19, 87], "convert": [0, 1, 3, 5, 19, 23, 27, 33, 87, 88], "industri": [0, 3, 87], "standard": [0, 3, 4, 5, 23, 27, 29, 35, 56, 72, 86, 87], "intermedi": [0, 1, 3, 5, 7, 23, 27, 50, 87, 88], "file": [0, 1, 3, 5, 7, 9, 19, 23, 24, 27, 28, 29, 33, 34, 39, 55, 63, 66, 68, 72, 73, 74, 75, 76, 77, 81, 83, 87, 88], "read": [0, 3, 7, 19, 24, 28, 29, 46, 51, 56, 57, 87, 88], "simpl": [0, 40, 87], "physic": [0, 1, 9, 20, 21, 30, 36, 39, 40, 57, 58, 59, 60, 87], "orient": [0, 40, 87], "compon": [0, 1, 40, 43, 44, 56, 87], "manag": [0, 9, 65, 87], "experi": [0, 1, 65, 87], "log": [0, 1, 59, 65, 66, 68, 71, 87, 88], "deploy": [0, 1, 37, 39, 85, 87], "modular": [0, 40, 87], "subclass": [0, 40, 87], "torch": [0, 7, 24, 28, 29, 40, 43, 55, 56, 82, 87, 88], "nn": [0, 40, 43, 87], "mean": [0, 5, 7, 23, 24, 27, 28, 29, 40, 51, 68, 77, 87], "onli": [0, 1, 7, 24, 28, 29, 40, 44, 58, 59, 60, 63, 70, 77, 82, 87, 88], "need": [0, 19, 40, 55, 68, 87, 88], "import": [0, 1, 31, 40, 71, 87], "few": [0, 40, 86, 87], "exist": [0, 7, 24, 25, 27, 28, 29, 31, 40, 76, 87], "purpos": [0, 40, 68, 87], "built": [0, 40, 87], "them": [0, 1, 19, 40, 51, 58, 59, 60, 63, 87, 88], "togeth": [0, 40, 56, 87], "form": [0, 40, 58, 74, 79, 87], "complet": [0, 40, 56, 87], "extend": [0, 1, 87], "suit": [0, 87], "through": [0, 68, 87], "layer": [0, 40, 42, 44, 50, 51, 52, 58, 59, 60, 87], "connect": [0, 54, 68, 87], "etc": [0, 68, 87], "optimis": [0, 1, 87], "differ": [0, 7, 9, 24, 28, 29, 56, 86, 87, 88], "track": [0, 9, 59, 86, 87], "These": [0, 86, 87], "prepar": [0, 68, 87], "satisfi": [0, 87], "o": [0, 58, 59, 60, 87], "load": [0, 6, 34, 55, 74, 76, 87], "requir": [0, 13, 31, 58, 68, 87, 88], "when": [0, 5, 7, 19, 23, 24, 27, 28, 29, 31, 43, 51, 86, 87, 88], "batch": [0, 6, 25, 41, 43, 44, 56, 61, 69, 72, 87], "do": [0, 68, 76, 77, 86, 87, 88], "predict": [0, 15, 17, 25, 39, 50, 55, 56, 58, 59, 60, 68, 69, 87], "either": [0, 7, 24, 28, 68, 87, 88], "contain": [0, 5, 7, 19, 20, 23, 24, 25, 27, 28, 29, 30, 39, 51, 55, 58, 59, 60, 68, 70, 72, 87, 88], "imag": [0, 1, 86, 87, 88], "portabl": [0, 87], "depend": [0, 87, 88], "free": [0, 68, 87], "split": [0, 41, 87], "up": [0, 5, 23, 27, 86, 87, 88], "interfac": [0, 62, 87, 88], "block": [0, 1, 87], "pre": [0, 29, 46, 86, 87], "directli": [0, 9, 83, 87], "while": [0, 11, 66, 87], "continu": [0, 68, 87], "expand": [0, 87], "": [0, 5, 6, 7, 9, 19, 24, 27, 28, 29, 33, 50, 51, 56, 58, 59, 60, 61, 66, 70, 72, 76, 77, 84, 87, 88], "capabl": [0, 87], "andrea": [0, 87], "s\u00f8gaard": [0, 87], "receiv": [0, 87], "fund": [0, 87], "european": [0, 87], "union": [0, 6, 7, 11, 19, 21, 24, 28, 29, 33, 39, 41, 43, 44, 51, 55, 56, 58, 59, 60, 68, 69, 72, 75, 76, 79, 81, 87], "horizon": [0, 87], "2020": [0, 87], "innov": [0, 87], "programm": [0, 87], "under": [0, 29, 87], "mari": [0, 87], "sk\u0142odowska": [0, 87], "curi": [0, 87], "grant": [0, 68, 87], "agreement": [0, 86, 87], "No": [0, 87], "890778": [0, 87], "work": [0, 4, 20, 86, 87, 88], "rasmu": [0, 52, 87], "\u00f8rs\u00f8e": [0, 87], "partli": [0, 87], "punch4nfdi": [0, 87], "consortium": [0, 87], "support": [0, 21, 86, 87, 88], "dfg": [0, 87], "nfdi": [0, 87], "39": [0, 87, 88], "1": [0, 5, 7, 19, 23, 27, 35, 41, 44, 51, 58, 59, 60, 61, 66, 68, 70, 76, 87, 88], "germani": [0, 87], "conveni": [1, 86, 88], "collabor": 1, "solv": [1, 86], "It": [1, 19, 31, 39, 86], "leverag": 1, "advanc": [1, 44], "machin": [1, 88], "learn": [1, 66, 88], "without": [1, 63, 68, 88], "have": [1, 5, 11, 23, 27, 31, 35, 44, 58, 59, 60, 86, 88], "expert": 1, "themselv": [1, 77], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 7, 9, 11, 23, 24, 27, 28, 29, 31, 39, 43, 44, 46, 51, 53, 55, 60, 68, 74, 75, 76, 77, 78, 79, 83, 86, 88], "streamlin": 1, "process": [1, 5, 9, 29, 30, 46, 51, 86, 88], "transform": [1, 44, 58, 59, 60, 70], "extens": [1, 81], "basic": 1, "across": [1, 2, 7, 21, 24, 28, 29, 32, 44, 56, 68, 71, 72, 73, 83], "variou": 1, "easili": 1, "architectur": [1, 50, 51, 52, 56], "main": [1, 49, 56, 86, 88], "featur": [1, 3, 4, 5, 7, 10, 24, 25, 28, 29, 39, 43, 44, 46, 47, 48, 50, 51, 52, 53, 58, 61, 69, 76, 86], "i3": [1, 5, 9, 20, 21, 23, 27, 34, 39, 81, 88], "more": [1, 7, 31, 34, 76, 77, 83], "index": [1, 5, 7, 21, 24, 28, 31, 44, 66], "sqlite": [1, 3, 25, 27, 28, 29, 30, 31, 33, 88], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 7, 46, 53, 55, 60, 75], "awai": 1, "detail": [1, 88], "expos": 1, "physicst": 1, "what": [1, 86], "i3modul": [1, 36, 39], "includ": [1, 29, 55, 63, 68, 74, 86], "docker": 1, "run": [1, 33], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 8, 36, 40, 71], "extractor": [1, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 39], "parquet": [1, 3, 23, 24, 33, 88], "util": [1, 3, 8, 19, 20, 21, 30, 31, 33, 34, 35, 40, 65, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85], "constant": [1, 3, 85], "dataconvert": [1, 3, 23, 27], "dataload": [1, 3, 25, 55, 56, 69, 79], "dataset": [1, 3, 6, 24, 28, 29, 35, 72, 76], "pipelin": [1, 3], "coarsen": [1, 40, 44, 56], "graph_build": [1, 40, 46, 47, 48], "standard_model": [1, 40], "pisa": [1, 13, 25, 63, 64, 82, 85, 88], "fit": [1, 55, 62, 64, 68, 70, 79], "plot": [1, 62], "callback": [1, 55, 65], "label": [1, 7, 50, 60, 64, 65, 69], "loss_funct": [1, 58, 59, 60, 65], "weight_fit": [1, 65], "config": [1, 6, 35, 63, 68, 71, 72, 74, 75, 76, 77, 78, 79], "argpars": [1, 71], "decor": [1, 5, 71, 82], "filesi": [1, 71], "math": [1, 71], "submodul": [1, 3, 8, 18, 22, 26, 32, 37, 40, 42, 45, 49, 57, 62, 65, 71, 73, 78], "global": [2, 4, 51, 55], "i3extractor": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 23, 27], "i3featureextractor": [3, 4, 8, 27, 39], "i3genericextractor": [3, 8, 27], "i3hybridrecoextractor": [3, 8], "i3pisaextractor": [3, 8], "i3retroextractor": [3, 8], "i3splinempeextractor": [3, 8], "i3truthextractor": [3, 4, 8], "i3tumextractor": [3, 8], "parquet_dataconvert": [3, 22], "parquet_dataset": [3, 22], "sqlite_dataconvert": [3, 26], "sqlite_dataset": [3, 26], "sqlite_dataset_perturb": [3, 26], "sqlite_select": [3, 26], "sqlite_util": [3, 26], "parquet_to_sqlit": [3, 32], "random": [3, 7, 24, 28, 30, 32, 35, 76], "string_selection_resolv": [3, 32], "truth": [3, 4, 7, 10, 16, 24, 25, 28, 29, 31, 69, 70, 76], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "collate_fn": [3, 6, 65, 69], "do_shuffl": [3, 6], "columnmissingexcept": [3, 7], "insqlitepipelin": [3, 25], "class": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 35, 39, 41, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 83, 86], "object": [4, 5, 7, 9, 11, 19, 21, 24, 28, 29, 39, 44, 46, 58, 59, 60, 63, 72, 83], "namespac": [4, 55], "name": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 27, 28, 29, 31, 33, 39, 58, 59, 60, 63, 67, 70, 72, 76, 78, 86, 88], "icecube86": [4, 45, 47], "dom_x": [4, 39, 47], "dom_i": [4, 39, 47], "dom_z": [4, 39, 47], "dom_tim": [4, 47], "charg": [4, 39, 47, 68], "rde": [4, 47], "pmt_area": [4, 47], "deepcor": [4, 10, 47], "upgrad": [4, 10, 47, 88], "string": [4, 5, 7, 19, 23, 24, 27, 28, 29, 35, 44, 47, 74], "pmt_number": [4, 47], "dom_numb": [4, 47], "pmt_dir_x": [4, 47], "pmt_dir_i": [4, 47], "pmt_dir_z": [4, 47], "dom_typ": [4, 47], "prometheu": [4, 40, 45], "sensor_pos_x": [4, 48], "sensor_pos_i": [4, 48], "sensor_pos_z": [4, 48], "t": [4, 21, 31, 48, 64, 66, 68, 88], "kaggl": [4, 47], "x": [4, 5, 16, 23, 27, 43, 44, 47, 55, 60, 61, 64, 68, 70], "y": [4, 16, 47, 61, 64, 88], "z": [4, 5, 16, 23, 27, 47, 61, 88], "auxiliari": [4, 47], "energy_track": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 59], "zenith": [4, 59], "pid": [4, 35, 76], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": 4, "inelast": [4, 59], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 9], "str": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 39, 41, 43, 44, 46, 51, 55, 56, 58, 59, 60, 63, 67, 69, 70, 72, 74, 75, 76, 77, 78, 79, 81, 83], "gcd_file": [5, 9, 39], "paramet": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 39, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84], "output_fil": [5, 23, 27], "global_index": 5, "avail": [5, 11, 25, 82], "pool": [5, 40, 41, 42, 51], "worker": [5, 23, 25, 27, 34, 72], "return": [5, 6, 7, 9, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 41, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84], "none": [5, 7, 9, 11, 16, 21, 23, 24, 25, 27, 28, 29, 31, 33, 43, 44, 51, 55, 56, 58, 59, 60, 63, 66, 69, 70, 72, 75, 76, 81, 83], "synchron": 5, "list": [5, 6, 7, 9, 11, 16, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 39, 41, 44, 46, 47, 48, 51, 54, 55, 56, 58, 59, 60, 61, 64, 66, 68, 69, 70, 76, 78, 79, 81], "process_method": 5, "cach": 5, "output": [5, 23, 27, 33, 46, 47, 50, 51, 52, 53, 55, 63, 70, 77, 83, 88], "typevar": 5, "f": [5, 44], "bound": [5, 64], "callabl": [5, 6, 7, 21, 43, 44, 58, 59, 60, 69, 70, 74, 76, 77, 78, 82], "ani": [5, 6, 7, 19, 20, 21, 23, 24, 27, 28, 43, 44, 51, 55, 56, 58, 60, 64, 68, 70, 72, 74, 75, 77, 78, 79, 83, 88], "outdir": [5, 23, 25, 27, 33, 63], "gcd_rescu": [5, 23, 27, 81], "nb_files_to_batch": [5, 23, 27], "sequential_batch_pattern": [5, 23, 27], "input_file_batch_pattern": [5, 23, 27], "index_column": [5, 7, 23, 24, 27, 28, 29, 31, 35, 55, 63, 69, 70, 76], "icetray_verbos": [5, 23, 27], "abc": [5, 7, 9, 25, 55, 67, 70, 75], "loggermixin": [5, 7, 9, 33, 35, 55, 67, 70, 71, 75, 83], "construct": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 27, 28, 29, 33, 35, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 66, 67, 68, 69, 70, 72, 75, 76, 77, 83], "regular": [5, 21, 23, 27], "express": [5, 23, 27, 55, 68], "accord": [5, 23, 27, 29, 41, 44, 54], "match": [5, 23, 27, 70, 81, 84], "certain": [5, 23, 27, 33, 63], "pattern": [5, 23, 27], "wildcard": [5, 23, 27], "same": [5, 21, 23, 27, 31, 41, 44, 58, 61, 66, 78], "input": [5, 7, 23, 24, 25, 27, 28, 29, 39, 46, 50, 51, 52, 53, 58, 60, 61, 74, 79], "replac": [5, 23, 27], "period": [5, 23, 27], "special": [5, 11, 23, 27, 39, 61], "interpret": [5, 23, 27, 58], "liter": [5, 23, 27], "charact": [5, 23, 27], "regex": [5, 23, 27], "For": [5, 21, 23, 27, 66], "instanc": [5, 7, 9, 16, 21, 23, 27, 55, 63, 67, 69, 75, 83, 88], "A": [5, 23, 25, 27, 39, 44, 61, 63, 68, 70, 88], "_": [5, 23, 27], "0": [5, 7, 23, 24, 27, 28, 30, 35, 39, 41, 44, 50, 51, 61, 63, 64, 68, 76, 88], "9": [5, 23, 27], "5": [5, 7, 23, 24, 27, 28, 35, 72, 88], "zst": [5, 23, 27], "find": [5, 23, 27, 81], "whose": [5, 23, 27], "one": [5, 7, 23, 27, 31, 39, 44, 55, 76, 77, 81, 86, 88], "capit": [5, 23, 27], "letter": [5, 23, 27], "follow": [5, 23, 27, 51, 56, 68, 70, 86, 88], "underscor": [5, 23, 27], "five": [5, 23, 27], "upgrade_genie_step4_141020_a_000000": [5, 23, 27], "upgrade_genie_step4_141020_a_000001": [5, 23, 27], "upgrade_genie_step4_141020_a_000008": [5, 23, 27], "upgrade_genie_step4_141020_a_000009": [5, 23, 27], "would": [5, 23, 27, 86], "upgrade_genie_step4_141020_a_00000x": [5, 23, 27], "suffix": [5, 23, 27], "upgrade_genie_step4_141020_a_000010": [5, 23, 27], "separ": [5, 19, 23, 27, 66, 88], "upgrade_genie_step4_141020_a_00001x": [5, 23, 27], "option": [5, 6, 7, 16, 20, 23, 24, 25, 27, 28, 29, 30, 33, 35, 43, 44, 51, 55, 56, 58, 59, 60, 63, 64, 68, 69, 70, 71, 72, 74, 76, 78, 81, 83, 88], "int": [5, 6, 7, 23, 24, 25, 27, 28, 29, 30, 35, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 68, 69, 70, 72, 76, 79, 83], "properti": [5, 7, 9, 21, 44, 46, 47, 53, 60, 75], "file_suffix": [5, 23, 27], "execut": [5, 31], "method": [5, 9, 18, 19, 20, 21, 23, 27, 39, 43, 44, 59, 68, 70], "set": [5, 11, 83, 86], "inherit": [5, 9, 21, 46, 68, 83], "path": [5, 7, 24, 28, 29, 30, 31, 34, 39, 55, 63, 64, 72, 74, 75, 76, 81, 88], "correspond": [5, 7, 19, 21, 24, 27, 28, 29, 34, 51, 70, 81, 88], "gcd": [5, 9, 20, 34, 39, 81], "save_data": [5, 23, 27], "save": [5, 9, 19, 23, 27, 31, 55, 63, 68, 69, 70, 74, 75, 76, 77, 83, 88], "ordereddict": [5, 23, 27], "extract": [5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 27, 33, 34, 39, 58, 59, 60], "merge_fil": [5, 23, 27], "input_fil": [5, 23, 27], "merg": [5, 23, 27, 68, 88], "result": [5, 23, 27, 44, 66, 68, 69, 78, 88], "default": [5, 7, 11, 16, 19, 23, 24, 25, 27, 28, 29, 30, 31, 33, 39, 43, 44, 46, 50, 51, 52, 55, 58, 59, 60, 63, 64, 66, 68, 70, 72, 74, 81], "current": [5, 23, 27, 35, 66, 86, 88], "rais": [5, 7, 11, 23, 55, 74, 79], "notimplementederror": [5, 23], "If": [5, 7, 11, 23, 25, 27, 55, 63, 66, 70, 86, 88], "been": [5, 23, 39, 68, 86], "backend": [5, 23, 27], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 7, 10, 11, 24, 27, 28, 29, 31, 39], "pure": [5, 8, 9, 11, 21], "multiprocess": [5, 88], "tupl": [5, 7, 20, 21, 24, 28, 30, 51, 58, 59, 60, 61, 63, 64, 69, 72, 83], "remov": [6, 69, 72], "less": [6, 69], "two": [6, 51, 63, 66, 68, 69], "dom": [6, 7, 24, 28, 29, 41, 44, 69], "hit": [6, 69], "should": [6, 7, 9, 19, 24, 28, 29, 35, 43, 44, 68, 69, 77, 86, 88], "occur": [6, 69], "product": [6, 69], "selection_nam": 6, "check": [6, 20, 21, 27, 31, 72, 81, 82, 86, 88], "whether": [6, 20, 21, 27, 31, 51, 55, 68, 78, 81, 82], "shuffl": [6, 34, 69], "select": [6, 7, 24, 28, 29, 30, 35, 69, 70, 76, 86], "bool": [6, 20, 21, 27, 31, 35, 41, 51, 55, 56, 63, 66, 68, 69, 70, 72, 78, 81, 82, 83], "batch_siz": [6, 25, 61, 69], "num_work": [6, 69], "persistent_work": [6, 69], "kwarg": [6, 43, 58, 60, 68, 70, 74, 83], "t_co": 6, "classmethod": [6, 7, 55, 68, 74, 75], "from_dataset_config": 6, "datasetconfig": [6, 7, 35, 73, 76], "dict": [6, 7, 11, 19, 21, 25, 27, 29, 46, 47, 48, 55, 56, 63, 64, 66, 68, 69, 72, 74, 76, 77, 78, 79], "except": 7, "indic": [7, 30, 35, 44, 66, 72, 86], "miss": 7, "column": [7, 24, 28, 29, 31, 39, 54, 55, 61, 63, 70], "pulsemap": [7, 10, 24, 27, 28, 29, 39, 69, 76], "node_truth": [7, 24, 28, 29, 69, 76], "truth_tabl": [7, 24, 28, 29, 63, 69, 70, 76], "node_truth_t": [7, 24, 28, 29, 69, 76], "string_select": [7, 24, 28, 29, 69, 76], "dtype": [7, 24, 28, 29, 84], "loss_weight_t": [7, 24, 28, 29, 69, 76], "loss_weight_column": [7, 24, 28, 29, 69, 76], "loss_weight_default_valu": [7, 24, 28, 29, 76], "seed": [7, 24, 28, 30, 35, 69, 76], "puls": [7, 10, 11, 20, 21, 24, 27, 28, 29, 31, 39, 41, 44, 61], "seri": [7, 10, 11, 20, 21, 24, 28, 29, 31], "node": [7, 24, 28, 29, 41, 44, 50, 51, 54, 58, 59, 60, 61], "multipl": [7, 9, 24, 28, 29, 66, 76], "store": [7, 9, 24, 25, 28, 29, 31, 63, 67], "ad": [7, 10, 24, 28, 29, 51, 63], "attribut": [7, 24, 28, 29, 41, 58, 59, 60], "event_no": [7, 24, 28, 29, 31, 35, 70, 76], "uniqu": [7, 24, 28, 29, 31, 33, 76], "indici": [7, 20, 24, 28, 29, 35, 68], "tabl": [7, 9, 24, 25, 28, 29, 31, 63, 70], "inform": [7, 9, 11, 16, 24, 28, 29, 64], "subset": [7, 24, 28, 29, 43, 51], "given": [7, 24, 28, 29, 44, 70], "queri": [7, 24, 28, 31, 35], "pass": [7, 24, 28, 43, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 68, 70, 86], "float32": [7, 24, 28, 29], "tensor": [7, 24, 28, 29, 41, 43, 44, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 68, 84], "per": [7, 11, 24, 28, 29, 31, 44, 58, 59, 60, 68, 70], "loss": [7, 24, 28, 29, 56, 58, 59, 60, 66, 68, 72], "weight": [7, 24, 28, 29, 58, 59, 60, 63, 68, 70, 77, 88], "also": [7, 24, 28, 29, 35, 76, 83], "assign": [7, 24, 28, 29, 33, 41, 44, 86], "float": [7, 24, 28, 29, 30, 39, 41, 50, 54, 55, 63, 64, 66, 68, 69, 76], "note": [7, 24, 28, 29, 64, 77], "valu": [7, 19, 24, 27, 28, 29, 31, 44, 64, 68, 72, 74], "specifi": [7, 24, 28, 29, 30, 35, 41, 58, 59, 60, 64, 66, 83, 88], "case": [7, 11, 24, 28, 29, 39, 44, 58, 59, 60, 88], "That": [7, 24, 28, 29, 51, 59, 67], "ignor": [7, 21, 24, 28, 29], "resolv": [7, 24, 28, 35], "10000": [7, 24, 28, 35], "20": [7, 24, 28, 35], "from_config": [7, 55, 75, 76, 77], "concatdataset": [7, 76], "concaten": [7, 19, 51], "query_t": [7, 24, 28], "sequential_index": [7, 24, 28], "some": [7, 24, 28], "out": [7, 51, 56, 57, 68, 83, 86, 88], "sequenti": 7, "len": 7, "self": [7, 63], "_may_": 7, "_indic": 7, "entir": [7, 55], "impos": 7, "befor": [7, 51, 58, 59, 60, 66], "scalar": [7, 61, 68], "length": [7, 21, 66], "element": [7, 19, 21, 56, 61, 78], "present": [7, 72, 81, 82], "add_label": 7, "kei": [7, 11, 19, 20, 21, 27, 31, 44, 67, 77], "fn": [7, 21, 74, 78], "add": [7, 51, 72, 86, 88], "custom": [7, 66], "defin": [7, 35, 39, 44, 76], "collect": [8, 9, 18, 68, 84], "i3fram": [8, 9, 11, 20, 21, 39], "frame": [8, 9, 11, 18, 21, 27, 39], "i3extractorcollect": [8, 9], "i3featureextractoricecube86": [8, 10], "i3featureextractoricecubedeepcor": [8, 10], "i3featureextractoricecubeupgrad": [8, 10], "i3pulsenoisetruthflagicecubeupgrad": [8, 10], "i3galacticplanehybridrecoextractor": [8, 12], "i3splinempeicextractor": [8, 15], "__call__": 9, "icetrai": [9, 20, 21, 39, 82], "keep": 9, "proven": 9, "set_fil": 9, "refer": [9, 76], "being": [9, 39, 58, 59, 60], "get": [9, 20, 30, 66, 69, 83, 88], "treat": 9, "singl": [9, 44, 51, 67, 76, 77], "86": [10, 47], "nois": [10, 20, 29, 30, 39], "flag": 10, "exclude_kei": 11, "dynam": [11, 43, 51, 52], "pars": [11, 64, 71, 72, 73, 74, 79], "call": [11, 21, 27, 44, 63, 70, 83], "tri": [11, 21], "automat": [11, 68, 86], "cast": [11, 21], "done": [11, 44, 86], "recurs": [11, 21, 78, 81], "each": [11, 19, 21, 31, 33, 34, 41, 44, 51, 54, 55, 58, 61, 63, 64, 66, 81], "look": [11, 88], "member": [11, 21, 76, 77, 83], "variabl": [11, 21, 51, 61, 70], "signatur": [11, 21], "similar": [11, 21, 88], "handl": [11, 68, 72], "hand": 11, "mc": [11, 27, 31], "tree": [11, 27], "trigger": 11, "exclud": [11, 33, 88], "valueerror": [11, 55], "hybrid": 12, "galatict": 12, "plane": [12, 68], "quantiti": [13, 58, 59, 60, 61], "retro": [14, 25], "splinemp": 15, "border": 16, "ndarrai": [16, 70], "arrai": [16, 19], "boundari": 16, "volum": 16, "coordin": [16, 61], "particl": [16, 31, 67], "start": [16, 86, 88], "stop": [16, 72], "within": [16, 41, 43, 44, 51], "hard": 16, "tum": 17, "dnn": 17, "flatten_nested_dictionari": [18, 19], "serialis": [18, 19], "transpose_list_of_dict": [18, 19], "frame_is_montecarlo": [18, 20], "frame_is_nois": [18, 20], "get_om_keys_and_pulseseri": [18, 20], "is_boost_enum": [18, 21], "is_boost_class": [18, 21], "is_icecube_class": [18, 21], "is_typ": [18, 21], "is_method": [18, 21], "break_cyclic_recurs": [18, 21], "get_member_vari": [18, 21], "cast_object_to_pure_python": [18, 21], "cast_pulse_series_to_pure_python": [18, 21], "manipul": 19, "obj": [19, 21, 78], "parent_kei": 19, "flatten": 19, "nest": 19, "dictionari": [19, 20, 21, 25, 27, 29, 63, 64, 77], "non": [19, 21, 27, 30, 31, 68, 83], "exampl": [19, 35, 41, 44, 68, 76, 77, 88], "d": [19, 86], "b": [19, 41, 44], "c": [19, 44, 68, 88], "2": [19, 44, 51, 59, 61, 63, 64, 68, 76], "a__b": 19, "applic": 19, "combin": [19, 76], "parent": 19, "__": [19, 21], "nester": 19, "json": [19, 76], "therefor": 19, "we": [19, 21, 35, 86, 88], "outer": 19, "abl": [19, 88], "de": 19, "transpos": 19, "mont": 20, "carlo": 20, "simul": 20, "pulseseri": 20, "calibr": [20, 21], "gcd_dict": [20, 21], "p": [20, 27, 68], "om": [20, 21], "dataclass": 20, "i3calibr": 20, "indicesfor": 20, "boost": 21, "enum": 21, "ensur": [21, 34, 68, 86, 88], "isn": 21, "return_discard": 21, "valid": [21, 35, 56, 58, 59, 60, 68, 72, 74, 79], "mangl": 21, "take": [21, 27, 44, 86], "mainli": 21, "cannot": [21, 74, 79], "trivial": [21, 60], "doe": [21, 77], "try": 21, "equival": 21, "its": 21, "like": [21, 44, 61, 68, 84, 86], "otherwis": [21, 68], "itself": [21, 58, 59, 60], "deem": 21, "wai": [21, 35, 86, 88], "represent": [21, 44], "optic": 21, "found": [21, 68], "parquetdataconvert": [22, 23], "parquetdataset": [22, 24], "pytorch": [24, 28, 29, 66, 88], "module_dict": 25, "devic": 25, "retro_table_nam": 25, "n_worker": [25, 63], "pipeline_nam": 25, "creat": [25, 31, 74, 75, 79, 86, 88], "databas": [25, 27, 28, 29, 30, 31, 33, 63, 70, 88], "initialis": [25, 77], "gnn_module_for_energy_regress": 25, "modulelist": 25, "comput": [25, 56, 58, 59, 60, 61, 68], "directori": [25, 33, 63, 81], "100": [25, 88], "size": [25, 44, 51, 52, 72], "alreadi": [25, 31, 88], "error": [25, 68, 83, 86], "prompt": 25, "avoid": [25, 86], "overwrit": [25, 66], "sqlitedataconvert": [26, 27, 88], "construct_datafram": [26, 27], "is_pulse_map": [26, 27], "is_mc_tre": [26, 27], "sqlitedataset": [26, 28, 29], "sqlitedatasetperturb": [26, 29], "get_desired_event_numb": [26, 30], "get_equal_proportion_neutrino_indic": [26, 30], "get_even_signal_background_indici": [26, 30], "get_even_track_cascade_indici": [26, 30], "get_even_dbang_select": [26, 30], "database_exist": [26, 31], "database_table_exist": [26, 31], "run_sql_cod": [26, 31], "save_to_sql": [26, 31], "attach_index": [26, 31], "create_t": [26, 31], "create_table_and_save_to_sql": [26, 31], "db": [27, 30, 69], "any_pulsemap_is_non_empti": 27, "data_dict": 27, "empti": 27, "retriev": 27, "splitinicepuls": 27, "least": [27, 86, 88], "true": [27, 31, 63, 66, 68, 70], "becaus": [27, 34], "instead": [27, 68], "alwai": 27, "panda": [27, 35, 70], "datafram": [27, 31, 35, 55, 63, 69, 70], "table_nam": [27, 31], "perturb": 29, "perturbation_dict": 29, "step": [29, 56, 66], "where": [29, 67], "randomli": [29, 35, 77], "intend": [29, 88], "test": [29, 30, 35, 58, 59, 60, 69, 76, 82, 86], "stabil": 29, "small": [29, 68], "chang": [29, 63, 68, 86], "deviat": 29, "desired_s": 30, "fraction_nois": 30, "fraction_muon": 30, "fraction_nu_": 30, "fraction_nu_mu": 30, "fraction_nu_tau": 30, "fraction": [30, 50], "nu_e": 30, "nu_mu": 30, "nu_tau": 30, "reed": 30, "equal": 30, "flavour": 30, "proport": 30, "42": [30, 88], "resp": 30, "cc": 30, "nc": 30, "mu": 30, "min_max_decay_length": 30, "dbang": 30, "database_path": [31, 63, 70], "df": 31, "must": [31, 41, 66, 70, 86], "attach": 31, "default_typ": 31, "null": 31, "integer_primary_kei": 31, "NOT": [31, 68], "integ": [31, 51, 52, 68], "primari": 31, "Such": 31, "row": 31, "appropri": [31, 58, 59, 60], "other": [31, 68, 86], "expect": [31, 35, 39], "doesn": 31, "parquettosqliteconvert": [32, 33], "pairwise_shuffl": [32, 34], "stringselectionresolv": [32, 35], "parquet_path": 33, "mc_truth_tabl": 33, "excluded_field": 33, "id": 33, "everi": [33, 88], "field": [33, 64, 67], "One": [33, 64], "choos": 33, "argument": [33, 70, 72, 74, 76, 77, 79], "exclude_field": 33, "database_nam": 33, "convers": [33, 88], "rng": 34, "relat": [34, 81], "i3_list": [34, 81], "gcd_list": [34, 81], "correpond": 34, "handi": 34, "even": 34, "files_list": 34, "gcd_shuffl": 34, "i3_shuffl": 34, "use_cach": 35, "flexibl": 35, "below": [35, 64, 70, 86, 88], "show": [35, 66], "involv": 35, "cover": 35, "yml": [35, 72, 76, 77], "50000": [35, 76], "ab": [35, 68, 76], "12": [35, 76], "14": [35, 76], "16": [35, 76], "13": [35, 88], "compat": 35, "syntax": [35, 68], "mai": [35, 46, 88], "fix": 35, "graphnet_modul": [36, 37], "graphneti3modul": [37, 39], "i3inferencemodul": [37, 39], "i3pulsecleanermodul": [37, 39], "pulsemap_extractor": 39, "produc": [39, 67, 70], "write": [39, 88], "constructor": 39, "associ": [39, 59, 68], "model_nam": [39, 63], "prediction_column": [39, 55, 69], "pulsmap": 39, "standardmodel": [39, 40, 56], "pickl": 39, "Will": 39, "help": [39, 72, 86], "entri": [39, 51, 64, 72], "dynedg": [39, 40, 49, 52], "energy_reco": 39, "clean": [39, 86, 88], "assum": [39, 46, 60, 61], "7": [39, 44, 63], "consid": [39, 88], "posit": [39, 44, 59], "signal": 39, "els": 39, "convnet": [40, 49], "dynedge_jinst": [40, 49], "unbatch_edge_index": [40, 41], "attributecoarsen": [40, 41], "domcoarsen": [40, 41], "customdomcoarsen": [40, 41], "domandtimewindowcoarsen": [40, 41], "graphbuild": [40, 46, 47, 48, 54], "knngraphbuild": [40, 54], "radialgraphbuild": [40, 54], "euclideangraphbuild": [40, 54], "calculate_xyzt_homophili": [40, 61], "calculate_distance_matrix": [40, 61], "knn_graph_batch": [40, 61], "oper": [41, 43, 49, 51], "cluster": [41, 43, 44, 51], "local": [41, 72], "edge_index": [41, 43, 61], "vector": [41, 44, 68], "longtensor": [41, 44, 61], "mathbf": [41, 44], "ldot": [41, 44], "n": [41, 44, 68], "reduc": 41, "transfer_attribut": 41, "reduce_opt": 41, "avg": 41, "avg_pool": 41, "avg_pool_x": 41, "max": [41, 43, 51, 68, 72], "max_pool": [41, 44], "max_pool_x": [41, 44], "min": [41, 44, 51], "min_pool": [41, 42, 44], "min_pool_x": [41, 42, 44], "sum": [41, 44, 51, 56], "sum_pool": [41, 42, 44], "sum_pool_x": [41, 42, 44], "forward": [41, 43, 46, 50, 51, 52, 53, 54, 55, 56, 60, 68], "simplecoarsen": 41, "addit": [41, 43, 55, 68, 70], "time_window": 41, "window": 41, "dynedgeconv": [42, 43, 51], "sum_pool_and_distribut": [42, 44], "group_bi": [42, 44], "group_pulses_to_dom": [42, 44], "group_pulses_to_pmt": [42, 44], "std_pool_x": [42, 44], "std_pool": [42, 44], "aggr": 43, "nb_neighbor": 43, "features_subset": [43, 51], "edgeconv": 43, "lightningmodul": [43, 55, 66], "edg": [43, 44, 51, 52, 61], "convolut": [43, 50, 51, 52], "mlp": [43, 51], "aggreg": [43, 44], "8": [43, 44, 51, 68, 86, 88], "neighbour": [43, 51, 54, 61], "after": [43, 51, 66, 72], "sequenc": 43, "slice": [43, 51], "sparsetensor": 43, "just": [44, 88], "negat": 44, "cluster_index": 44, "distribut": [44, 51, 59, 68, 70], "ident": [44, 60], "pmt": 44, "f1": 44, "f2": 44, "6": [44, 64, 86], "groupbi": 44, "3": [44, 50, 59, 61, 63, 64, 68, 86, 88], "matrix": [44, 61, 68], "mathbb": 44, "r": [44, 88], "n_1": 44, "n_b": 44, "maximum": [44, 58, 59, 60, 72], "obtain": [44, 68], "wise": 44, "dens": 44, "fc": 44, "known": 44, "std": 44, "repres": [44, 74, 77], "averag": [44, 68], "torch_geometr": 44, "version": [44, 58, 59, 60, 66, 86, 88], "standardis": 45, "icecubekaggl": [45, 47], "icecubedeepcor": [45, 47], "icecubeupgrad": [45, 47], "icecubeupgrade_v2": [45, 47], "scaler": [46, 47, 48], "ins": 46, "adjac": 46, "nb_input": [46, 50, 51, 52, 53, 58, 59, 60], "nb_output": [46, 47, 50, 52, 53, 58, 60], "overridden": 46, "competit": 47, "prototyp": 48, "learnabl": [49, 50, 51, 52, 53], "dynedgejinst": [49, 52], "author": [50, 52, 68], "martin": 50, "minh": 50, "nb_intermedi": 50, "dropout_ratio": 50, "dimens": [50, 51, 68], "128": [50, 51, 72], "drop": 50, "nb_neighbour": 51, "dynedge_layer_s": 51, "post_processing_layer_s": 51, "readout_layer_s": 51, "global_pooling_schem": 51, "add_global_variables_after_pool": 51, "k": [51, 54, 61, 68], "nearest": [51, 54, 61], "latent": [51, 58], "metric": [51, 66], "dimenion": 51, "multi": 51, "perceptron": 51, "256": 51, "336": 51, "hidden": [51, 52, 58, 60], "skip": 51, "post": 51, "_and_": 51, "As": 51, "last": [51, 58, 60, 66], "scheme": 51, "fals": [51, 55, 63, 66, 68, 70], "altern": [51, 68, 86], "exact": [52, 68], "2209": 52, "03042": 52, "oerso": 52, "layer_size_scal": 52, "4": [52, 59, 64], "scale": [52, 58, 59, 60, 68], "core": 53, "nb_nearest_neighbour": 54, "radiu": 54, "sphere": 54, "chosen": 54, "centr": 54, "sigma": 54, "euclidean": [54, 86], "distanc": [54, 61], "between": [54, 56, 61, 66, 68], "see": [54, 66, 86, 88], "http": [54, 68, 86], "arxiv": [54, 68], "org": [54, 68, 88], "pdf": 54, "1809": 54, "06166": 54, "train_dataload": 55, "val_dataload": 55, "max_epoch": 55, "gpu": [55, 56, 72, 88], "ckpt_path": 55, "logger": [55, 83], "log_every_n_step": 55, "gradient_clip_v": 55, "distribution_strategi": [55, 56], "trainer_kwarg": 55, "pytorch_lightn": 55, "trainer": [55, 66, 69], "predict_as_datafram": 55, "node_level": [55, 69], "additional_attribut": [55, 69], "save_state_dict": 55, "state_dict": 55, "load_state_dict": 55, "trust": 55, "load_modul": 55, "modelconfig": [55, 73, 77], "enough": 55, "eval": [55, 88], "lambda": 55, "definit": 55, "consequ": 55, "optimizer_class": 56, "optim": [56, 66], "adam": 56, "optimizer_kwarg": 56, "scheduler_class": 56, "scheduler_kwarg": 56, "scheduler_config": 56, "configure_optim": 56, "shared_step": 56, "batch_idx": 56, "share": 56, "calcul": [56, 61, 68], "training_step": 56, "train_batch": 56, "validation_step": 56, "val_batch": 56, "compute_loss": [56, 58, 59, 60], "pred": [56, 60], "verbos": [56, 66], "activ": [56, 60, 86, 88], "mode": [56, 60], "deactiv": [56, 60], "multiclassclassificationtask": [57, 58], "binaryclassificationtask": [57, 58], "binaryclassificationtasklogit": [57, 58], "azimuthreconstructionwithkappa": [57, 59], "azimuthreconstruct": [57, 59], "directionreconstructionwithkappa": [57, 59], "zenithreconstruct": [57, 59], "zenithreconstructionwithkappa": [57, 59], "energyreconstruct": [57, 59], "energyreconstructionwithpow": [57, 59], "energyreconstructionwithuncertainti": [57, 59], "vertexreconstruct": [57, 59], "positionreconstruct": [57, 59], "timereconstruct": [57, 59], "inelasticityreconstruct": [57, 59], "identitytask": [57, 58, 60], "arg": [58, 60, 68, 72, 74, 83], "classifi": 58, "untransform": 58, "logit": [58, 68], "affin": [58, 59, 60], "hidden_s": [58, 59, 60], "target_label": [58, 59, 60], "transform_prediction_and_target": [58, 59, 60], "transform_target": [58, 59, 60], "transform_infer": [58, 59, 60], "transform_support": [58, 59, 60], "loss_weight": [58, 59, 60], "binari": [58, 68], "feed": [58, 59, 60], "target": [58, 59, 60, 68, 79], "lossfunct": [58, 59, 60, 65, 68], "numer": [58, 59, 60], "stabl": [58, 59, 60, 88], "log10": [58, 59, 60, 70], "rather": [58, 59, 60], "conjunct": [58, 59, 60], "invers": [58, 59, 60], "recov": [58, 59, 60], "minimum": [58, 59, 60], "restrict": [58, 59, 60, 68], "invert": [58, 59, 60], "1e6": [58, 59, 60], "angl": 59, "kappa": [59, 68], "var": 59, "3d": [59, 68], "vmf": 59, "uncertainti": 59, "vertex": 59, "interact": 59, "hadron": 59, "wrt": 60, "train_ev": 60, "xyzt": 61, "homophili": 61, "measur": 61, "notic": [61, 68], "shape": [61, 68], "xyz_coord": 61, "pairwis": 61, "nb_dom": 61, "updat": [61, 63, 66], "config_updat": [62, 63], "weightfitt": [62, 63, 65, 70], "contourfitt": [62, 63], "read_entri": [62, 64], "plot_2d_contour": [62, 64], "plot_1d_contour": [62, 64], "contour": [63, 64], "config_path": 63, "new_config_path": 63, "dummy_sect": 63, "temp": 63, "dummi": 63, "section": 63, "header": 63, "configupdat": 63, "programat": 63, "statistical_fit": 63, "fit_weight": [63, 70], "config_outdir": 63, "weight_nam": [63, 70], "pisa_config_dict": 63, "add_to_databas": [63, 70], "flux": 63, "_database_path": 63, "statist": 63, "effect": [63, 66, 86], "account": 63, "systemat": 63, "hypersurfac": 63, "assumpt": 63, "regard": 63, "pipeline_path": 63, "post_fix": 63, "include_retro": 63, "fit_1d_contour": 63, "run_nam": 63, "config_dict": 63, "grid_siz": 63, "theta23_minmax": 63, "36": 63, "54": 63, "dm31_minmax": 63, "1d": [63, 64], "fit_2d_contour": 63, "2d": [63, 64, 68], "content": 64, "contour_data": 64, "xlim": 64, "ylim": 64, "0023799999999999997": 64, "0025499999999999997": 64, "chi2_critical_valu": 64, "width": 64, "height": 64, "path_to_pisa_fit_result": 64, "name_of_my_model_in_fit": 64, "legend": 64, "color": 64, "linestyl": 64, "style": [64, 86], "line": [64, 66, 72], "upper": 64, "axi": 64, "605": 64, "critic": [64, 83], "chi2": 64, "90": 64, "cl": 64, "right": [64, 68], "176": 64, "inch": 64, "388": 64, "706": 64, "abov": [64, 68, 70, 88], "352": 64, "piecewiselinearlr": [65, 66], "progressbar": [65, 66], "mseloss": [65, 68], "rmseloss": [65, 68], "logcoshloss": [65, 68], "crossentropyloss": [65, 68], "binarycrossentropyloss": [65, 68], "logcmk": [65, 68], "vonmisesfisherloss": [65, 68], "vonmisesfisher2dloss": [65, 68], "euclideandistanceloss": [65, 68], "vonmisesfisher3dloss": [65, 68], "make_dataload": [65, 69], "make_train_validation_dataload": [65, 69], "get_predict": [65, 69], "save_result": [65, 69], "uniform": [65, 70], "bjoernlow": [65, 70], "dure": 66, "mileston": 66, "factor": 66, "last_epoch": 66, "_lrschedul": 66, "interpol": 66, "linearli": 66, "denot": 66, "multipli": 66, "closest": 66, "vice": 66, "versa": 66, "wrap": [66, 77], "epoch": [66, 72], "print": [66, 83], "messag": [66, 83], "stdout": 66, "get_lr": 66, "refresh_r": 66, "process_posit": 66, "tqdmprogressbar": 66, "progress": 66, "bar": 66, "customis": 66, "lightn": 66, "init_validation_tqdm": 66, "overrid": 66, "init_predict_tqdm": 66, "init_test_tqdm": 66, "init_train_tqdm": 66, "get_metr": 66, "on_train_epoch_start": 66, "previou": 66, "behaviour": 66, "on_train_epoch_end": 66, "don": [66, 88], "duplciat": 66, "runtim": [67, 88], "azimuth_kei": 67, "zenith_kei": 67, "return_el": 68, "elementwis": 68, "term": 68, "squar": 68, "root": [68, 88], "cosh": 68, "act": 68, "cross": 68, "entropi": 68, "num_class": 68, "softmax": 68, "ed": 68, "probabl": 68, "mit": 68, "licens": 68, "copyright": 68, "2019": 68, "ryabinin": 68, "permiss": 68, "herebi": 68, "person": 68, "copi": 68, "document": 68, "deal": 68, "limit": 68, "modifi": 68, "publish": 68, "sublicens": 68, "sell": 68, "permit": 68, "whom": 68, "furnish": 68, "so": [68, 88], "subject": 68, "condit": 68, "shall": 68, "substanti": 68, "portion": 68, "THE": 68, "AS": 68, "warranti": 68, "OF": 68, "kind": 68, "OR": 68, "impli": 68, "BUT": 68, "TO": 68, "merchant": 68, "FOR": 68, "particular": [68, 86], "AND": 68, "noninfring": 68, "IN": 68, "NO": 68, "holder": 68, "BE": 68, "liabl": 68, "claim": 68, "damag": 68, "liabil": 68, "action": 68, "contract": 68, "tort": 68, "aris": 68, "WITH": 68, "_____________________": 68, "github": [68, 88], "com": [68, 88], "mryab": 68, "vmf_loss": 68, "blob": 68, "master": 68, "py": [68, 88], "bessel": 68, "exponenti": 68, "ditto": 68, "iv": 68, "1812": 68, "04616": 68, "spite": 68, "suggest": 68, "sec": 68, "paper": 68, "comparison": 68, "m": 68, "correct": 68, "static": [68, 86], "ctx": 68, "backward": 68, "grad_output": 68, "von": 68, "mise": 68, "fisher": 68, "log_cmk_exact": 68, "c_": 68, "exactli": [68, 83], "log_cmk_approx": 68, "approx": 68, "minu": 68, "sign": 68, "log_cmk": 68, "kappa_switch": 68, "sinc": 68, "diverg": 68, "700": 68, "float64": 68, "precis": 68, "unaccur": 68, "switch": 68, "three": 68, "database_indic": 69, "test_siz": 69, "tag": [69, 86, 88], "archiv": 69, "public": 70, "uniformweightfitt": 70, "bin": 70, "privat": 70, "_fit_weight": 70, "sql": 70, "desir": [70, 81], "space": 70, "np": 70, "happen": 70, "x_low": 70, "wherea": 70, "curv": 70, "base_config": [71, 73], "dataset_config": [71, 73], "model_config": [71, 73], "training_config": [71, 73], "argumentpars": [71, 72], "is_gcd_fil": [71, 81], "is_i3_fil": [71, 81], "has_extens": [71, 81], "find_i3_fil": [71, 81], "has_icecube_packag": [71, 82], "has_torch_packag": [71, 82], "has_pisa_packag": [71, 82], "requires_icecub": [71, 82], "set_logging_level": [71, 83], "get_formatt": [71, 83], "warn_onc": [71, 83], "repeatfilt": [71, 83], "get_logg": [71, 83, 88], "eps_lik": [71, 84], "consist": [72, 83, 86], "cli": 72, "pop_default": 72, "usag": 72, "descript": 72, "command": [72, 88], "standard_argu": 72, "home": [72, 88], "runner": 72, "lib": [72, 88], "python3": 72, "training_example_data_sqlit": 72, "earli": 72, "patienc": 72, "narg": 72, "50": 72, "example_energy_reconstruction_model": 72, "num": 72, "fetch": 72, "with_standard_argu": 72, "baseconfig": [73, 74, 75, 76, 77, 79], "get_all_argument_valu": [73, 74], "save_dataset_config": [73, 76], "save_model_config": [73, 77], "traverse_and_appli": [73, 78], "list_all_submodul": [73, 78], "get_all_grapnet_class": [73, 78], "is_graphnet_modul": [73, 78], "is_graphnet_class": [73, 78], "get_graphnet_class": [73, 78], "trainingconfig": [73, 79], "basemodel": [74, 77], "keyword": [74, 79], "validationerror": [74, 79], "dump": [74, 76, 77], "yaml": [74, 75], "as_dict": [74, 77], "overwritten": 74, "re": [75, 88], "save_config": 75, "dataconfig": 76, "transpar": [76, 77, 86], "reproduc": [76, 77], "In": [76, 77, 88], "session": [76, 77], "anoth": [76, 77], "you": [76, 77, 86, 88], "still": 76, "csv": 76, "train_select": 76, "test_select": 76, "init_fn": [76, 77], "__init__": [76, 77], "class_nam": 77, "trainabl": 77, "hyperparamet": 77, "instanti": 77, "thu": 77, "unambigu": 77, "fn_kwarg": 78, "structur": 78, "moduletyp": 78, "grapnet": 78, "lookup": 78, "early_stopping_pati": 79, "system": [81, 88], "filenam": 81, "dir": 81, "search": 81, "test_funct": 82, "colour": 83, "formatt": 83, "coloredformatt": 83, "warn": 83, "onc": 83, "filter": 83, "repeat": 83, "record": 83, "nb_repeats_allow": 83, "logrecord": 83, "log_fold": 83, "place": [83, 86], "termin": 83, "debug": 83, "loggeradapt": 83, "msg": 83, "deleg": 83, "info": [83, 88], "assort": 84, "ep": 84, "api": 85, "To": [86, 88], "sure": [86, 88], "smooth": 86, "guidelin": 86, "guid": 86, "encourag": 86, "contributor": 86, "discuss": 86, "bug": 86, "anyth": 86, "describ": 86, "yourself": 86, "ownership": 86, "prioriti": 86, "situat": 86, "lot": 86, "effort": 86, "go": 86, "turn": 86, "outsid": 86, "scope": 86, "project": 86, "solut": 86, "better": 86, "fork": 86, "repo": 86, "dedic": 86, "branch": [86, 88], "your": [86, 88], "repositori": 86, "graphbuil": 86, "builder": 86, "own": [86, 88], "team": 86, "accept": 86, "autom": 86, "review": 86, "pep8": 86, "docstr": 86, "googl": 86, "hint": 86, "adher": 86, "pep": 86, "pylint": 86, "flake8": 86, "black": 86, "well": 86, "recommend": [86, 88], "mypi": 86, "pydocstyl": 86, "docformatt": 86, "commit": 86, "hook": 86, "instal": 86, "come": 86, "pip": [86, 88], "Then": 86, "everytim": 86, "pep257": 86, "concept": 86, "ljvmiranda921": 86, "io": 86, "notebook": 86, "2018": 86, "06": 86, "21": 86, "precommit": 86, "environ": 88, "virtual": 88, "anaconda": 88, "prove": 88, "instruct": 88, "setup": 88, "want": 88, "part": 88, "achiev": 88, "bash": 88, "shell": 88, "cvmf": 88, "opensciencegrid": 88, "py3": 88, "v4": 88, "sh": 88, "rhel_7_x86_64": 88, "metaproject": 88, "combo": 88, "env": 88, "alia": 88, "script": 88, "With": 88, "now": 88, "light": 88, "extra": 88, "geometr": 88, "won": 88, "later": 88, "torch_cpu": 88, "txt": 88, "cpu": 88, "torch_gpu": 88, "prefer": 88, "unix": 88, "git": 88, "clone": 88, "usernam": 88, "cd": 88, "conda": 88, "gcc_linux": 88, "64": 88, "gxx_linux": 88, "libgcc": 88, "cudatoolkit": 88, "11": 88, "forg": 88, "torch_maco": 88, "On": 88, "maco": 88, "box": 88, "compil": 88, "gcc": 88, "date": 88, "possibli": 88, "cuda": 88, "toolkit": 88, "recent": 88, "omit": 88, "newer": 88, "export": 88, "ld_library_path": 88, "anaconda3": 88, "miniconda3": 88, "bashrc": 88, "librari": 88, "access": 88, "rm": 88, "asogaard": 88, "latest": 88, "dc423315742c": 88, "01_icetrai": 88, "01_convert_i3_fil": 88, "2023": 88, "01": 88, "24": 88, "41": 88, "27": 88, "graphnet_20230124": 88, "134127": 88, "46": 88, "convert_i3_fil": 88, "ic86": 88, "thread": 88, "00": 88, "79": 88, "26": 88, "413": 88, "88it": 88, "specialis": 88, "ones": 88, "push": 88, "vx": 88}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [36, 0, 0, "-", "deployment"], [40, 0, 0, "-", "models"], [62, 0, 0, "-", "pisa"], [65, 0, 0, "-", "training"], [71, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [6, 0, 0, "-", "dataloader"], [7, 0, 0, "-", "dataset"], [8, 0, 0, "-", "extractors"], [22, 0, 0, "-", "parquet"], [25, 0, 0, "-", "pipeline"], [26, 0, 0, "-", "sqlite"], [32, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[6, 1, 1, "", "DataLoader"], [6, 5, 1, "", "collate_fn"], [6, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[6, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[7, 6, 1, "", "ColumnMissingException"], [7, 1, 1, "", "Dataset"]], "graphnet.data.dataset.Dataset": [[7, 3, 1, "", "add_label"], [7, 3, 1, "", "concatenate"], [7, 3, 1, "", "from_config"], [7, 4, 1, "", "path"], [7, 3, 1, "", "query_table"], [7, 4, 1, "", "truth_table"]], "graphnet.data.extractors": [[9, 0, 0, "-", "i3extractor"], [10, 0, 0, "-", "i3featureextractor"], [11, 0, 0, "-", "i3genericextractor"], [12, 0, 0, "-", "i3hybridrecoextractor"], [13, 0, 0, "-", "i3pisaextractor"], [14, 0, 0, "-", "i3retroextractor"], [15, 0, 0, "-", "i3splinempeextractor"], [16, 0, 0, "-", "i3truthextractor"], [17, 0, 0, "-", "i3tumextractor"], [18, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[9, 1, 1, "", "I3Extractor"], [9, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[9, 4, 1, "", "name"], [9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[9, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[10, 1, 1, "", "I3FeatureExtractor"], [10, 1, 1, "", "I3FeatureExtractorIceCube86"], [10, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [10, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [10, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[11, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[13, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3retroextractor": [[14, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[15, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[16, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[17, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[19, 0, 0, "-", "collections"], [20, 0, 0, "-", "frames"], [21, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[19, 5, 1, "", "flatten_nested_dictionary"], [19, 5, 1, "", "serialise"], [19, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[20, 5, 1, "", "frame_is_montecarlo"], [20, 5, 1, "", "frame_is_noise"], [20, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[21, 5, 1, "", "break_cyclic_recursion"], [21, 5, 1, "", "cast_object_to_pure_python"], [21, 5, 1, "", "cast_pulse_series_to_pure_python"], [21, 5, 1, "", "get_member_variables"], [21, 5, 1, "", "is_boost_class"], [21, 5, 1, "", "is_boost_enum"], [21, 5, 1, "", "is_icecube_class"], [21, 5, 1, "", "is_method"], [21, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[23, 0, 0, "-", "parquet_dataconverter"], [24, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[23, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[23, 2, 1, "", "file_suffix"], [23, 3, 1, "", "merge_files"], [23, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[24, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[24, 3, 1, "", "query_table"]], "graphnet.data.pipeline": [[25, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.sqlite": [[27, 0, 0, "-", "sqlite_dataconverter"], [28, 0, 0, "-", "sqlite_dataset"], [29, 0, 0, "-", "sqlite_dataset_perturbed"], [30, 0, 0, "-", "sqlite_selection"], [31, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[27, 1, 1, "", "SQLiteDataConverter"], [27, 5, 1, "", "construct_dataframe"], [27, 5, 1, "", "is_mc_tree"], [27, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[27, 3, 1, "", "any_pulsemap_is_non_empty"], [27, 2, 1, "", "file_suffix"], [27, 3, 1, "", "merge_files"], [27, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[28, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[28, 3, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[29, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_selection": [[30, 5, 1, "", "get_desired_event_numbers"], [30, 5, 1, "", "get_equal_proportion_neutrino_indices"], [30, 5, 1, "", "get_even_dbang_selection"], [30, 5, 1, "", "get_even_signal_background_indicies"], [30, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[31, 5, 1, "", "attach_index"], [31, 5, 1, "", "create_table"], [31, 5, 1, "", "create_table_and_save_to_sql"], [31, 5, 1, "", "database_exists"], [31, 5, 1, "", "database_table_exists"], [31, 5, 1, "", "run_sql_code"], [31, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[33, 0, 0, "-", "parquet_to_sqlite"], [34, 0, 0, "-", "random"], [35, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[33, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[33, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[34, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[35, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[35, 3, 1, "", "resolve"]], "graphnet.deployment.i3modules": [[39, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[39, 1, 1, "", "GraphNeTI3Module"], [39, 1, 1, "", "I3InferenceModule"], [39, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.models": [[41, 0, 0, "-", "coarsening"], [42, 0, 0, "-", "components"], [45, 0, 0, "-", "detector"], [49, 0, 0, "-", "gnn"], [54, 0, 0, "-", "graph_builders"], [55, 0, 0, "-", "model"], [56, 0, 0, "-", "standard_model"], [57, 0, 0, "-", "task"], [61, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[41, 1, 1, "", "AttributeCoarsening"], [41, 1, 1, "", "Coarsening"], [41, 1, 1, "", "CustomDOMCoarsening"], [41, 1, 1, "", "DOMAndTimeWindowCoarsening"], [41, 1, 1, "", "DOMCoarsening"], [41, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[41, 3, 1, "", "forward"], [41, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[43, 0, 0, "-", "layers"], [44, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[43, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[43, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[44, 5, 1, "", "group_by"], [44, 5, 1, "", "group_pulses_to_dom"], [44, 5, 1, "", "group_pulses_to_pmt"], [44, 5, 1, "", "min_pool"], [44, 5, 1, "", "min_pool_x"], [44, 5, 1, "", "std_pool"], [44, 5, 1, "", "std_pool_x"], [44, 5, 1, "", "sum_pool"], [44, 5, 1, "", "sum_pool_and_distribute"], [44, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[46, 0, 0, "-", "detector"], [47, 0, 0, "-", "icecube"], [48, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[46, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[46, 4, 1, "", "features"], [46, 3, 1, "", "forward"], [46, 4, 1, "", "nb_inputs"], [46, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[47, 1, 1, "", "IceCube86"], [47, 1, 1, "", "IceCubeDeepCore"], [47, 1, 1, "", "IceCubeKaggle"], [47, 1, 1, "", "IceCubeUpgrade"], [47, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[47, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[47, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[47, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[47, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[47, 2, 1, "", "features"], [47, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[48, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[48, 2, 1, "", "features"]], "graphnet.models.gnn": [[50, 0, 0, "-", "convnet"], [51, 0, 0, "-", "dynedge"], [52, 0, 0, "-", "dynedge_jinst"], [53, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[50, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[50, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[51, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[51, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[52, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[52, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[53, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[53, 3, 1, "", "forward"], [53, 4, 1, "", "nb_inputs"], [53, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[54, 1, 1, "", "EuclideanGraphBuilder"], [54, 1, 1, "", "GraphBuilder"], [54, 1, 1, "", "KNNGraphBuilder"], [54, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[54, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[54, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[54, 3, 1, "", "forward"]], "graphnet.models.model": [[55, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[55, 3, 1, "", "fit"], [55, 3, 1, "", "forward"], [55, 3, 1, "", "from_config"], [55, 3, 1, "", "load"], [55, 3, 1, "", "load_state_dict"], [55, 3, 1, "", "predict"], [55, 3, 1, "", "predict_as_dataframe"], [55, 3, 1, "", "save"], [55, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[56, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[56, 3, 1, "", "compute_loss"], [56, 3, 1, "", "configure_optimizers"], [56, 3, 1, "", "forward"], [56, 3, 1, "", "inference"], [56, 3, 1, "", "predict"], [56, 3, 1, "", "shared_step"], [56, 3, 1, "", "train"], [56, 3, 1, "", "training_step"], [56, 3, 1, "", "validation_step"]], "graphnet.models.task": [[58, 0, 0, "-", "classification"], [59, 0, 0, "-", "reconstruction"], [60, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[58, 1, 1, "", "BinaryClassificationTask"], [58, 1, 1, "", "BinaryClassificationTaskLogits"], [58, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[58, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[59, 1, 1, "", "AzimuthReconstruction"], [59, 1, 1, "", "AzimuthReconstructionWithKappa"], [59, 1, 1, "", "DirectionReconstructionWithKappa"], [59, 1, 1, "", "EnergyReconstruction"], [59, 1, 1, "", "EnergyReconstructionWithPower"], [59, 1, 1, "", "EnergyReconstructionWithUncertainty"], [59, 1, 1, "", "InelasticityReconstruction"], [59, 1, 1, "", "PositionReconstruction"], [59, 1, 1, "", "TimeReconstruction"], [59, 1, 1, "", "VertexReconstruction"], [59, 1, 1, "", "ZenithReconstruction"], [59, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[59, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[60, 1, 1, "", "IdentityTask"], [60, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[60, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[60, 3, 1, "", "compute_loss"], [60, 3, 1, "", "forward"], [60, 3, 1, "", "inference"], [60, 4, 1, "", "nb_inputs"], [60, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[61, 5, 1, "", "calculate_distance_matrix"], [61, 5, 1, "", "calculate_xyzt_homophily"], [61, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[63, 0, 0, "-", "fitting"], [64, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[63, 1, 1, "", "ContourFitter"], [63, 1, 1, "", "WeightFitter"], [63, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[63, 3, 1, "", "fit_1d_contour"], [63, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[63, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[64, 5, 1, "", "plot_1D_contour"], [64, 5, 1, "", "plot_2D_contour"], [64, 5, 1, "", "read_entry"]], "graphnet.training": [[66, 0, 0, "-", "callbacks"], [67, 0, 0, "-", "labels"], [68, 0, 0, "-", "loss_functions"], [69, 0, 0, "-", "utils"], [70, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[66, 1, 1, "", "PiecewiseLinearLR"], [66, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[66, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[66, 3, 1, "", "get_metrics"], [66, 3, 1, "", "init_predict_tqdm"], [66, 3, 1, "", "init_test_tqdm"], [66, 3, 1, "", "init_train_tqdm"], [66, 3, 1, "", "init_validation_tqdm"], [66, 3, 1, "", "on_train_epoch_end"], [66, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[67, 1, 1, "", "Direction"], [67, 1, 1, "", "Label"]], "graphnet.training.loss_functions": [[68, 1, 1, "", "BinaryCrossEntropyLoss"], [68, 1, 1, "", "CrossEntropyLoss"], [68, 1, 1, "", "EuclideanDistanceLoss"], [68, 1, 1, "", "LogCMK"], [68, 1, 1, "", "LogCoshLoss"], [68, 1, 1, "", "LossFunction"], [68, 1, 1, "", "MSELoss"], [68, 1, 1, "", "RMSELoss"], [68, 1, 1, "", "VonMisesFisher2DLoss"], [68, 1, 1, "", "VonMisesFisher3DLoss"], [68, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[68, 3, 1, "", "backward"], [68, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[68, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[68, 3, 1, "", "log_cmk"], [68, 3, 1, "", "log_cmk_approx"], [68, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[69, 5, 1, "", "collate_fn"], [69, 5, 1, "", "get_predictions"], [69, 5, 1, "", "make_dataloader"], [69, 5, 1, "", "make_train_validation_dataloader"], [69, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[70, 1, 1, "", "BjoernLow"], [70, 1, 1, "", "Uniform"], [70, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[70, 3, 1, "", "fit"]], "graphnet.utilities": [[72, 0, 0, "-", "argparse"], [73, 0, 0, "-", "config"], [80, 0, 0, "-", "decorators"], [81, 0, 0, "-", "filesys"], [82, 0, 0, "-", "imports"], [83, 0, 0, "-", "logging"], [84, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[72, 1, 1, "", "ArgumentParser"], [72, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[72, 2, 1, "", "standard_arguments"], [72, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[72, 3, 1, "", "contains"], [72, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[74, 0, 0, "-", "base_config"], [75, 0, 0, "-", "configurable"], [76, 0, 0, "-", "dataset_config"], [77, 0, 0, "-", "model_config"], [78, 0, 0, "-", "parsing"], [79, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[74, 1, 1, "", "BaseConfig"], [74, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[74, 3, 1, "", "as_dict"], [74, 3, 1, "", "dump"], [74, 3, 1, "", "load"]], "graphnet.utilities.config.configurable": [[75, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[75, 4, 1, "", "config"], [75, 3, 1, "", "from_config"], [75, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[76, 1, 1, "", "DatasetConfig"], [76, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[76, 2, 1, "", "features"], [76, 2, 1, "", "index_column"], [76, 2, 1, "", "loss_weight_column"], [76, 2, 1, "", "loss_weight_default_value"], [76, 2, 1, "", "loss_weight_table"], [76, 2, 1, "", "node_truth"], [76, 2, 1, "", "node_truth_table"], [76, 2, 1, "", "path"], [76, 2, 1, "", "pulsemaps"], [76, 2, 1, "", "seed"], [76, 2, 1, "", "selection"], [76, 2, 1, "", "string_selection"], [76, 2, 1, "", "truth"], [76, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[77, 1, 1, "", "ModelConfig"], [77, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[77, 2, 1, "", "arguments"], [77, 3, 1, "", "as_dict"], [77, 2, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[78, 5, 1, "", "get_all_grapnet_classes"], [78, 5, 1, "", "get_graphnet_classes"], [78, 5, 1, "", "is_graphnet_class"], [78, 5, 1, "", "is_graphnet_module"], [78, 5, 1, "", "list_all_submodules"], [78, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[79, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[79, 2, 1, "", "dataloader"], [79, 2, 1, "", "early_stopping_patience"], [79, 2, 1, "", "fit"], [79, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[81, 5, 1, "", "find_i3_files"], [81, 5, 1, "", "has_extension"], [81, 5, 1, "", "is_gcd_file"], [81, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[82, 5, 1, "", "has_icecube_package"], [82, 5, 1, "", "has_pisa_package"], [82, 5, 1, "", "has_torch_package"], [82, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[83, 1, 1, "", "LoggerMixin"], [83, 1, 1, "", "RepeatFilter"], [83, 5, 1, "", "get_formatters"], [83, 5, 1, "", "get_logger"], [83, 5, 1, "", "set_logging_level"], [83, 5, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[83, 3, 1, "", "critical"], [83, 3, 1, "", "debug"], [83, 3, 1, "", "error"], [83, 3, 1, "", "info"], [83, 3, 1, "", "warning"]], "graphnet.utilities.logging.RepeatFilter": [[83, 3, 1, "", "filter"]], "graphnet.utilities.maths": [[84, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 87], "impact": [0, 87], "usag": [0, 87], "acknowledg": [0, 87], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": 7, "extractor": 8, "i3extractor": 9, "i3featureextractor": 10, "i3genericextractor": 11, "i3hybridrecoextractor": 12, "i3pisaextractor": 13, "i3retroextractor": 14, "i3splinempeextractor": 15, "i3truthextractor": 16, "i3tumextractor": 17, "util": [18, 32, 61, 69, 71], "collect": 19, "frame": 20, "type": 21, "parquet": 22, "parquet_dataconvert": 23, "parquet_dataset": 24, "pipelin": 25, "sqlite": 26, "sqlite_dataconvert": 27, "sqlite_dataset": 28, "sqlite_dataset_perturb": 29, "sqlite_select": 30, "sqlite_util": 31, "parquet_to_sqlit": 33, "random": 34, "string_selection_resolv": 35, "deploy": [36, 38], "i3modul": 37, "graphnet_modul": 39, "model": [40, 55], "coarsen": 41, "compon": 42, "layer": 43, "pool": 44, "detector": [45, 46], "icecub": 47, "prometheu": 48, "gnn": [49, 53], "convnet": 50, "dynedg": 51, "dynedge_jinst": 52, "graph_build": 54, "standard_model": 56, "task": [57, 60], "classif": 58, "reconstruct": 59, "pisa": 62, "fit": 63, "plot": 64, "train": 65, "callback": 66, "label": 67, "loss_funct": 68, "weight_fit": 70, "argpars": 72, "config": 73, "base_config": 74, "configur": 75, "dataset_config": 76, "model_config": 77, "pars": 78, "training_config": 79, "decor": 80, "filesi": 81, "import": 82, "log": 83, "math": 84, "src": 85, "contribut": 86, "github": 86, "issu": 86, "pull": 86, "request": 86, "convent": 86, "code": 86, "qualiti": 86, "instal": 88, "icetrai": 88, "stand": 88, "alon": 88, "run": 88, "docker": 88}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [87, "about"]], "Impact": [[0, "impact"], [87, "impact"]], "Usage": [[0, "usage"], [87, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [87, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "module-graphnet.data.dataloader"]], "dataset": [[7, "module-graphnet.data.dataset"]], "extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3pisaextractor": [[13, "module-graphnet.data.extractors.i3pisaextractor"]], "i3retroextractor": [[14, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[15, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[16, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[17, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[18, "module-graphnet.data.extractors.utilities"], [32, "module-graphnet.data.utilities"], [71, "module-graphnet.utilities"]], "collections": [[19, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[20, "module-graphnet.data.extractors.utilities.frames"]], "types": [[21, "module-graphnet.data.extractors.utilities.types"]], "parquet": [[22, "module-graphnet.data.parquet"]], "parquet_dataconverter": [[23, "module-graphnet.data.parquet.parquet_dataconverter"]], "parquet_dataset": [[24, "module-graphnet.data.parquet.parquet_dataset"]], "pipeline": [[25, "module-graphnet.data.pipeline"]], "sqlite": [[26, "module-graphnet.data.sqlite"]], "sqlite_dataconverter": [[27, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_dataset": [[28, "module-graphnet.data.sqlite.sqlite_dataset"]], "sqlite_dataset_perturbed": [[29, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "sqlite_selection": [[30, "module-graphnet.data.sqlite.sqlite_selection"]], "sqlite_utilities": [[31, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[33, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[34, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[35, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[36, "module-graphnet.deployment"]], "i3modules": [[37, "i3modules"]], "deployer": [[38, "deployer"]], "graphnet_module": [[39, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[40, "module-graphnet.models"]], "coarsening": [[41, "module-graphnet.models.coarsening"]], "components": [[42, "module-graphnet.models.components"]], "layers": [[43, "module-graphnet.models.components.layers"]], "pool": [[44, "module-graphnet.models.components.pool"]], "detector": [[45, "module-graphnet.models.detector"], [46, "module-graphnet.models.detector.detector"]], "icecube": [[47, "module-graphnet.models.detector.icecube"]], "prometheus": [[48, "module-graphnet.models.detector.prometheus"]], "gnn": [[49, "module-graphnet.models.gnn"], [53, "module-graphnet.models.gnn.gnn"]], "convnet": [[50, "module-graphnet.models.gnn.convnet"]], "dynedge": [[51, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[52, "module-graphnet.models.gnn.dynedge_jinst"]], "graph_builders": [[54, "module-graphnet.models.graph_builders"]], "model": [[55, "module-graphnet.models.model"]], "standard_model": [[56, "module-graphnet.models.standard_model"]], "task": [[57, "module-graphnet.models.task"], [60, "module-graphnet.models.task.task"]], "classification": [[58, "module-graphnet.models.task.classification"]], "reconstruction": [[59, "module-graphnet.models.task.reconstruction"]], "utils": [[61, "module-graphnet.models.utils"], [69, "module-graphnet.training.utils"]], "pisa": [[62, "module-graphnet.pisa"]], "fitting": [[63, "module-graphnet.pisa.fitting"]], "plotting": [[64, "module-graphnet.pisa.plotting"]], "training": [[65, "module-graphnet.training"]], "callbacks": [[66, "module-graphnet.training.callbacks"]], "labels": [[67, "module-graphnet.training.labels"]], "loss_functions": [[68, "module-graphnet.training.loss_functions"]], "weight_fitting": [[70, "module-graphnet.training.weight_fitting"]], "argparse": [[72, "module-graphnet.utilities.argparse"]], "config": [[73, "module-graphnet.utilities.config"]], "base_config": [[74, "module-graphnet.utilities.config.base_config"]], "configurable": [[75, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[76, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[77, "module-graphnet.utilities.config.model_config"]], "parsing": [[78, "module-graphnet.utilities.config.parsing"]], "training_config": [[79, "module-graphnet.utilities.config.training_config"]], "decorators": [[80, "module-graphnet.utilities.decorators"]], "filesys": [[81, "module-graphnet.utilities.filesys"]], "imports": [[82, "module-graphnet.utilities.imports"]], "logging": [[83, "module-graphnet.utilities.logging"]], "maths": [[84, "module-graphnet.utilities.maths"]], "src": [[85, "src"]], "Contribute": [[86, "contribute"]], "GitHub issues": [[86, "github-issues"]], "Pull requests": [[86, "pull-requests"]], "Conventions": [[86, "conventions"]], "Code quality": [[86, "code-quality"]], "Install": [[88, "install"]], "Installing with IceTray": [[88, "installing-with-icetray"]], "Installing stand-alone": [[88, "installing-stand-alone"]], "Running in Docker": [[88, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [6, "module-graphnet.data.dataloader"], [7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.extractors"], [9, "module-graphnet.data.extractors.i3extractor"], [10, "module-graphnet.data.extractors.i3featureextractor"], [11, "module-graphnet.data.extractors.i3genericextractor"], [12, "module-graphnet.data.extractors.i3hybridrecoextractor"], [13, "module-graphnet.data.extractors.i3pisaextractor"], [14, "module-graphnet.data.extractors.i3retroextractor"], [15, "module-graphnet.data.extractors.i3splinempeextractor"], [16, "module-graphnet.data.extractors.i3truthextractor"], [17, "module-graphnet.data.extractors.i3tumextractor"], [18, "module-graphnet.data.extractors.utilities"], [19, "module-graphnet.data.extractors.utilities.collections"], [20, "module-graphnet.data.extractors.utilities.frames"], [21, "module-graphnet.data.extractors.utilities.types"], [22, "module-graphnet.data.parquet"], [23, "module-graphnet.data.parquet.parquet_dataconverter"], [24, "module-graphnet.data.parquet.parquet_dataset"], [25, "module-graphnet.data.pipeline"], [26, "module-graphnet.data.sqlite"], [27, "module-graphnet.data.sqlite.sqlite_dataconverter"], [28, "module-graphnet.data.sqlite.sqlite_dataset"], [29, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [30, "module-graphnet.data.sqlite.sqlite_selection"], [31, "module-graphnet.data.sqlite.sqlite_utilities"], [32, "module-graphnet.data.utilities"], [33, "module-graphnet.data.utilities.parquet_to_sqlite"], [34, "module-graphnet.data.utilities.random"], [35, "module-graphnet.data.utilities.string_selection_resolver"], [36, "module-graphnet.deployment"], [39, "module-graphnet.deployment.i3modules.graphnet_module"], [40, "module-graphnet.models"], [41, "module-graphnet.models.coarsening"], [42, "module-graphnet.models.components"], [43, "module-graphnet.models.components.layers"], [44, "module-graphnet.models.components.pool"], [45, "module-graphnet.models.detector"], [46, "module-graphnet.models.detector.detector"], [47, "module-graphnet.models.detector.icecube"], [48, "module-graphnet.models.detector.prometheus"], [49, "module-graphnet.models.gnn"], [50, "module-graphnet.models.gnn.convnet"], [51, "module-graphnet.models.gnn.dynedge"], [52, "module-graphnet.models.gnn.dynedge_jinst"], [53, "module-graphnet.models.gnn.gnn"], [54, "module-graphnet.models.graph_builders"], [55, "module-graphnet.models.model"], [56, "module-graphnet.models.standard_model"], [57, "module-graphnet.models.task"], [58, "module-graphnet.models.task.classification"], [59, "module-graphnet.models.task.reconstruction"], [60, "module-graphnet.models.task.task"], [61, "module-graphnet.models.utils"], [62, "module-graphnet.pisa"], [63, "module-graphnet.pisa.fitting"], [64, "module-graphnet.pisa.plotting"], [65, "module-graphnet.training"], [66, "module-graphnet.training.callbacks"], [67, "module-graphnet.training.labels"], [68, "module-graphnet.training.loss_functions"], [69, "module-graphnet.training.utils"], [70, "module-graphnet.training.weight_fitting"], [71, "module-graphnet.utilities"], [72, "module-graphnet.utilities.argparse"], [73, "module-graphnet.utilities.config"], [74, "module-graphnet.utilities.config.base_config"], [75, "module-graphnet.utilities.config.configurable"], [76, "module-graphnet.utilities.config.dataset_config"], [77, "module-graphnet.utilities.config.model_config"], [78, "module-graphnet.utilities.config.parsing"], [79, "module-graphnet.utilities.config.training_config"], [80, "module-graphnet.utilities.decorators"], [81, "module-graphnet.utilities.filesys"], [82, "module-graphnet.utilities.imports"], [83, "module-graphnet.utilities.logging"], [84, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "dataloader (class in graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[6, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[6, "module-graphnet.data.dataloader"]], "columnmissingexception": [[7, "graphnet.data.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset)": [[7, "graphnet.data.dataset.Dataset"]], "add_label() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset class method)": [[7, "graphnet.data.dataset.Dataset.from_config"]], "graphnet.data.dataset": [[7, "module-graphnet.data.dataset"]], "path (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset method)": [[7, "graphnet.data.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset property)": [[7, "graphnet.data.dataset.Dataset.truth_table"]], "graphnet.data.extractors": [[8, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[9, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[9, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[9, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[10, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[10, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[11, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[11, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[12, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[12, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[13, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[13, "module-graphnet.data.extractors.i3pisaextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[14, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[14, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[15, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[15, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[16, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[16, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[17, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[17, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[18, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[19, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[19, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[19, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[19, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[20, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[20, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[20, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[20, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[21, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[21, "graphnet.data.extractors.utilities.types.is_type"]], "graphnet.data.parquet": [[22, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[23, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[23, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[23, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[23, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[23, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[24, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.parquet.parquet_dataset": [[24, "module-graphnet.data.parquet.parquet_dataset"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[24, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[25, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[25, "module-graphnet.data.pipeline"]], "graphnet.data.sqlite": [[26, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[27, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[27, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[28, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset": [[28, "module-graphnet.data.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[28, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[29, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[29, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[30, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_selection": [[30, "module-graphnet.data.sqlite.sqlite_selection"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[31, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[31, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[32, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[33, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[33, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[33, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[34, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[34, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[35, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[35, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[35, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[36, "module-graphnet.deployment"]], "graphneti3module (class in graphnet.deployment.i3modules.graphnet_module)": [[39, "graphnet.deployment.i3modules.graphnet_module.GraphNeTI3Module"]], "i3inferencemodule (class in graphnet.deployment.i3modules.graphnet_module)": [[39, "graphnet.deployment.i3modules.graphnet_module.I3InferenceModule"]], "i3pulsecleanermodule (class in graphnet.deployment.i3modules.graphnet_module)": [[39, "graphnet.deployment.i3modules.graphnet_module.I3PulseCleanerModule"]], "graphnet.deployment.i3modules.graphnet_module": [[39, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[40, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[41, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[41, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[41, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[41, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[41, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[41, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[41, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[41, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[41, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[42, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[43, "graphnet.models.components.layers.DynEdgeConv"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[43, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components.layers": [[43, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[44, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[44, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[45, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[46, "graphnet.models.detector.detector.Detector"]], "features (graphnet.models.detector.detector.detector property)": [[46, "graphnet.models.detector.detector.Detector.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[46, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector.detector": [[46, "module-graphnet.models.detector.detector"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[46, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[46, "graphnet.models.detector.detector.Detector.nb_outputs"]], "icecube86 (class in graphnet.models.detector.icecube)": [[47, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[47, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[47, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[47, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[47, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[47, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[47, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[47, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[47, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[47, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "graphnet.models.detector.icecube": [[47, "module-graphnet.models.detector.icecube"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[47, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "prometheus (class in graphnet.models.detector.prometheus)": [[48, "graphnet.models.detector.prometheus.Prometheus"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[48, "graphnet.models.detector.prometheus.Prometheus.features"]], "graphnet.models.detector.prometheus": [[48, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn": [[49, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[50, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[50, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[50, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[51, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[51, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[51, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[52, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[52, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[52, "module-graphnet.models.gnn.dynedge_jinst"]], "gnn (class in graphnet.models.gnn.gnn)": [[53, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[53, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[53, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[53, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[53, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[54, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[54, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[54, "graphnet.models.graph_builders.KNNGraphBuilder"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[54, "graphnet.models.graph_builders.RadialGraphBuilder"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[54, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[54, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[54, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "graphnet.models.graph_builders": [[54, "module-graphnet.models.graph_builders"]], "model (class in graphnet.models.model)": [[55, "graphnet.models.model.Model"]], "fit() (graphnet.models.model.model method)": [[55, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.model.model method)": [[55, "graphnet.models.model.Model.forward"]], "from_config() (graphnet.models.model.model class method)": [[55, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[55, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[55, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[55, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[55, "graphnet.models.model.Model.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[55, "graphnet.models.model.Model.predict_as_dataframe"]], "save() (graphnet.models.model.model method)": [[55, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[55, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[56, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[56, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.predict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[56, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[57, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[58, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[58, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[58, "graphnet.models.task.classification.MulticlassClassificationTask"]], "graphnet.models.task.classification": [[58, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[58, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[58, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[59, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction": [[59, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[59, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[59, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[59, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[59, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[59, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[59, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[59, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[59, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[59, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[59, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[59, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[59, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[60, "graphnet.models.task.task.IdentityTask"]], "task (class in graphnet.models.task.task)": [[60, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.task method)": [[60, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[60, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task.task": [[60, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[60, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[60, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[60, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[60, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[61, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[61, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[61, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[61, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[62, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[63, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[63, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[63, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[63, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[63, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[63, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[63, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[64, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[64, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[64, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[64, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[65, "module-graphnet.training"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[66, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[66, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[66, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[66, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[66, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[66, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[66, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[66, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[66, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[66, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[66, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "direction (class in graphnet.training.labels)": [[67, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[67, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[67, "module-graphnet.training.labels"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[68, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[68, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[68, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[68, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[68, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[68, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[68, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[68, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[69, "graphnet.training.utils.collate_fn"]], "get_predictions() (in module graphnet.training.utils)": [[69, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[69, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[69, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[69, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[69, "graphnet.training.utils.save_results"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[70, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[70, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[70, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[70, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[70, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[71, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[72, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[72, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[72, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[72, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[72, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[72, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[72, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[73, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[74, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[74, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[74, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[74, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[74, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[74, "graphnet.utilities.config.base_config.BaseConfig.load"]], "configurable (class in graphnet.utilities.config.configurable)": [[75, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[75, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[75, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[75, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[75, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graphnet.utilities.config.dataset_config": [[76, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[76, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[76, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[77, "graphnet.utilities.config.model_config.ModelConfig"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[77, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[77, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[77, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[77, "module-graphnet.utilities.config.model_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[77, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[78, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[78, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[78, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[78, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[78, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[78, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[78, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[79, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[79, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[79, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[79, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[79, "module-graphnet.utilities.config.training_config"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[79, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[80, "module-graphnet.utilities.decorators"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[81, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[81, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[81, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[81, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[81, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[82, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[82, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[82, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[82, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[82, "graphnet.utilities.imports.requires_icecube"]], "loggermixin (class in graphnet.utilities.logging)": [[83, "graphnet.utilities.logging.LoggerMixin"]], "repeatfilter (class in graphnet.utilities.logging)": [[83, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.loggermixin method)": [[83, "graphnet.utilities.logging.LoggerMixin.critical"]], "debug() (graphnet.utilities.logging.loggermixin method)": [[83, "graphnet.utilities.logging.LoggerMixin.debug"]], "error() (graphnet.utilities.logging.loggermixin method)": [[83, "graphnet.utilities.logging.LoggerMixin.error"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[83, "graphnet.utilities.logging.RepeatFilter.filter"]], "get_formatters() (in module graphnet.utilities.logging)": [[83, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[83, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities.logging": [[83, "module-graphnet.utilities.logging"]], "info() (graphnet.utilities.logging.loggermixin method)": [[83, "graphnet.utilities.logging.LoggerMixin.info"]], "set_logging_level() (in module graphnet.utilities.logging)": [[83, "graphnet.utilities.logging.set_logging_level"]], "warn_once() (in module graphnet.utilities.logging)": [[83, "graphnet.utilities.logging.warn_once"]], "warning() (graphnet.utilities.logging.loggermixin method)": [[83, "graphnet.utilities.logging.LoggerMixin.warning"]], "eps_like() (in module graphnet.utilities.maths)": [[84, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[84, "module-graphnet.utilities.maths"]]}})