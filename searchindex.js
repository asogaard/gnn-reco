Search.setIndex({"docnames": ["about", "api", "api/graphnet", "api/graphnet.data", "api/graphnet.data.extractors", "api/graphnet.data.extractors.utilities", "api/graphnet.data.parquet", "api/graphnet.data.sqlite", "api/graphnet.data.utilities", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.models", "api/graphnet.models.components", "api/graphnet.models.detector", "api/graphnet.models.gnn", "api/graphnet.models.task", "api/graphnet.pisa", "api/graphnet.training", "api/graphnet.utilities", "api/graphnet.utilities.config", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api.rst", "api/graphnet.rst", "api/graphnet.data.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.utilities.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.models.rst", "api/graphnet.models.components.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.task.rst", "api/graphnet.pisa.rst", "api/graphnet.training.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.config.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "graphnet package", "graphnet.data package", "graphnet.data.extractors package", "graphnet.data.extractors.utilities package", "graphnet.data.parquet package", "graphnet.data.sqlite package", "graphnet.data.utilities package", "graphnet.deployment package", "graphnet.deployment.i3modules package", "graphnet.models package", "graphnet.models.components package", "graphnet.models.detector package", "graphnet.models.gnn package", "graphnet.models.task package", "graphnet.pisa package", "graphnet.training package", "graphnet.utilities package", "graphnet.utilities.config package", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 20, 21, 22, 23], "i": [0, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23], "an": [0, 3, 4, 5, 7, 8, 17, 18, 21, 22, 23], "open": [0, 7, 21, 22], "sourc": [0, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22], "python": [0, 2, 3, 4, 5, 21, 22, 23], "framework": [0, 22], "aim": [0, 2, 21, 22], "provid": [0, 2, 3, 4, 7, 11, 17, 21, 22, 23], "high": [0, 22], "qualiti": [0, 22], "user": [0, 4, 11, 17, 22, 23], "friendli": [0, 22], "end": [0, 2, 3, 22], "function": [0, 3, 5, 7, 8, 11, 12, 15, 16, 17, 18, 19, 22], "perform": [0, 3, 11, 12, 14, 15, 22], "reconstruct": [0, 2, 3, 4, 9, 11, 22], "task": [0, 2, 11, 17, 21, 22], "neutrino": [0, 2, 4, 7, 16, 22], "telescop": [0, 2, 22], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23], "graph": [0, 2, 3, 7, 11, 12, 13, 17, 21, 22], "neural": [0, 2, 22], "network": [0, 2, 14, 22], "gnn": [0, 2, 3, 11, 16, 22, 23], "make": [0, 3, 7, 17, 19, 21, 22, 23], "fast": [0, 17, 22, 23], "easi": [0, 22], "train": [0, 1, 2, 7, 8, 9, 11, 18, 19, 20, 22, 23], "complex": [0, 11, 22], "model": [0, 1, 2, 7, 9, 16, 17, 18, 19, 20, 22, 23], "can": [0, 2, 3, 4, 7, 8, 11, 12, 16, 17, 19, 21, 22, 23], "event": [0, 2, 3, 7, 8, 11, 12, 15, 16, 17, 19, 22], "state": [0, 22], "art": [0, 22], "arbitrari": [0, 22], "detector": [0, 2, 4, 11, 22], "configur": [0, 2, 3, 11, 16, 18, 22], "infer": [0, 2, 3, 9, 11, 15, 22, 23], "time": [0, 3, 7, 11, 12, 13, 15, 18, 22, 23], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 16, 17, 19, 21, 22, 23], "order": [0, 5, 11, 22], "magnitud": [0, 22], "faster": [0, 17, 22], "than": [0, 3, 15, 17, 18, 22], "tradit": [0, 22], "techniqu": [0, 22], "common": [0, 2, 17, 18, 22], "ml": [0, 2, 22], "develop": [0, 2, 21, 22, 23], "physicist": [0, 2, 22], "wish": [0, 21, 22], "tool": [0, 2, 22], "research": [0, 22], "By": [0, 8, 11, 15, 22], "unit": [0, 3, 17, 18, 21, 22], "both": [0, 4, 15, 16, 22], "group": [0, 3, 12, 22], "increas": [0, 17, 22], "longev": [0, 22], "usabl": [0, 22], "individu": [0, 3, 7, 11, 12, 14, 22], "code": [0, 3, 4, 7, 19, 22], "contribut": [0, 22, 23], "from": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23], "build": [0, 2, 11, 13, 19, 22], "gener": [0, 3, 4, 7, 15, 17, 22], "reusabl": [0, 22], "softwar": [0, 17, 22], "packag": [0, 1, 20, 21, 22, 23], "base": [0, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "engin": [0, 22], "best": [0, 21, 22], "practic": [0, 21, 22], "lower": [0, 16, 22], "technic": [0, 22], "threshold": [0, 11, 22], "most": [0, 2, 8, 22, 23], "scientif": [0, 2, 22], "problem": [0, 21, 22], "The": [0, 3, 4, 5, 7, 11, 12, 14, 15, 16, 17, 18, 22], "improv": [0, 2, 18, 22], "classif": [0, 2, 3, 11, 17, 22], "yield": [0, 14, 16, 17, 22], "veri": [0, 8, 22], "accur": [0, 22], "e": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23], "g": [0, 2, 3, 4, 5, 7, 8, 11, 12, 15, 17, 21, 22, 23], "low": [0, 22], "energi": [0, 3, 4, 15, 17, 22], "observ": [0, 22], "icecub": [0, 2, 4, 5, 11, 18, 22, 23], "here": [0, 21, 22, 23], "implement": [0, 2, 3, 4, 6, 7, 12, 14, 17, 21, 22], "wa": [0, 3, 4, 22], "appli": [0, 3, 4, 7, 11, 12, 14, 19, 22], "oscil": [0, 16, 22], "lead": [0, 22], "signific": [0, 22], "angular": [0, 22], "rang": [0, 4, 15, 22], "relev": [0, 2, 5, 8, 18, 21, 22], "studi": [0, 22], "furthermor": [0, 22], "shown": [0, 22], "could": [0, 21, 22], "muon": [0, 4, 7, 22], "v": [0, 15, 22], "therebi": [0, 2, 7, 19, 22], "effici": [0, 22], "puriti": [0, 22], "sampl": [0, 3, 8, 22], "analysi": [0, 3, 22, 23], "similarli": [0, 5, 22], "ha": [0, 3, 4, 5, 6, 7, 14, 17, 18, 22, 23], "great": [0, 22], "point": [0, 4, 17, 22], "analys": [0, 9, 16, 22], "final": [0, 4, 7, 12, 17, 19, 22], "millisecond": [0, 22], "allow": [0, 3, 9, 11, 12, 17, 22, 23], "whole": [0, 22], "new": [0, 2, 12, 21, 22], "type": [0, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22], "cosmic": [0, 22], "alert": [0, 22], "which": [0, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 22, 23], "were": [0, 22], "previous": [0, 22], "unfeas": [0, 22], "possibl": [0, 4, 5, 21, 22], "identifi": [0, 3, 4, 7, 19, 22], "10": [0, 3, 11, 17, 18, 22], "tev": [0, 22], "monitor": [0, 22], "rate": [0, 17, 22], "direct": [0, 2, 15, 17, 22], "real": [0, 22], "thi": [0, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23], "enabl": [0, 3, 18, 22], "first": [0, 4, 17, 21, 22], "ever": [0, 22], "despit": [0, 22], "larg": [0, 17, 22], "background": [0, 22], "origin": [0, 16, 22], "compris": [0, 22], "number": [0, 3, 7, 8, 12, 13, 14, 15, 17, 18, 22], "modul": [0, 9, 20, 22], "necessari": [0, 5, 7, 21, 22], "workflow": [0, 22], "ingest": [0, 2, 3, 13, 22], "raw": [0, 22], "data": [0, 1, 2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23], "domain": [0, 2, 3, 9, 22], "specif": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 21, 22, 23], "format": [0, 2, 3, 4, 5, 6, 7, 16, 19, 21, 22, 23], "deploi": [0, 2, 9, 22], "chain": [0, 2, 9, 11, 22, 23], "illustr": [0, 21, 22], "figur": [0, 16, 22], "below": [0, 8, 16, 17, 21, 22, 23], "level": [0, 3, 4, 7, 11, 12, 18, 22, 23], "overview": [0, 22], "typic": [0, 5, 22], "convert": [0, 2, 3, 5, 6, 7, 8, 22, 23], "industri": [0, 3, 22], "standard": [0, 3, 7, 8, 11, 18, 21, 22], "intermedi": [0, 2, 3, 6, 7, 14, 22, 23], "file": [0, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 19, 22, 23], "read": [0, 3, 5, 6, 7, 11, 13, 14, 15, 22, 23], "simpl": [0, 11, 22], "physic": [0, 2, 4, 5, 7, 9, 11, 15, 22], "orient": [0, 11, 22], "compon": [0, 2, 11, 22], "manag": [0, 4, 17, 22], "experi": [0, 2, 17, 22], "log": [0, 2, 15, 17, 20, 22, 23], "deploy": [0, 1, 2, 20, 22], "modular": [0, 11, 22], "subclass": [0, 11, 22], "torch": [0, 3, 6, 7, 11, 12, 14, 18, 22, 23], "nn": [0, 11, 12, 14, 22], "mean": [0, 3, 6, 7, 11, 14, 17, 19, 22], "onli": [0, 2, 3, 7, 11, 12, 15, 16, 17, 18, 19, 22, 23], "need": [0, 3, 5, 11, 17, 22, 23], "import": [0, 2, 4, 7, 11, 20, 22], "few": [0, 11, 21, 22], "exist": [0, 3, 4, 7, 11, 19, 22], "purpos": [0, 11, 17, 22], "built": [0, 11, 22], "them": [0, 2, 3, 5, 11, 14, 15, 16, 22, 23], "togeth": [0, 11, 22], "form": [0, 11, 15, 22], "complet": [0, 11, 22], "extend": [0, 2, 22], "suit": [0, 22], "through": [0, 17, 22], "layer": [0, 2, 11, 14, 15, 22], "connect": [0, 7, 11, 13, 17, 22], "etc": [0, 17, 22], "optimis": [0, 2, 22], "differ": [0, 3, 4, 7, 11, 17, 21, 22, 23], "track": [0, 4, 15, 21, 22], "These": [0, 21, 22], "prepar": [0, 17, 22], "satisfi": [0, 22], "o": [0, 15, 22], "load": [0, 2, 3, 4, 8, 11, 18, 19, 22], "requir": [0, 4, 7, 15, 17, 22, 23], "when": [0, 3, 5, 7, 12, 14, 21, 22, 23], "batch": [0, 3, 11, 12, 14, 17, 18, 22], "do": [0, 17, 19, 21, 22, 23], "predict": [0, 2, 3, 4, 11, 14, 15, 17, 22], "either": [0, 3, 17, 22, 23], "contain": [0, 2, 3, 4, 5, 6, 7, 11, 14, 15, 17, 18, 22, 23], "imag": [0, 2, 7, 21, 22, 23], "portabl": [0, 22], "depend": [0, 22, 23], "free": [0, 17, 22], "split": [0, 11, 22], "up": [0, 3, 21, 22, 23], "abov": [0, 3, 8, 16, 17, 22, 23], "interfac": [0, 16, 22, 23], "block": [0, 2, 22], "pre": [0, 7, 13, 21, 22], "directli": [0, 3, 4, 18, 22], "while": [0, 4, 17, 22], "continu": [0, 17, 22], "expand": [0, 22], "": [0, 3, 4, 5, 7, 8, 11, 14, 15, 17, 18, 19, 22, 23], "capabl": [0, 22], "pisa": [1, 2, 3, 4, 18, 20, 23], "util": [1, 2, 3, 4, 7, 20], "conveni": [2, 21, 23], "collabor": 2, "solv": [2, 21], "It": [2, 5, 7, 21], "leverag": 2, "advanc": [2, 12], "machin": [2, 23], "learn": [2, 17, 23], "without": [2, 16, 17, 23], "have": [2, 3, 4, 7, 8, 12, 15, 17, 21, 23], "expert": 2, "themselv": [2, 19], "acceler": 2, "area": 2, "phyic": 2, "design": 2, "principl": 2, "all": [2, 3, 4, 6, 7, 11, 12, 13, 14, 15, 17, 18, 19, 21, 23], "streamlin": 2, "process": [2, 3, 4, 7, 13, 14, 21, 23], "transform": [2, 12, 15, 17], "extens": [2, 18], "basic": 2, "across": [2, 3, 5, 7, 8, 11, 12, 17, 18, 19], "variou": 2, "easili": 2, "architectur": [2, 11, 14], "main": [2, 3, 11, 14, 21, 23], "featur": [2, 3, 4, 6, 7, 11, 12, 13, 14, 15, 17, 18, 19, 21], "i3": [2, 3, 4, 5, 6, 7, 8, 18, 23], "more": [2, 3, 7, 8, 18, 19], "index": [2, 3, 5, 6, 7, 11, 12, 17], "sqlite": [2, 3, 8, 23], "suitabl": 2, "plug": 2, "plai": 2, "abstract": [2, 3, 4, 11, 13, 14, 15, 17, 19], "awai": 2, "detail": [2, 23], "expos": 2, "physicst": 2, "what": [2, 21], "i3modul": [2, 9], "includ": [2, 7, 11, 16, 17, 19, 21], "docker": 2, "run": [2, 3, 8], "containeris": 2, "fashion": 2, "extractor": [2, 3, 6, 7], "i3extractor": [2, 3, 6, 7], "i3featureextractor": [2, 3, 7], "i3genericextractor": [2, 3, 7], "i3hybridrecoextractor": [2, 3], "i3pisaextractor": [2, 3], "i3retroextractor": [2, 3], "i3splinempeextractor": [2, 3], "i3truthextractor": [2, 3], "i3tumextractor": [2, 3], "parquet": [2, 3, 8, 23], "parquet_dataconvert": [2, 3], "parquet_dataset": [2, 3], "sqlite_dataconvert": [2, 3], "sqlite_dataset": [2, 3], "sqlite_dataset_perturb": [2, 3], "sqlite_select": [2, 3], "sqlite_util": [2, 3], "parquet_to_sqlit": [2, 3], "random": [2, 3, 7, 19], "string_selection_resolv": [2, 3], "deepcor": [2, 3, 4, 13], "icecube86": [2, 3, 11, 13], "kaggl": [2, 3, 13], "prometheu": [2, 3, 11], "upgrad": [2, 3, 4, 13, 23], "truth": [2, 3, 4, 6, 7, 16, 17, 18, 19], "dataconvert": [2, 6, 7, 20], "__call__": [2, 3, 4, 17], "__init__": [2, 3, 4, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "_extract_data": [2, 3], "_iterate_over_batches_of_fil": [2, 3], "_save_filenam": [2, 3], "_update_shared_vari": [2, 3], "execut": [2, 3, 7], "file_suffix": [2, 3, 6, 7], "get_map_funct": [2, 3], "merge_fil": [2, 3, 6, 7], "save_data": [2, 3, 6, 7], "fileset": [2, 3], "gcd_file": [2, 3, 4], "i3_fil": [2, 3, 4], "cache_output_fil": [2, 3], "init_global_index": [2, 3], "dataload": [2, 7, 11, 17, 18, 19, 20], "from_dataset_config": [2, 3], "collate_fn": [2, 3, 17], "do_shuffl": [2, 3], "dataset": [2, 6, 7, 8, 18, 19, 20], "columnmissingexcept": [2, 3], "__getitem__": [2, 3, 7], "__len__": [2, 3, 18], "_check_missing_column": [2, 3], "_construct_dataset_from_list_of_str": [2, 3], "_construct_datasets_from_dict": [2, 3], "_create_graph": [2, 3], "_get_all_indic": [2, 3], "_get_dbang_label": [2, 3], "_get_event_index": [2, 3], "_get_label": [2, 3], "_init": [2, 3], "_post_init": [2, 3], "_queri": [2, 3], "_remove_missing_column": [2, 3], "_resolve_string_selection_to_indic": [2, 3], "add_label": [2, 3], "concaten": [2, 3, 5, 14], "from_config": [2, 3, 11, 18, 19], "path": [2, 3, 4, 6, 7, 8, 11, 16, 18, 19, 23], "query_t": [2, 3, 6, 7], "truth_tabl": [2, 3, 6, 7, 16, 17, 18, 19], "pipelin": [2, 20], "insqlitepipelin": [2, 3], "graphnet_modul": [2, 9], "pool": [2, 3, 11, 14], "convnet": [2, 11], "dynedg": [2, 11], "dynedge_jinst": [2, 11], "coarsen": [2, 12, 20], "attributecoarsen": [2, 11], "_perform_clust": [2, 11], "_additional_featur": [2, 11], "_transfer_attribut": [2, 11], "forward": [2, 11, 12, 13, 14, 15, 17], "reduce_opt": [2, 11], "customdomcoarsen": [2, 11], "domandtimewindowcoarsen": [2, 11], "domcoarsen": [2, 11], "unbatch_edge_index": [2, 11], "graph_build": [2, 13, 20], "euclideangraphbuild": [2, 11], "graphbuild": [2, 11, 13], "knngraphbuild": [2, 11], "radialgraphbuild": [2, 11], "fit": [2, 11, 17, 18, 19, 20], "load_state_dict": [2, 11], "predict_as_datafram": [2, 11], "save": [2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 19, 23], "save_state_dict": [2, 11], "standard_model": [2, 20], "standardmodel": [2, 11], "compute_loss": [2, 11, 15], "configure_optim": [2, 11], "shared_step": [2, 11], "training_step": [2, 11], "validation_step": [2, 11], "calculate_distance_matrix": [2, 11], "calculate_xyzt_homophili": [2, 11], "knn_graph_batch": [2, 11], "contourfitt": [2, 16], "_check_input": [2, 16], "_fit_contour": [2, 16], "_parallel_fit_1d_contour": [2, 16], "_parallel_fit_2d_contour": [2, 16], "fit_1d_contour": [2, 16], "fit_2d_contour": [2, 16], "weightfitt": [2, 16, 17], "fit_weight": [2, 16, 17], "config_updat": [2, 16], "plot": [2, 20], "plot_1d_contour": [2, 16], "plot_2d_contour": [2, 16], "read_entri": [2, 16], "callback": [2, 11, 20], "piecewiselinearlr": [2, 17], "get_lr": [2, 17], "progressbar": [2, 17], "get_metr": [2, 17], "init_predict_tqdm": [2, 17], "init_test_tqdm": [2, 17], "init_train_tqdm": [2, 17], "init_validation_tqdm": [2, 17], "on_train_epoch_end": [2, 17], "on_train_epoch_start": [2, 17], "label": [2, 3, 14, 15, 16, 20], "loss_funct": [2, 15, 20], "binarycrossentropyloss": [2, 17], "crossentropyloss": [2, 17], "_forward": [2, 11, 13, 15, 17], "euclideandistanceloss": [2, 17], "logcmk": [2, 17], "backward": [2, 17], "logcoshloss": [2, 17], "_log_cosh": [2, 17], "lossfunct": [2, 15, 17], "mseloss": [2, 17], "rmseloss": [2, 17], "vonmisesfisher2dloss": [2, 17], "vonmisesfisher3dloss": [2, 17], "vonmisesfisherloss": [2, 17], "_evalu": [2, 17], "log_cmk": [2, 17], "log_cmk_approx": [2, 17], "log_cmk_exact": [2, 17], "get_predict": [2, 17], "make_dataload": [2, 17], "make_train_validation_dataload": [2, 17], "save_result": [2, 17], "weight_fit": [2, 20], "bjoernlow": [2, 17], "_fit_weight": [2, 17], "uniform": [2, 17], "_get_truth": [2, 17], "config": [2, 3, 8, 16, 17, 18], "base_config": [2, 18], "dataset_config": [2, 18], "model_config": [2, 18], "pars": [2, 4, 8, 16, 18], "training_config": [2, 18], "argpars": [2, 20], "argumentpars": [2, 18], "standard_argu": [2, 18], "with_standard_argu": [2, 18], "option": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "__repr__": [2, 18], "pop_default": [2, 18], "decor": [2, 3, 20], "filesi": [2, 20], "find_i3_fil": [2, 18], "has_extens": [2, 18], "is_gcd_fil": [2, 18], "is_i3_fil": [2, 18], "has_icecube_packag": [2, 18], "has_pisa_packag": [2, 18], "has_torch_packag": [2, 18], "requires_icecub": [2, 18], "loggermixin": [2, 3, 4, 8, 11, 17, 18, 19], "_get_logg": [2, 18], "critic": [2, 16, 18], "debug": [2, 18], "error": [2, 3, 4, 7, 17, 18, 21], "info": [2, 18, 23], "warn": [2, 18], "repeatfilt": [2, 18], "filter": [2, 18], "get_formatt": [2, 18], "get_logg": [2, 18, 23], "set_logging_level": [2, 18], "warn_onc": [2, 18], "math": [2, 20], "eps_lik": [2, 18], "global": [2, 3, 11, 14], "collect": [3, 4, 17, 18], "frame": [3, 4, 7], "_load_gcd_data": [3, 4], "name": [3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 23], "set_fil": [3, 4], "i3extractorcollect": [3, 4], "i3featureextractoricecube86": [3, 4], "i3featureextractoricecubedeepcor": [3, 4], "i3featureextractoricecubeupgrad": [3, 4], "i3pulsenoisetruthflagicecubeupgrad": [3, 4], "_cast_mc_tre": [3, 4], "_cast_trigg": [3, 4], "_extract_per_pulse_attribut": [3, 4], "_extract_pulse_series_map": [3, 4], "_flatten_result": [3, 4], "_flatten_result_mctre": [3, 4], "_get_kei": [3, 4], "i3galacticplanehybridrecoextractor": [3, 4], "_try_get_kei": [3, 4], "i3splinempeicextractor": [3, 4], "_find_data_typ": [3, 4], "_get_primary_particle_interaction_type_and_elast": [3, 4], "_get_primary_track_energy_and_inelast": [3, 4], "_muon_stop": [3, 4], "parquetdataconvert": [3, 6], "parquetdataset": [3, 6], "_format_dictionary_result": [3, 6], "sqlitedataconvert": [3, 7, 23], "_extract_everyth": [3, 7], "_extract_table_nam": [3, 7], "_merge_temporary_databas": [3, 7], "_submit_to_databas": [3, 7], "any_pulsemap_is_non_empti": [3, 7], "construct_datafram": [3, 7], "is_mc_tre": [3, 7], "is_pulse_map": [3, 7], "sqlitedataset": [3, 7], "_close_connect": [3, 7], "_establish_connect": [3, 7], "sqlitedatasetperturb": [3, 7], "get_desired_event_numb": [3, 7], "get_equal_proportion_neutrino_indic": [3, 7], "get_even_dbang_select": [3, 7], "get_even_signal_background_indici": [3, 7], "get_even_track_cascade_indici": [3, 7], "attach_index": [3, 7], "create_t": [3, 7], "create_table_and_save_to_sql": [3, 7], "database_exist": [3, 7], "database_table_exist": [3, 7], "run_sql_cod": [3, 7], "save_to_sql": [3, 7], "parquettosqliteconvert": [3, 8], "_save_config": [3, 8], "pairwise_shuffl": [3, 8], "stringselectionresolv": [3, 8], "_get_index_cache_path": [3, 8], "_get_random_events_from_select": [3, 8], "_get_values_cache_path": [3, 8], "_parse_variable_nam": [3, 8], "resolv": [3, 8], "class": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "object": [3, 4, 5, 7, 12, 13, 15, 16, 17, 18], "namespac": [3, 11], "work": [3, 5, 21, 23], "dom_x": [3, 13], "dom_i": [3, 13], "dom_z": [3, 13], "dom_tim": [3, 13], "charg": [3, 4, 13, 17], "rde": [3, 13], "pmt_area": [3, 13], "x": [3, 4, 11, 12, 13, 14, 15, 16, 17], "y": [3, 4, 11, 13, 16, 23], "z": [3, 4, 11, 13, 23], "auxiliari": [3, 13], "sensor_pos_x": [3, 13], "sensor_pos_i": [3, 13], "sensor_pos_z": [3, 13], "t": [3, 4, 5, 7, 13, 16, 17, 23], "string": [3, 5, 7, 8, 12, 13, 18, 19], "pmt_number": [3, 13], "dom_numb": [3, 13], "pmt_dir_x": [3, 13], "pmt_dir_i": [3, 13], "pmt_dir_z": [3, 13], "dom_typ": [3, 13], "energy_track": 3, "position_x": [3, 4], "position_i": [3, 4], "position_z": [3, 4], "azimuth": [3, 15, 17], "zenith": [3, 15, 17], "pid": [3, 8, 19], "elast": [3, 4], "sim_typ": [3, 4], "interaction_typ": 3, "interaction_tim": 3, "inelast": [3, 4, 15], "stopped_muon": 3, "injection_energi": 3, "injection_typ": 3, "injection_interaction_typ": 3, "injection_zenith": 3, "injection_azimuth": 3, "injection_bjorkenx": 3, "injection_bjorkeni": 3, "injection_position_x": 3, "injection_position_i": 3, "injection_position_z": 3, "injection_column_depth": 3, "primary_lepton_1_typ": 3, "primary_hadron_1_typ": 3, "primary_lepton_1_position_x": 3, "primary_lepton_1_position_i": 3, "primary_lepton_1_position_z": 3, "primary_hadron_1_position_x": 3, "primary_hadron_1_position_i": 3, "primary_hadron_1_position_z": 3, "primary_lepton_1_direction_theta": 3, "primary_lepton_1_direction_phi": 3, "primary_hadron_1_direction_theta": 3, "primary_hadron_1_direction_phi": 3, "primary_lepton_1_energi": 3, "primary_hadron_1_energi": 3, "total_energi": 3, "outdir": [3, 6, 7, 8, 16], "gcd_rescu": [3, 6, 7, 18], "none": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "nb_files_to_batch": [3, 6, 7], "sequential_batch_pattern": [3, 6, 7], "input_file_batch_pattern": [3, 6, 7], "worker": [3, 6, 7, 8, 16, 18], "1": [3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 23], "index_column": [3, 6, 7, 8, 11, 16, 17, 18, 19], "event_no": [3, 6, 7, 8, 11, 16, 17, 19], "icetray_verbos": [3, 6, 7], "0": [3, 4, 6, 7, 8, 11, 12, 14, 16, 17, 19, 23], "abc": [3, 4, 11, 17, 19], "paramet": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "list": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "str": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "default": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "int": [3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "directori": [3, 8, 16, 18], "union": [3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 18, 19], "One": [3, 8, 16], "within": [3, 4, 11, 12, 14], "should": [3, 4, 5, 7, 8, 12, 17, 19, 21, 23], "return": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "construct": [3, 4, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "regular": [3, 5], "express": [3, 11, 17], "accord": [3, 6, 7, 11, 12], "match": [3, 17, 18], "certain": [3, 8, 16], "pattern": 3, "wildcard": 3, "same": [3, 4, 5, 7, 11, 12, 15, 17, 19], "output": [3, 6, 7, 8, 11, 13, 14, 16, 17, 18, 19, 23], "input": [3, 7, 8, 11, 13, 14, 15, 16], "replac": 3, "period": 3, "special": [3, 4, 11], "interpret": [3, 15], "liter": 3, "ani": [3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 23], "charact": 3, "regex": 3, "For": [3, 5, 17], "instanc": [3, 4, 5, 6, 7, 11, 16, 17, 18, 19, 23], "A": [3, 4, 11, 12, 16, 17, 23], "_": 3, "9": 3, "5": [3, 8, 18, 23], "zst": 3, "find": [3, 18], "whose": [3, 4], "one": [3, 7, 11, 12, 18, 19, 21, 23], "capit": 3, "letter": 3, "follow": [3, 4, 11, 14, 17, 21, 23], "underscor": 3, "five": 3, "upgrade_genie_step4_141020_a_000000": 3, "upgrade_genie_step4_141020_a_000001": 3, "upgrade_genie_step4_141020_a_000008": 3, "upgrade_genie_step4_141020_a_000009": 3, "would": [3, 21], "upgrade_genie_step4_141020_a_00000x": 3, "suffix": 3, "upgrade_genie_step4_141020_a_000010": 3, "separ": [3, 5, 17, 23], "upgrade_genie_step4_141020_a_00001x": 3, "extract": [3, 4, 5, 7, 8, 15, 17], "singl": [3, 4, 12, 14, 17, 19], "If": [3, 4, 6, 7, 11, 16, 17, 21, 23], "strategi": 3, "each": [3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18], "correspond": [3, 4, 5, 7, 8, 14, 15, 17, 18, 23], "method": [3, 4, 5, 6, 7, 11, 12, 15, 17], "distinct": 3, "rather": [3, 15], "send": 3, "back": 3, "gcd": [3, 4, 5, 8, 18], "ordereddict": [3, 6, 7], "arg": [3, 15, 17, 18, 19], "iter": 3, "over": 3, "result": [3, 4, 6, 7, 12, 16, 17, 19, 23], "tupl": [3, 4, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18], "csv": [3, 8, 16, 19], "updat": [3, 11, 15, 16, 17], "self": [3, 16, 19], "_index": 3, "_output_fil": 3, "set": [3, 4, 15, 16, 18, 21], "multiprocess": [3, 23], "In": [3, 19, 23], "case": [3, 4, 7, 12, 15, 23], "been": [3, 6, 17, 21], "abl": [3, 5, 23], "write": [3, 23], "we": [3, 5, 8, 21, 23], "get": [3, 4, 5, 7, 16, 17, 18, 23], "sync": 3, "inherit": [3, 4, 5, 13, 15, 17, 18], "properti": [3, 4, 5, 12, 13, 14, 15, 19], "nb_file": 3, "map": [3, 4, 7], "pure": [3, 4, 5], "output_fil": [3, 6, 7], "input_fil": [3, 4, 6, 7], "merg": [3, 6, 7, 16, 17, 23], "current": [3, 4, 6, 7, 8, 17, 21, 23], "rais": [3, 4, 6, 11], "notimplementederror": [3, 6], "backend": [3, 6, 7], "question": 3, "process_method": 3, "cach": [3, 8], "typevar": 3, "f": [3, 12], "bound": [3, 16], "callabl": [3, 5, 12, 15, 17, 18, 19], "global_index": 3, "avail": [3, 4, 18], "synchron": 3, "batch_siz": [3, 11, 17], "shuffl": [3, 8, 17], "num_work": [3, 17], "persistent_work": [3, 17], "true": [3, 7, 8, 11, 16, 17], "kwarg": [3, 12, 15, 17, 18, 19], "bool": [3, 4, 5, 7, 8, 11, 14, 16, 17, 18, 19], "0x7faaf09a3370": 3, "classmethod": [3, 11, 17, 19], "select": [3, 6, 7, 8, 17, 18, 19, 21], "datasetconfig": [3, 8, 18, 19], "dict": [3, 4, 5, 6, 7, 11, 13, 16, 17, 18, 19], "remov": [3, 17, 18], "less": [3, 17], "two": [3, 4, 14, 16, 17], "dom": [3, 7, 11, 12, 17], "hit": [3, 17], "occur": [3, 17], "product": [3, 17], "selection_nam": 3, "check": [3, 4, 5, 7, 16, 18, 19, 21, 23], "whether": [3, 4, 5, 7, 11, 14, 16, 17, 18, 19], "except": [3, 4], "indic": [3, 4, 7, 8, 12, 17, 18, 21], "miss": 3, "column": [3, 6, 7, 11, 16, 17], "pulsemap": [3, 4, 6, 7, 17, 18, 19], "node_truth": [3, 6, 7, 17, 18, 19], "node_truth_t": [3, 6, 7, 17, 18, 19], "string_select": [3, 6, 7, 17, 18, 19], "dtype": [3, 6, 7, 18], "float32": [3, 6, 7], "loss_weight_t": [3, 6, 7, 17, 18, 19], "loss_weight_column": [3, 6, 7, 17, 18, 19], "loss_weight_default_valu": [3, 6, 7, 18, 19], "seed": [3, 6, 7, 8, 17, 18, 19], "float": [3, 4, 6, 7, 8, 11, 14, 16, 17, 19], "sequential_index": [3, 6, 7], "puls": [3, 4, 5, 7, 11, 12], "seri": [3, 4, 5, 7], "node": [3, 7, 11, 12, 14, 15], "multipl": [3, 4, 7, 17, 19], "store": [3, 4, 7, 16, 17], "ad": [3, 4, 7, 14, 16], "attribut": [3, 4, 7, 11, 15], "uniqu": [3, 7, 8, 19], "indici": [3, 5, 7, 8, 17], "tabl": [3, 4, 6, 7, 16, 17], "inform": [3, 4, 7, 16, 17], "subset": [3, 7, 12, 14], "given": [3, 7, 12, 17], "queri": [3, 4, 6, 7, 8], "pass": [3, 7, 11, 12, 14, 15, 17, 21], "tensor": [3, 7, 11, 12, 14, 15, 17, 18], "per": [3, 4, 7, 12, 15, 17], "loss": [3, 7, 11, 15, 17, 18], "weight": [3, 7, 15, 16, 17, 19, 23], "also": [3, 7, 8, 18, 19], "assign": [3, 7, 8, 11, 12, 21], "note": [3, 7, 16, 19], "valu": [3, 4, 5, 7, 12, 16, 17, 18, 19], "specifi": [3, 7, 8, 11, 15, 16, 17, 18, 23], "That": [3, 7, 14, 15, 17], "ignor": [3, 5, 7], "10000": [3, 8], "20": [3, 8, 18], "entri": [3, 4, 14, 16, 18, 19], "loss_weight": [3, 15], "creat": [3, 7, 19, 21, 23], "pytorch": [3, 6, 7, 17, 23], "No": 3, "preprocess": [3, 13], "stage": 3, "just": [3, 12, 23], "adjanc": 3, "impos": 3, "edge_attr": 3, "edge_weight": 3, "associ": [3, 4, 15, 17], "weigh": 3, "_index_column": 3, "truth_dict": 3, "doubl": 3, "bang": 3, "dictionari": [3, 4, 5, 6, 7, 16, 19], "intern": 3, "represent": [3, 5, 12, 18], "implemen": 3, "after": [3, 12, 14, 17, 18], "constructor": [3, 4], "length": [3, 5, 16, 17], "Their": 3, "constitu": 3, "sequenti": 3, "len": 3, "_may_": 3, "_indic": 3, "respect": 3, "present": [3, 18], "_featur": 3, "_truth": 3, "expect": [3, 7, 8, 16], "panda": [3, 7, 8, 17], "datafram": [3, 7, 8, 11, 16, 17], "compat": [3, 8], "syntax": [3, 8, 13, 15, 17], "mai": [3, 8, 13, 23], "fix": [3, 8], "randomli": [3, 7, 8, 19], "kei": [3, 4, 5, 7, 12, 17, 19], "fn": [3, 5, 19], "add": [3, 14, 18, 21, 23], "custom": [3, 17], "defin": [3, 8, 12, 19], "concatdataset": [3, 19], "some": [3, 4, 6, 7], "out": [3, 11, 14, 15, 17, 18, 21, 23], "entir": [3, 11], "befor": [3, 7, 14, 15, 17], "scalar": [3, 11, 17], "element": [3, 5, 11, 19], "module_dict": 3, "devic": 3, "retro_table_nam": 3, "retro": [3, 4], "100": [3, 4, 17, 23], "n_worker": [3, 16], "pipeline_nam": 3, "databas": [3, 4, 7, 8, 16, 17, 23], "chunk_siz": 3, "1000000": 3, "field": [3, 4, 8, 16, 17], "_module_dict": 3, "target": [3, 15, 17, 18, 19], "slice": [3, 12, 14], "chunk": 3, "size": [3, 12, 14, 18], "control": [3, 17], "memori": 3, "usag": [3, 18], "initialis": [3, 19], "gnn_module_for_energy_regress": 3, "modulelist": 3, "comput": [3, 11, 15, 17], "alreadi": [3, 4, 7, 18, 23], "prompt": 3, "avoid": [3, 7, 17, 21], "overwrit": [3, 17], "i3fram": [4, 5], "flatten_nested_dictionari": [4, 5], "serialis": [4, 5, 19], "transpose_list_of_dict": [4, 5], "frame_is_montecarlo": [4, 5], "frame_is_nois": [4, 5], "get_om_keys_and_pulseseri": [4, 5], "break_cyclic_recurs": [4, 5], "cast_object_to_pure_python": [4, 5], "cast_pulse_series_to_pure_python": [4, 5], "get_member_vari": [4, 5], "is_boost_class": [4, 5], "is_boost_enum": [4, 5], "is_icecube_class": [4, 5], "is_method": [4, 5], "is_typ": [4, 5], "icetrai": [4, 5, 18], "keep": 4, "proven": 4, "geospati": 4, "refer": [4, 19], "being": [4, 15], "member": [4, 5, 18, 19], "treat": 4, "86": [4, 13], "p": [4, 5, 7, 17], "nois": [4, 5, 7], "flag": 4, "exclude_kei": 4, "dynam": [4, 12, 14], "call": [4, 5, 7, 12, 16, 17, 18], "tri": [4, 5], "automat": [4, 17, 21], "cast": [4, 5], "done": [4, 12, 18, 21], "recurs": [4, 5, 18, 19], "look": [4, 23], "variabl": [4, 5, 8, 11, 14, 17], "signatur": [4, 5], "similar": [4, 5, 23], "handl": [4, 17, 18], "hand": 4, "mc": [4, 7], "tree": [4, 7], "trigger": 4, "other": [4, 7, 17, 21], "exclud": [4, 8, 23], "valueerror": [4, 11], "obj": [4, 5, 19], "i3mctre": 4, "dataclass": [4, 5], "hierarchi": 4, "i3triggerhierarchi": 4, "i3mapkeyuint": 4, "like": [4, 5, 11, 12, 13, 15, 17, 18, 21], "om": [4, 5], "integ": [4, 7, 14, 17], "vector": [4, 11, 12, 17], "flatten": [4, 5], "otherwis": [4, 5, 17], "possibli": [4, 23], "ones": [4, 23], "explicitli": 4, "hybrid": 4, "dnn_hybrid": 4, "galatict": 4, "plane": [4, 17], "tum": 4, "dnn": 4, "reconcstruct": 4, "quantiti": [4, 11, 15], "pisa_depend": 4, "padding_valu": 4, "default_valu": 4, "splinemp": 4, "spline_mpe_": 4, "border": 4, "ndarrai": [4, 17], "arrai": [4, 5], "boundari": 4, "volum": 4, "coordin": [4, 11], "particl": [4, 7, 17], "start": [4, 21, 23], "stop": [4, 18], "hard": 4, "determin": [4, 16], "mont": [4, 5], "carlo": [4, 5], "simul": [4, 5], "primari": [4, 7], "interact": [4, 15], "handler": 4, "doe": [4, 5, 19], "thing": 4, "catch": 4, "issu": 4, "relat": [4, 8, 18], "where": [4, 7, 17], "doesn": [4, 7], "record": [4, 18], "pad": 4, "mciniceprimari": 4, "encod": 4, "2": [4, 5, 11, 12, 14, 15, 16, 17, 19], "neutral": 4, "neither": 4, "total": 4, "shrink_horizont": 4, "shrink_vert": 4, "calcul": [4, 11, 14, 17], "posit": [4, 12, 15], "analogouo": 4, "vertex": [4, 15], "under": [4, 7], "second": 4, "axi": [4, 16], "min": [4, 11, 12, 14], "max": [4, 11, 12, 14, 17, 18], "depth": 4, "see": [4, 11, 17, 21, 23], "exampl": [4, 5, 8, 11, 12, 17, 19, 23], "shrink": 4, "further": 4, "exclus": 4, "zone": 4, "meter": 4, "height": [4, 16], "well": [4, 11, 21], "boolean": 4, "chosen": [4, 11], "fiduci": 4, "tum_dnn": 4, "recoconstruct": 4, "manipul": 5, "parent_kei": 5, "__": 5, "nest": 5, "non": [5, 7, 17, 18], "d": [5, 17, 21], "b": [5, 11, 12], "c": [5, 12, 17, 23], "a__b": 5, "applic": 5, "combin": [5, 15, 19], "parent": 5, "nester": 5, "json": [5, 19], "therefor": 5, "outer": 5, "de": 5, "transpos": 5, "pulseseri": 5, "calibr": 5, "gcd_dict": 5, "i3calibr": 5, "indicesfor": 5, "ensur": [5, 8, 17, 21, 23], "isn": 5, "take": [5, 7, 12, 21], "mainli": 5, "cannot": 5, "trivial": [5, 15], "try": 5, "support": [5, 21, 23], "equival": 5, "its": [5, 7], "itself": [5, 15], "deem": 5, "wai": [5, 8, 21, 23], "optic": 5, "found": [5, 17], "return_discard": 5, "fals": [5, 11, 14, 16, 17, 19], "valid": [5, 8, 11, 15, 17, 18], "mangl": 5, "boost": 5, "enum": 5, "ak": 6, "to_list": 6, "db": [7, 17], "everyth": 7, "temporari": [7, 16], "submit": 7, "data_dict": 7, "empti": 7, "retriev": 7, "splitinicepuls": 7, "least": [7, 21, 23], "becaus": [7, 8], "instead": [7, 17], "alwai": 7, "table_nam": 7, "sure": [7, 21, 23], "sqlite3": 7, "replica": 7, "own": [7, 21, 23], "databaseerror": 7, "disk": 7, "malform": 7, "due": 7, "inabl": 7, "accross": 7, "perturb": 7, "perturbation_dict": 7, "step": [7, 11, 17], "intend": [7, 23], "test": [7, 8, 15, 17, 18, 19, 21], "stabil": 7, "small": [7, 17], "chang": [7, 16, 17, 21], "deviat": 7, "desired_s": 7, "fraction_nois": 7, "fraction_muon": 7, "fraction_nu_": 7, "fraction_nu_mu": 7, "fraction_nu_tau": 7, "fraction": [7, 14], "nu_e": 7, "nu_mu": 7, "nu_tau": 7, "reed": 7, "42": [7, 17, 23], "equal": 7, "flavour": 7, "proport": 7, "resp": 7, "min_max_decay_length": 7, "dbang": 7, "cc": 7, "nc": 7, "mu": 7, "database_path": [7, 16, 17], "attach": 7, "default_typ": 7, "NOT": [7, 17], "null": 7, "integer_primary_kei": 7, "Such": 7, "row": [7, 12], "appropri": [7, 15], "df": 7, "must": [7, 11, 17, 21], "parquet_path": 8, "mc_truth_tabl": 8, "mc_truth": 8, "excluded_field": 8, "id": 8, "everi": [8, 23], "choos": 8, "argument": [8, 15, 17, 18, 19], "exclude_field": 8, "database_nam": 8, "convers": [8, 23], "rng": 8, "i3_list": [8, 18], "gcd_list": [8, 18], "correpond": 8, "handi": 8, "even": [8, 17], "files_list": 8, "gcd_shuffl": 8, "i3_shuffl": 8, "use_cach": 8, "flexibl": 8, "show": [8, 17], "involv": 8, "cover": 8, "yml": [8, 18, 19], "50000": [8, 19], "ab": [8, 17, 19], "12": [8, 19], "14": [8, 19], "16": [8, 19], "13": [8, 23], "num": [8, 12, 18], "frac": 8, "part": [8, 23], "did": 8, "entiti": 8, "funtion": 8, "submodul": [9, 20], "dynedgeconv": [11, 12, 14], "_group_ident": [11, 12], "group_bi": [11, 12], "group_pulses_to_dom": [11, 12], "group_pulses_to_pmt": [11, 12], "min_pool": [11, 12], "min_pool_x": [11, 12], "std_pool": [11, 12], "std_pool_x": [11, 12], "sum_pool": [11, 12], "sum_pool_and_distribut": [11, 12], "sum_pool_x": [11, 12], "nb_input": [11, 13, 14, 15], "nb_output": [11, 13, 14, 15], "icecubedeepcor": [11, 13], "icecubekaggl": [11, 13], "icecubeupgrad": [11, 13], "icecubeupgrade_v2": [11, 13], "_calculate_global_vari": [11, 14], "_construct_lay": [11, 14], "_global_pool": [11, 14], "dynedgejinst": [11, 14], "binaryclassificationtask": [11, 15], "binaryclassificationtasklogit": [11, 15], "multiclassclassificationtask": [11, 15], "azimuthreconstruct": [11, 15], "azimuthreconstructionwithkappa": [11, 15], "directionreconstructionwithkappa": [11, 15], "energyreconstruct": [11, 15], "energyreconstructionwithpow": [11, 15], "energyreconstructionwithuncertainti": [11, 15], "inelasticityreconstruct": [11, 15], "positionreconstruct": [11, 15], "timereconstruct": [11, 15], "vertexreconstruct": [11, 15], "zenithreconstruct": [11, 15], "zenithreconstructionwithkappa": [11, 15], "identitytask": [11, 15], "_validate_and_set_transform": [11, 15], "train_ev": [11, 15], "oper": [11, 12, 14], "cluster": [11, 12, 14], "local": [11, 18], "reduc": 11, "avg": 11, "transfer_attribut": 11, "simplecoarsen": 11, "longtensor": [11, 12, 14], "addit": [11, 12, 17], "nomin": 11, "pooling_method": 11, "overwritten": [11, 19], "bespok": 11, "original_data": 11, "pooled_data": 11, "transfer": 11, "avg_pool": 11, "avg_pool_x": 11, "max_pool": [11, 12], "max_pool_x": [11, 12], "sum": [11, 12, 14], "time_window": 11, "window": 11, "edge_index": [11, 12, 14], "mathbf": [11, 12], "ldot": [11, 12], "n": [11, 12, 17], "sigma": 11, "euclidean": [11, 17, 21], "distanc": [11, 17], "between": [11, 17], "http": [11, 17, 21], "arxiv": [11, 17], "org": [11, 17, 23], "pdf": 11, "1809": 11, "06166": 11, "nb_nearest_neighbour": 11, "k": [11, 14, 17], "nearest": [11, 14], "neighbour": [11, 12, 14], "radiu": 11, "sphere": [11, 17], "centr": 11, "lightningmodul": [11, 12, 17], "train_dataload": 11, "val_dataload": 11, "max_epoch": 11, "gpu": [11, 18, 23], "ckpt_path": 11, "logger": [11, 18], "log_every_n_step": 11, "gradient_clip_v": 11, "distribution_strategi": 11, "ddp": 11, "trainer_kwarg": 11, "pytorch_lightn": 11, "trainer": [11, 17], "trust": [11, 19], "load_modul": [11, 19], "modelconfig": [11, 18, 19], "enough": 11, "eval": [11, 23], "lambda": 11, "definit": 11, "consequ": 11, "state_dict": 11, "prediction_column": [11, 17], "node_level": [11, 17], "additional_attribut": [11, 14, 17], "optimizer_class": 11, "optim": [11, 17], "adam": 11, "optimizer_kwarg": 11, "scheduler_class": 11, "scheduler_kwarg": 11, "scheduler_config": 11, "pred": [11, 15], "verbos": [11, 17], "activ": [11, 15, 21, 23], "mode": [11, 15], "batch_idx": 11, "share": 11, "deactiv": [11, 15], "train_batch": 11, "val_batch": 11, "xyz_coord": 11, "matrix": [11, 12, 17], "pairwis": 11, "shape": [11, 12, 17], "nb_dom": 11, "3": [11, 12, 14, 15, 16, 17, 21, 23], "xyzt": 11, "homophili": 11, "measur": 11, "notic": [11, 17], "assum": [11, 13, 15], "edg": [11, 12, 14], "aggr": 12, "nb_neighbor": 12, "8": [12, 14, 17, 21, 23], "features_subset": [12, 14], "edgeconv": 12, "convolut": [12, 14], "sequenc": 12, "mlp": [12, 14], "aggreg": 12, "sparsetensor": 12, "ident": [12, 15], "pmt": 12, "f1": 12, "f2": 12, "6": [12, 16, 17, 21], "7": [12, 16], "groupbi": 12, "negat": 12, "repres": [12, 19], "std": 12, "averag": [12, 17], "torch_geometr": 12, "version": [12, 15, 17, 21, 23], "mathbb": 12, "r": [12, 23], "n_1": 12, "n_b": 12, "maximum": [12, 15, 18], "obtain": [12, 17], "wise": 12, "dens": 12, "fc": 12, "known": 12, "cluster_index": 12, "distribut": [12, 14, 15, 17], "standardis": 13, "scaler": 13, "ins": 13, "implent": [13, 15, 17], "adjac": 13, "overridden": 13, "competit": 13, "prototyp": 13, "learnabl": 14, "author": [14, 17], "martin": 14, "minh": 14, "nb_intermedi": 14, "128": [14, 18], "dropout_ratio": 14, "dimens": [14, 17], "drop": 14, "nb_neighbour": 14, "dynedge_layer_s": 14, "post_processing_layer_s": 14, "readout_layer_s": 14, "global_pooling_schem": 14, "add_global_variables_after_pool": 14, "latent": [14, 15], "metric": [14, 17], "dimenion": 14, "multi": 14, "perceptron": 14, "256": 14, "336": 14, "hidden": [14, 15], "skip": 14, "post": 14, "_and_": 14, "As": 14, "last": [14, 15, 17], "scheme": 14, "altern": [14, 17, 21], "exact": [14, 17], "2209": 14, "03042": 14, "rasmu": 14, "oerso": 14, "layer_size_scal": 14, "4": [14, 15, 16, 17], "scale": [14, 15, 17], "core": 14, "hidden_s": 15, "target_label": 15, "transform_prediction_and_target": 15, "transform_target": 15, "transform_infer": 15, "transform_support": 15, "binari": [15, 17], "logit": [15, 17], "classifi": 15, "untransform": 15, "angl": [15, 17], "kappa": [15, 17], "var": 15, "3d": [15, 17], "vmf": 15, "stabl": [15, 17, 23], "uncertainti": 15, "hadron": 15, "affin": 15, "feed": 15, "numer": [15, 17], "log10": [15, 17], "conjunct": 15, "invers": 15, "recov": 15, "minimum": 15, "restrict": [15, 17], "invert": 15, "1e6": 15, "assert": 15, "wrt": 15, "contour": 16, "pipeline_path": 16, "post_fix": 16, "_pred": 16, "model_nam": 16, "include_retro": 16, "statistical_fit": 16, "contour_typ": 16, "dm31_minmax": 16, "theta23_minmax": 16, "run_nam": 16, "config_dict": 16, "grid_siz": 16, "1d": 16, "parallel": 16, "amount": 16, "job": 16, "later": [16, 23], "2d": [16, 17], "30": 16, "36": 16, "54": 16, "config_outdir": 16, "weight_nam": [16, 17], "pisa_config_dict": 16, "add_to_databas": [16, 17], "flux": 16, "_database_path": 16, "statist": 16, "effect": [16, 17, 21], "account": 16, "systemat": 16, "hypersurfac": 16, "assumpt": 16, "regard": 16, "config_path": 16, "new_config_path": 16, "dummy_sect": 16, "temp": 16, "dummi": 16, "section": 16, "header": 16, "configupdat": 16, "programat": 16, "contour_data": 16, "chi2_critical_valu": 16, "706": 16, "width": 16, "352": 16, "388": 16, "path_to_pisa_fit_result": 16, "name_of_my_model_in_fit": 16, "legend": 16, "color": 16, "linestyl": 16, "style": [16, 21], "line": [16, 17, 18], "chi2": 16, "90": 16, "cl": 16, "right": [16, 17], "inch": 16, "xlim": 16, "ylim": 16, "0023799999999999997": 16, "0025499999999999997": 16, "605": 16, "176": 16, "upper": 16, "content": 16, "dure": 17, "mileston": 17, "factor": 17, "last_epoch": 17, "_lrschedul": 17, "interpol": 17, "linearli": 17, "denot": 17, "multipli": 17, "closest": 17, "vice": 17, "versa": 17, "wrap": [17, 19], "epoch": [17, 18], "print": [17, 18], "messag": [17, 18], "stdout": 17, "refresh_r": 17, "process_posit": 17, "tqdmprogressbar": 17, "progress": 17, "bar": 17, "customis": 17, "lightn": 17, "overrid": 17, "don": [17, 23], "duplciat": 17, "previou": 17, "behaviour": 17, "runtim": [17, 23], "azimuth_kei": 17, "zenith_kei": 17, "produc": 17, "cross": 17, "entropi": 17, "probabl": 17, "num_class": 17, "softmax": 17, "ed": 17, "squar": 17, "three": 17, "elementwis": 17, "von": 17, "mise": 17, "fisher": 17, "term": 17, "mit": 17, "licens": 17, "copyright": 17, "2019": 17, "ryabinin": 17, "permiss": 17, "herebi": 17, "grant": 17, "person": 17, "copi": 17, "document": 17, "deal": 17, "limit": 17, "modifi": 17, "publish": 17, "sublicens": 17, "sell": 17, "permit": 17, "whom": 17, "furnish": 17, "so": [17, 23], "subject": 17, "condit": 17, "shall": 17, "substanti": 17, "portion": 17, "THE": 17, "AS": 17, "warranti": 17, "OF": 17, "kind": 17, "OR": 17, "impli": 17, "BUT": 17, "TO": 17, "merchant": 17, "FOR": 17, "particular": [17, 21], "AND": 17, "noninfring": 17, "IN": 17, "NO": 17, "holder": 17, "BE": 17, "liabl": 17, "claim": 17, "damag": 17, "liabil": 17, "action": 17, "contract": 17, "tort": 17, "aris": 17, "WITH": 17, "_____________________": 17, "github": [17, 23], "com": [17, 23], "mryab": 17, "vmf_loss": 17, "blob": 17, "master": 17, "py": [17, 23], "bessel": 17, "exponenti": 17, "ditto": 17, "iv": 17, "1812": 17, "04616": 17, "spite": 17, "suggest": 17, "sec": 17, "paper": 17, "comparison": 17, "m": 17, "correct": 17, "static": [17, 21], "ctx": 17, "grad_output": 17, "cosh": 17, "act": 17, "inf": 17, "moder": 17, "kera": 17, "team": [17, 21], "v2": 17, "l1580": 17, "l1617": 17, "return_el": 17, "root": [17, 23], "0th": 17, "1st": 17, "estim": 17, "dimenson": 17, "utilis": 17, "dimension": 17, "space": 17, "kappa_switch": 17, "c_": 17, "sinc": 17, "diverg": 17, "700": 17, "float64": 17, "precis": 17, "unaccur": 17, "switch": 17, "approx": 17, "minu": 17, "sign": 17, "exactli": [17, 18], "database_indic": 17, "test_siz": 17, "33": 17, "tag": [17, 21, 23], "archiv": 17, "x_low": 17, "wherea": 17, "curv": 17, "alpha": 17, "05": 17, "cut": 17, "off": 17, "how": 17, "approach": 17, "zero": 17, "larger": 17, "public": 17, "uniformweightfitt": 17, "bin": 17, "privat": 17, "sql": 17, "desir": [17, 18], "np": 17, "happen": 17, "baseconfig": [18, 19], "as_dict": [18, 19], "dump": [18, 19], "get_all_argument_valu": [18, 19], "save_config": [18, 19], "save_dataset_config": [18, 19], "_construct_model": [18, 19], "_is_model_config_entri": [18, 19], "_parse_if_model_config_entri": [18, 19], "_serialis": [18, 19], "class_nam": [18, 19], "save_model_config": [18, 19], "get_all_grapnet_class": [18, 19], "get_graphnet_class": [18, 19], "is_graphnet_class": [18, 19], "is_graphnet_modul": [18, 19], "list_all_submodul": [18, 19], "traverse_and_appli": [18, 19], "trainingconfig": [18, 19], "early_stopping_pati": [18, 19], "consist": [18, 21], "cli": 18, "descript": 18, "command": [18, 23], "help": [18, 21], "home": [18, 23], "runner": 18, "lib": [18, 23], "python3": 18, "training_example_data_sqlit": 18, "earli": 18, "patienc": 18, "narg": 18, "50": 18, "example_energy_reconstruction_model": 18, "fetch": 18, "system": [18, 23], "dir": 18, "search": 18, "filenam": 18, "test_funct": 18, "loggeradapt": 18, "msg": 18, "deleg": 18, "repeat": 18, "nb_repeats_allow": 18, "logrecord": 18, "colour": 18, "formatt": 18, "coloredformatt": 18, "log_fold": 18, "place": [18, 21], "termin": 18, "onc": 18, "assort": 18, "ep": 18, "basemodel": 19, "yaml": 19, "re": [19, 23], "dataconfig": 19, "transpar": [19, 21], "reproduc": 19, "session": 19, "anoth": 19, "you": [19, 21, 23], "still": 19, "train_select": 19, "test_select": 19, "init_fn": 19, "trainabl": 19, "hyperparamet": 19, "instanti": 19, "thu": 19, "basi": 19, "unambigu": 19, "grapnet": 19, "moduletyp": 19, "lookup": 19, "fn_kwarg": 19, "structur": 19, "subpackag": 20, "constant": 20, "To": [21, 23], "smooth": 21, "guidelin": 21, "guid": 21, "encourag": 21, "contributor": 21, "discuss": 21, "bug": 21, "anyth": 21, "describ": 21, "yourself": 21, "ownership": 21, "agreement": 21, "prioriti": 21, "situat": 21, "lot": 21, "effort": 21, "go": 21, "turn": 21, "outsid": 21, "scope": 21, "project": 21, "solut": 21, "better": 21, "fork": 21, "repo": 21, "dedic": 21, "branch": [21, 23], "your": [21, 23], "repositori": 21, "graphbuil": 21, "builder": 21, "accept": 21, "autom": 21, "review": 21, "pep8": 21, "docstr": 21, "googl": 21, "hint": 21, "clean": [21, 23], "adher": 21, "pep": 21, "pylint": 21, "flake8": 21, "black": 21, "recommend": [21, 23], "mypi": 21, "pydocstyl": 21, "docformatt": 21, "commit": 21, "hook": 21, "instal": 21, "come": 21, "pip": [21, 23], "Then": 21, "everytim": 21, "pep257": 21, "concept": 21, "ljvmiranda921": 21, "io": 21, "notebook": 21, "2018": 21, "06": 21, "21": 21, "precommit": 21, "environ": 23, "virtual": 23, "anaconda": 23, "prove": 23, "instruct": 23, "setup": 23, "want": 23, "achiev": 23, "bash": 23, "shell": 23, "cvmf": 23, "opensciencegrid": 23, "py3": 23, "v4": 23, "sh": 23, "rhel_7_x86_64": 23, "metaproject": 23, "combo": 23, "env": 23, "alia": 23, "script": 23, "With": 23, "now": 23, "light": 23, "extra": 23, "geometr": 23, "won": 23, "torch_cpu": 23, "txt": 23, "cpu": 23, "torch_gpu": 23, "prefer": 23, "unix": 23, "git": 23, "clone": 23, "usernam": 23, "cd": 23, "conda": 23, "gcc_linux": 23, "64": 23, "gxx_linux": 23, "libgcc": 23, "cudatoolkit": 23, "11": 23, "forg": 23, "torch_maco": 23, "On": 23, "maco": 23, "box": 23, "compil": 23, "gcc": 23, "date": 23, "cuda": 23, "toolkit": 23, "recent": 23, "omit": 23, "newer": 23, "export": 23, "ld_library_path": 23, "anaconda3": 23, "miniconda3": 23, "bashrc": 23, "librari": 23, "access": 23, "consid": 23, "rm": 23, "asogaard": 23, "latest": 23, "dc423315742c": 23, "01_icetrai": 23, "01_convert_i3_fil": 23, "2023": 23, "01": 23, "24": 23, "41": 23, "27": 23, "graphnet_20230124": 23, "134127": 23, "46": 23, "convert_i3_fil": 23, "ic86": 23, "thread": 23, "00": 23, "39": 23, "79": 23, "26": 23, "413": 23, "88it": 23, "specialis": 23, "push": 23, "vx": 23}, "objects": {"": [[2, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [9, 0, 0, "-", "deployment"], [11, 0, 0, "-", "models"], [16, 0, 0, "-", "pisa"], [17, 0, 0, "-", "training"], [18, 0, 0, "-", "utilities"]], "graphnet.data": [[3, 0, 0, "-", "constants"], [3, 0, 0, "-", "dataconverter"], [3, 0, 0, "-", "dataloader"], [3, 0, 0, "-", "dataset"], [4, 0, 0, "-", "extractors"], [6, 0, 0, "-", "parquet"], [3, 0, 0, "-", "pipeline"], [7, 0, 0, "-", "sqlite"], [8, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[3, 1, 1, "", "FEATURES"], [3, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[3, 2, 1, "", "DEEPCORE"], [3, 2, 1, "", "ICECUBE86"], [3, 2, 1, "", "KAGGLE"], [3, 2, 1, "", "PROMETHEUS"], [3, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[3, 2, 1, "", "DEEPCORE"], [3, 2, 1, "", "ICECUBE86"], [3, 2, 1, "", "KAGGLE"], [3, 2, 1, "", "PROMETHEUS"], [3, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[3, 1, 1, "", "DataConverter"], [3, 1, 1, "", "FileSet"], [3, 5, 1, "", "cache_output_files"], [3, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "_extract_data"], [3, 3, 1, "", "_iterate_over_batches_of_files"], [3, 3, 1, "", "_save_filenames"], [3, 3, 1, "", "_update_shared_variables"], [3, 3, 1, "", "execute"], [3, 4, 1, "", "file_suffix"], [3, 3, 1, "", "get_map_function"], [3, 3, 1, "", "merge_files"], [3, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[3, 2, 1, "", "gcd_file"], [3, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[3, 1, 1, "", "DataLoader"], [3, 5, 1, "", "collate_fn"], [3, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[3, 6, 1, "", "ColumnMissingException"], [3, 1, 1, "", "Dataset"]], "graphnet.data.dataset.Dataset": [[3, 3, 1, "", "__getitem__"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "__len__"], [3, 3, 1, "", "_check_missing_columns"], [3, 3, 1, "", "_construct_dataset_from_list_of_strings"], [3, 3, 1, "", "_construct_datasets_from_dict"], [3, 3, 1, "", "_create_graph"], [3, 3, 1, "", "_get_all_indices"], [3, 3, 1, "", "_get_dbang_label"], [3, 3, 1, "", "_get_event_index"], [3, 3, 1, "", "_get_labels"], [3, 3, 1, "", "_init"], [3, 3, 1, "", "_post_init"], [3, 3, 1, "", "_query"], [3, 3, 1, "", "_remove_missing_columns"], [3, 3, 1, "", "_resolve_string_selection_to_indices"], [3, 3, 1, "", "add_label"], [3, 3, 1, "", "concatenate"], [3, 3, 1, "", "from_config"], [3, 4, 1, "", "path"], [3, 3, 1, "", "query_table"], [3, 4, 1, "", "truth_table"]], "graphnet.data.extractors": [[4, 0, 0, "-", "i3extractor"], [4, 0, 0, "-", "i3featureextractor"], [4, 0, 0, "-", "i3genericextractor"], [4, 0, 0, "-", "i3hybridrecoextractor"], [4, 0, 0, "-", "i3pisaextractor"], [4, 0, 0, "-", "i3retroextractor"], [4, 0, 0, "-", "i3splinempeextractor"], [4, 0, 0, "-", "i3truthextractor"], [4, 0, 0, "-", "i3tumextractor"], [5, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[4, 1, 1, "", "I3Extractor"], [4, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "_load_gcd_data"], [4, 4, 1, "", "name"], [4, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[4, 1, 1, "", "I3FeatureExtractor"], [4, 1, 1, "", "I3FeatureExtractorIceCube86"], [4, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [4, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [4, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor": [[4, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86": [[4, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade": [[4, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade": [[4, 3, 1, "", "__call__"]], "graphnet.data.extractors.i3genericextractor": [[4, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor.I3GenericExtractor": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "_cast_mc_tree"], [4, 3, 1, "", "_cast_triggers"], [4, 3, 1, "", "_extract_per_pulse_attribute"], [4, 3, 1, "", "_extract_pulse_series_map"], [4, 3, 1, "", "_flatten_result"], [4, 3, 1, "", "_flatten_result_mctree"], [4, 3, 1, "", "_get_keys"]], "graphnet.data.extractors.i3hybridrecoextractor": [[4, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3pisaextractor": [[4, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3retroextractor": [[4, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor.I3RetroExtractor": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "_try_get_key"]], "graphnet.data.extractors.i3splinempeextractor": [[4, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"]], "graphnet.data.extractors.i3truthextractor": [[4, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor.I3TruthExtractor": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "_find_data_type"], [4, 3, 1, "", "_get_primary_particle_interaction_type_and_elasticity"], [4, 3, 1, "", "_get_primary_track_energy_and_inelasticity"], [4, 3, 1, "", "_muon_stopped"]], "graphnet.data.extractors.i3tumextractor": [[4, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor.I3TUMExtractor": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "__init__"]], "graphnet.data.extractors.utilities": [[5, 0, 0, "-", "collections"], [5, 0, 0, "-", "frames"], [5, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[5, 5, 1, "", "flatten_nested_dictionary"], [5, 5, 1, "", "serialise"], [5, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[5, 5, 1, "", "frame_is_montecarlo"], [5, 5, 1, "", "frame_is_noise"], [5, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[5, 5, 1, "", "break_cyclic_recursion"], [5, 5, 1, "", "cast_object_to_pure_python"], [5, 5, 1, "", "cast_pulse_series_to_pure_python"], [5, 5, 1, "", "get_member_variables"], [5, 5, 1, "", "is_boost_class"], [5, 5, 1, "", "is_boost_enum"], [5, 5, 1, "", "is_icecube_class"], [5, 5, 1, "", "is_method"], [5, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[6, 0, 0, "-", "parquet_dataconverter"], [6, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[6, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[6, 2, 1, "", "file_suffix"], [6, 3, 1, "", "merge_files"], [6, 3, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[6, 1, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[6, 3, 1, "", "_format_dictionary_result"], [6, 3, 1, "", "query_table"]], "graphnet.data.pipeline": [[3, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pipeline.InSQLitePipeline": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "__init__"]], "graphnet.data.sqlite": [[7, 0, 0, "-", "sqlite_dataconverter"], [7, 0, 0, "-", "sqlite_dataset"], [7, 0, 0, "-", "sqlite_dataset_perturbed"], [7, 0, 0, "-", "sqlite_selection"], [7, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[7, 1, 1, "", "SQLiteDataConverter"], [7, 5, 1, "", "construct_dataframe"], [7, 5, 1, "", "is_mc_tree"], [7, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[7, 3, 1, "", "_extract_everything"], [7, 3, 1, "", "_extract_table_names"], [7, 3, 1, "", "_merge_temporary_databases"], [7, 3, 1, "", "_submit_to_database"], [7, 3, 1, "", "any_pulsemap_is_non_empty"], [7, 2, 1, "", "file_suffix"], [7, 3, 1, "", "merge_files"], [7, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[7, 1, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[7, 3, 1, "", "_close_connection"], [7, 3, 1, "", "_establish_connection"], [7, 3, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[7, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed": [[7, 3, 1, "", "__getitem__"], [7, 3, 1, "", "__init__"]], "graphnet.data.sqlite.sqlite_selection": [[7, 5, 1, "", "get_desired_event_numbers"], [7, 5, 1, "", "get_equal_proportion_neutrino_indices"], [7, 5, 1, "", "get_even_dbang_selection"], [7, 5, 1, "", "get_even_signal_background_indicies"], [7, 5, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[7, 5, 1, "", "attach_index"], [7, 5, 1, "", "create_table"], [7, 5, 1, "", "create_table_and_save_to_sql"], [7, 5, 1, "", "database_exists"], [7, 5, 1, "", "database_table_exists"], [7, 5, 1, "", "run_sql_code"], [7, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[8, 0, 0, "-", "parquet_to_sqlite"], [8, 0, 0, "-", "random"], [8, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[8, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "_save_config"], [8, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[8, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[8, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "_get_index_cache_path"], [8, 3, 1, "", "_get_random_events_from_selection"], [8, 3, 1, "", "_get_values_cache_path"], [8, 3, 1, "", "_parse_variable_names"], [8, 3, 1, "", "resolve"]], "graphnet.models": [[11, 0, 0, "-", "coarsening"], [12, 0, 0, "-", "components"], [13, 0, 0, "-", "detector"], [14, 0, 0, "-", "gnn"], [11, 0, 0, "-", "graph_builders"], [11, 0, 0, "-", "model"], [11, 0, 0, "-", "standard_model"], [15, 0, 0, "-", "task"], [11, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[11, 1, 1, "", "AttributeCoarsening"], [11, 1, 1, "", "Coarsening"], [11, 1, 1, "", "CustomDOMCoarsening"], [11, 1, 1, "", "DOMAndTimeWindowCoarsening"], [11, 1, 1, "", "DOMCoarsening"], [11, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.AttributeCoarsening": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "_perform_clustering"]], "graphnet.models.coarsening.Coarsening": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "_additional_features"], [11, 3, 1, "", "_perform_clustering"], [11, 3, 1, "", "_transfer_attributes"], [11, 3, 1, "", "forward"], [11, 2, 1, "", "reduce_options"]], "graphnet.models.coarsening.CustomDOMCoarsening": [[11, 3, 1, "", "_additional_features"]], "graphnet.models.coarsening.DOMAndTimeWindowCoarsening": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "_perform_clustering"]], "graphnet.models.coarsening.DOMCoarsening": [[11, 3, 1, "", "_perform_clustering"]], "graphnet.models.components": [[12, 0, 0, "-", "layers"], [12, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[12, 1, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[12, 5, 1, "", "_group_identical"], [12, 5, 1, "", "group_by"], [12, 5, 1, "", "group_pulses_to_dom"], [12, 5, 1, "", "group_pulses_to_pmt"], [12, 5, 1, "", "min_pool"], [12, 5, 1, "", "min_pool_x"], [12, 5, 1, "", "std_pool"], [12, 5, 1, "", "std_pool_x"], [12, 5, 1, "", "sum_pool"], [12, 5, 1, "", "sum_pool_and_distribute"], [12, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[13, 0, 0, "-", "detector"], [13, 0, 0, "-", "icecube"], [13, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[13, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "_forward"], [13, 4, 1, "", "features"], [13, 3, 1, "", "forward"], [13, 4, 1, "", "nb_inputs"], [13, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[13, 1, 1, "", "IceCube86"], [13, 1, 1, "", "IceCubeDeepCore"], [13, 1, 1, "", "IceCubeKaggle"], [13, 1, 1, "", "IceCubeUpgrade"], [13, 1, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[13, 3, 1, "", "_forward"], [13, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[13, 3, 1, "", "_forward"], [13, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[13, 3, 1, "", "_forward"], [13, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[13, 3, 1, "", "_forward"], [13, 2, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[13, 3, 1, "", "_forward"], [13, 2, 1, "", "features"], [13, 4, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[13, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[13, 3, 1, "", "_forward"], [13, 2, 1, "", "features"]], "graphnet.models.gnn": [[14, 0, 0, "-", "convnet"], [14, 0, 0, "-", "dynedge"], [14, 0, 0, "-", "dynedge_jinst"], [14, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[14, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[14, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "_calculate_global_variables"], [14, 3, 1, "", "_construct_layers"], [14, 3, 1, "", "_global_pooling"], [14, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[14, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[14, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "forward"], [14, 4, 1, "", "nb_inputs"], [14, 4, 1, "", "nb_outputs"]], "graphnet.models.graph_builders": [[11, 1, 1, "", "EuclideanGraphBuilder"], [11, 1, 1, "", "GraphBuilder"], [11, 1, 1, "", "KNNGraphBuilder"], [11, 1, 1, "", "RadialGraphBuilder"]], "graphnet.models.graph_builders.EuclideanGraphBuilder": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "forward"]], "graphnet.models.graph_builders.KNNGraphBuilder": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "forward"]], "graphnet.models.graph_builders.RadialGraphBuilder": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "forward"]], "graphnet.models.model": [[11, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[11, 3, 1, "", "fit"], [11, 3, 1, "", "forward"], [11, 3, 1, "", "from_config"], [11, 3, 1, "", "load"], [11, 3, 1, "", "load_state_dict"], [11, 3, 1, "", "predict"], [11, 3, 1, "", "predict_as_dataframe"], [11, 3, 1, "", "save"], [11, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[11, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "compute_loss"], [11, 3, 1, "", "configure_optimizers"], [11, 3, 1, "", "forward"], [11, 3, 1, "", "inference"], [11, 3, 1, "", "predict"], [11, 3, 1, "", "shared_step"], [11, 3, 1, "", "train"], [11, 3, 1, "", "training_step"], [11, 3, 1, "", "validation_step"]], "graphnet.models.task": [[15, 0, 0, "-", "classification"], [15, 0, 0, "-", "reconstruction"], [15, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[15, 1, 1, "", "BinaryClassificationTask"], [15, 1, 1, "", "BinaryClassificationTaskLogits"], [15, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[15, 1, 1, "", "AzimuthReconstruction"], [15, 1, 1, "", "AzimuthReconstructionWithKappa"], [15, 1, 1, "", "DirectionReconstructionWithKappa"], [15, 1, 1, "", "EnergyReconstruction"], [15, 1, 1, "", "EnergyReconstructionWithPower"], [15, 1, 1, "", "EnergyReconstructionWithUncertainty"], [15, 1, 1, "", "InelasticityReconstruction"], [15, 1, 1, "", "PositionReconstruction"], [15, 1, 1, "", "TimeReconstruction"], [15, 1, 1, "", "VertexReconstruction"], [15, 1, 1, "", "ZenithReconstruction"], [15, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[15, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[15, 1, 1, "", "IdentityTask"], [15, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[15, 3, 1, "", "__init__"], [15, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "_forward"], [15, 3, 1, "", "_validate_and_set_transforms"], [15, 3, 1, "", "compute_loss"], [15, 3, 1, "", "forward"], [15, 3, 1, "", "inference"], [15, 4, 1, "", "nb_inputs"], [15, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[11, 5, 1, "", "calculate_distance_matrix"], [11, 5, 1, "", "calculate_xyzt_homophily"], [11, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[16, 0, 0, "-", "fitting"], [16, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[16, 1, 1, "", "ContourFitter"], [16, 1, 1, "", "WeightFitter"], [16, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "_check_inputs"], [16, 3, 1, "", "_fit_contours"], [16, 3, 1, "", "_parallel_fit_1d_contour"], [16, 3, 1, "", "_parallel_fit_2d_contour"], [16, 3, 1, "", "fit_1d_contour"], [16, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[16, 5, 1, "", "plot_1D_contour"], [16, 5, 1, "", "plot_2D_contour"], [16, 5, 1, "", "read_entry"]], "graphnet.training": [[17, 0, 0, "-", "callbacks"], [17, 0, 0, "-", "labels"], [17, 0, 0, "-", "loss_functions"], [17, 0, 0, "-", "utils"], [17, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[17, 1, 1, "", "PiecewiseLinearLR"], [17, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[17, 3, 1, "", "get_metrics"], [17, 3, 1, "", "init_predict_tqdm"], [17, 3, 1, "", "init_test_tqdm"], [17, 3, 1, "", "init_train_tqdm"], [17, 3, 1, "", "init_validation_tqdm"], [17, 3, 1, "", "on_train_epoch_end"], [17, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[17, 1, 1, "", "Direction"], [17, 1, 1, "", "Label"]], "graphnet.training.labels.Direction": [[17, 3, 1, "", "__call__"], [17, 3, 1, "", "__init__"]], "graphnet.training.labels.Label": [[17, 3, 1, "", "__call__"], [17, 3, 1, "", "__init__"]], "graphnet.training.loss_functions": [[17, 1, 1, "", "BinaryCrossEntropyLoss"], [17, 1, 1, "", "CrossEntropyLoss"], [17, 1, 1, "", "EuclideanDistanceLoss"], [17, 1, 1, "", "LogCMK"], [17, 1, 1, "", "LogCoshLoss"], [17, 1, 1, "", "LossFunction"], [17, 1, 1, "", "MSELoss"], [17, 1, 1, "", "RMSELoss"], [17, 1, 1, "", "VonMisesFisher2DLoss"], [17, 1, 1, "", "VonMisesFisher3DLoss"], [17, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.CrossEntropyLoss": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.EuclideanDistanceLoss": [[17, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.LogCMK": [[17, 3, 1, "", "backward"], [17, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LogCoshLoss": [[17, 3, 1, "", "_forward"], [17, 3, 1, "", "_log_cosh"]], "graphnet.training.loss_functions.LossFunction": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "_forward"], [17, 3, 1, "", "forward"]], "graphnet.training.loss_functions.MSELoss": [[17, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.RMSELoss": [[17, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher2DLoss": [[17, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher3DLoss": [[17, 3, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[17, 3, 1, "", "_evaluate"], [17, 3, 1, "", "log_cmk"], [17, 3, 1, "", "log_cmk_approx"], [17, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[17, 5, 1, "", "collate_fn"], [17, 5, 1, "", "get_predictions"], [17, 5, 1, "", "make_dataloader"], [17, 5, 1, "", "make_train_validation_dataloader"], [17, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[17, 1, 1, "", "BjoernLow"], [17, 1, 1, "", "Uniform"], [17, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.BjoernLow": [[17, 3, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.Uniform": [[17, 3, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.WeightFitter": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "_get_truth"], [17, 3, 1, "", "fit"]], "graphnet.utilities": [[18, 0, 0, "-", "argparse"], [19, 0, 0, "-", "config"], [18, 0, 0, "-", "decorators"], [18, 0, 0, "-", "filesys"], [18, 0, 0, "-", "imports"], [18, 0, 0, "-", "logging"], [18, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[18, 1, 1, "", "ArgumentParser"], [18, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[18, 3, 1, "", "__init__"], [18, 2, 1, "", "standard_arguments"], [18, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "__len__"], [18, 3, 1, "", "__repr__"], [18, 3, 1, "", "contains"], [18, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[19, 0, 0, "-", "base_config"], [19, 0, 0, "-", "configurable"], [19, 0, 0, "-", "dataset_config"], [19, 0, 0, "-", "model_config"], [19, 0, 0, "-", "parsing"], [19, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[19, 1, 1, "", "BaseConfig"], [19, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[19, 3, 1, "", "as_dict"], [19, 3, 1, "", "dump"], [19, 3, 1, "", "load"]], "graphnet.utilities.config.configurable": [[19, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[19, 3, 1, "", "__init__"], [19, 4, 1, "", "config"], [19, 3, 1, "", "from_config"], [19, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[19, 1, 1, "", "DatasetConfig"], [19, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[19, 3, 1, "", "__init__"], [19, 2, 1, "", "features"], [19, 2, 1, "", "index_column"], [19, 2, 1, "", "loss_weight_column"], [19, 2, 1, "", "loss_weight_default_value"], [19, 2, 1, "", "loss_weight_table"], [19, 2, 1, "", "node_truth"], [19, 2, 1, "", "node_truth_table"], [19, 2, 1, "", "path"], [19, 2, 1, "", "pulsemaps"], [19, 2, 1, "", "seed"], [19, 2, 1, "", "selection"], [19, 2, 1, "", "string_selection"], [19, 2, 1, "", "truth"], [19, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[19, 1, 1, "", "ModelConfig"], [19, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "_construct_model"], [19, 3, 1, "", "_is_model_config_entry"], [19, 3, 1, "", "_parse_if_model_config_entry"], [19, 3, 1, "", "_serialise"], [19, 2, 1, "", "arguments"], [19, 3, 1, "", "as_dict"], [19, 2, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[19, 5, 1, "", "get_all_grapnet_classes"], [19, 5, 1, "", "get_graphnet_classes"], [19, 5, 1, "", "is_graphnet_class"], [19, 5, 1, "", "is_graphnet_module"], [19, 5, 1, "", "list_all_submodules"], [19, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[19, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[19, 2, 1, "", "dataloader"], [19, 2, 1, "", "early_stopping_patience"], [19, 2, 1, "", "fit"], [19, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[18, 5, 1, "", "find_i3_files"], [18, 5, 1, "", "has_extension"], [18, 5, 1, "", "is_gcd_file"], [18, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[18, 5, 1, "", "has_icecube_package"], [18, 5, 1, "", "has_pisa_package"], [18, 5, 1, "", "has_torch_package"], [18, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[18, 1, 1, "", "LoggerMixin"], [18, 1, 1, "", "RepeatFilter"], [18, 5, 1, "", "get_formatters"], [18, 5, 1, "", "get_logger"], [18, 5, 1, "", "set_logging_level"], [18, 5, 1, "", "warn_once"]], "graphnet.utilities.logging.LoggerMixin": [[18, 3, 1, "", "_get_logger"], [18, 3, 1, "", "critical"], [18, 3, 1, "", "debug"], [18, 3, 1, "", "error"], [18, 3, 1, "", "info"], [18, 3, 1, "", "warning"]], "graphnet.utilities.logging.RepeatFilter": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "filter"]], "graphnet.utilities.maths": [[18, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 22], "impact": [0, 22], "usag": [0, 22], "api": 1, "graphnet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "subpackag": [2, 3, 4, 9, 11, 18], "submodul": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "constant": [2, 3], "modul": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "data": [3, 4, 5, 6, 7, 8], "dataconvert": 3, "dataload": 3, "dataset": 3, "pipelin": 3, "extractor": [4, 5], "i3extractor": 4, "i3featureextractor": 4, "i3genericextractor": 4, "i3hybridrecoextractor": 4, "i3pisaextractor": 4, "i3retroextractor": 4, "i3splinempeextractor": 4, "i3truthextractor": 4, "i3tumextractor": 4, "util": [5, 8, 11, 17, 18, 19], "collect": 5, "frame": 5, "type": 5, "parquet": 6, "parquet_dataconvert": 6, "parquet_dataset": 6, "sqlite": 7, "sqlite_dataconvert": 7, "sqlite_dataset": 7, "sqlite_dataset_perturb": 7, "sqlite_select": 7, "sqlite_util": 7, "parquet_to_sqlit": 8, "random": 8, "string_selection_resolv": 8, "deploy": [9, 10], "i3modul": 10, "graphnet_modul": 10, "model": [11, 12, 13, 14, 15], "coarsen": 11, "graph_build": 11, "standard_model": 11, "compon": 12, "layer": 12, "pool": 12, "detector": 13, "icecub": 13, "prometheu": 13, "gnn": 14, "convnet": 14, "dynedg": 14, "dynedge_jinst": 14, "task": 15, "classif": 15, "reconstruct": 15, "pisa": 16, "fit": 16, "plot": 16, "train": 17, "callback": 17, "label": 17, "loss_funct": 17, "weight_fit": 17, "argpars": 18, "decor": 18, "filesi": 18, "import": 18, "log": 18, "math": 18, "config": 19, "base_config": 19, "configur": 19, "dataset_config": 19, "model_config": 19, "pars": 19, "training_config": 19, "src": 20, "contribut": 21, "github": 21, "issu": 21, "pull": 21, "request": 21, "convent": 21, "code": 21, "qualiti": 21, "instal": 23, "icetrai": 23, "stand": 23, "alon": 23, "run": 23, "docker": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [22, "about"]], "Impact": [[0, "impact"], [22, "impact"]], "Usage": [[0, "usage"], [22, "usage"]], "API": [[1, "api"]], "graphnet package": [[2, "module-graphnet"]], "Subpackages": [[2, "subpackages"], [3, "subpackages"], [4, "subpackages"], [9, "subpackages"], [11, "subpackages"], [18, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"]], "graphnet.constants module": [[2, "module-graphnet.constants"]], "graphnet.data package": [[3, "module-graphnet.data"]], "graphnet.data.constants module": [[3, "module-graphnet.data.constants"]], "graphnet.data.dataconverter module": [[3, "module-graphnet.data.dataconverter"]], "graphnet.data.dataloader module": [[3, "module-graphnet.data.dataloader"]], "graphnet.data.dataset module": [[3, "module-graphnet.data.dataset"]], "graphnet.data.pipeline module": [[3, "module-graphnet.data.pipeline"]], "graphnet.data.extractors package": [[4, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor module": [[4, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor module": [[4, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor module": [[4, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor module": [[4, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3pisaextractor module": [[4, "module-graphnet.data.extractors.i3pisaextractor"]], "graphnet.data.extractors.i3retroextractor module": [[4, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor module": [[4, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor module": [[4, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor module": [[4, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities package": [[5, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections module": [[5, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames module": [[5, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types module": [[5, "module-graphnet.data.extractors.utilities.types"]], "graphnet.data.parquet package": [[6, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter module": [[6, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset module": [[6, "module-graphnet.data.parquet.parquet_dataset"]], "graphnet.data.sqlite package": [[7, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter module": [[7, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset module": [[7, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed module": [[7, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection module": [[7, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities module": [[7, "module-graphnet.data.sqlite.sqlite_utilities"]], "graphnet.data.utilities package": [[8, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite module": [[8, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random module": [[8, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver module": [[8, "module-graphnet.data.utilities.string_selection_resolver"]], "graphnet.deployment package": [[9, "module-graphnet.deployment"]], "graphnet.deployment.i3modules package": [[10, "graphnet-deployment-i3modules-package"]], "graphnet.deployment.i3modules.graphnet_module module": [[10, "graphnet-deployment-i3modules-graphnet-module-module"]], "graphnet.models package": [[11, "module-graphnet.models"]], "graphnet.models.coarsening module": [[11, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders module": [[11, "module-graphnet.models.graph_builders"]], "graphnet.models.model module": [[11, "module-graphnet.models.model"]], "graphnet.models.standard_model module": [[11, "module-graphnet.models.standard_model"]], "graphnet.models.utils module": [[11, "module-graphnet.models.utils"]], "graphnet.models.components package": [[12, "module-graphnet.models.components"]], "graphnet.models.components.layers module": [[12, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool module": [[12, "module-graphnet.models.components.pool"]], "graphnet.models.detector package": [[13, "module-graphnet.models.detector"]], "graphnet.models.detector.detector module": [[13, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube module": [[13, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus module": [[13, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn package": [[14, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet module": [[14, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge module": [[14, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst module": [[14, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn module": [[14, "module-graphnet.models.gnn.gnn"]], "graphnet.models.task package": [[15, "module-graphnet.models.task"]], "graphnet.models.task.classification module": [[15, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction module": [[15, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task module": [[15, "module-graphnet.models.task.task"]], "graphnet.pisa package": [[16, "module-graphnet.pisa"]], "graphnet.pisa.fitting module": [[16, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting module": [[16, "module-graphnet.pisa.plotting"]], "graphnet.training package": [[17, "module-graphnet.training"]], "graphnet.training.callbacks module": [[17, "module-graphnet.training.callbacks"]], "graphnet.training.labels module": [[17, "module-graphnet.training.labels"]], "graphnet.training.loss_functions module": [[17, "module-graphnet.training.loss_functions"]], "graphnet.training.utils module": [[17, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting module": [[17, "module-graphnet.training.weight_fitting"]], "graphnet.utilities package": [[18, "module-graphnet.utilities"]], "graphnet.utilities.argparse module": [[18, "module-graphnet.utilities.argparse"]], "graphnet.utilities.decorators module": [[18, "module-graphnet.utilities.decorators"]], "graphnet.utilities.filesys module": [[18, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports module": [[18, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging module": [[18, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths module": [[18, "module-graphnet.utilities.maths"]], "graphnet.utilities.config package": [[19, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config module": [[19, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable module": [[19, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config module": [[19, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config module": [[19, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing module": [[19, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config module": [[19, "module-graphnet.utilities.config.training_config"]], "src": [[20, "src"]], "Contribute": [[21, "contribute"]], "GitHub issues": [[21, "github-issues"]], "Pull requests": [[21, "pull-requests"]], "Conventions": [[21, "conventions"]], "Code quality": [[21, "code-quality"]], "Install": [[23, "install"]], "Installing with IceTray": [[23, "installing-with-icetray"]], "Installing stand-alone": [[23, "installing-stand-alone"]], "Running in Docker": [[23, "running-in-docker"]]}, "indexentries": {"graphnet": [[2, "module-graphnet"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "module": [[2, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [3, "module-graphnet.data.constants"], [3, "module-graphnet.data.dataconverter"], [3, "module-graphnet.data.dataloader"], [3, "module-graphnet.data.dataset"], [3, "module-graphnet.data.pipeline"], [4, "module-graphnet.data.extractors"], [4, "module-graphnet.data.extractors.i3extractor"], [4, "module-graphnet.data.extractors.i3featureextractor"], [4, "module-graphnet.data.extractors.i3genericextractor"], [4, "module-graphnet.data.extractors.i3hybridrecoextractor"], [4, "module-graphnet.data.extractors.i3pisaextractor"], [4, "module-graphnet.data.extractors.i3retroextractor"], [4, "module-graphnet.data.extractors.i3splinempeextractor"], [4, "module-graphnet.data.extractors.i3truthextractor"], [4, "module-graphnet.data.extractors.i3tumextractor"], [5, "module-graphnet.data.extractors.utilities"], [5, "module-graphnet.data.extractors.utilities.collections"], [5, "module-graphnet.data.extractors.utilities.frames"], [5, "module-graphnet.data.extractors.utilities.types"], [6, "module-graphnet.data.parquet"], [6, "module-graphnet.data.parquet.parquet_dataconverter"], [6, "module-graphnet.data.parquet.parquet_dataset"], [7, "module-graphnet.data.sqlite"], [7, "module-graphnet.data.sqlite.sqlite_dataconverter"], [7, "module-graphnet.data.sqlite.sqlite_dataset"], [7, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [7, "module-graphnet.data.sqlite.sqlite_selection"], [7, "module-graphnet.data.sqlite.sqlite_utilities"], [8, "module-graphnet.data.utilities"], [8, "module-graphnet.data.utilities.parquet_to_sqlite"], [8, "module-graphnet.data.utilities.random"], [8, "module-graphnet.data.utilities.string_selection_resolver"], [9, "module-graphnet.deployment"], [11, "module-graphnet.models"], [11, "module-graphnet.models.coarsening"], [11, "module-graphnet.models.graph_builders"], [11, "module-graphnet.models.model"], [11, "module-graphnet.models.standard_model"], [11, "module-graphnet.models.utils"], [12, "module-graphnet.models.components"], [12, "module-graphnet.models.components.layers"], [12, "module-graphnet.models.components.pool"], [13, "module-graphnet.models.detector"], [13, "module-graphnet.models.detector.detector"], [13, "module-graphnet.models.detector.icecube"], [13, "module-graphnet.models.detector.prometheus"], [14, "module-graphnet.models.gnn"], [14, "module-graphnet.models.gnn.convnet"], [14, "module-graphnet.models.gnn.dynedge"], [14, "module-graphnet.models.gnn.dynedge_jinst"], [14, "module-graphnet.models.gnn.gnn"], [15, "module-graphnet.models.task"], [15, "module-graphnet.models.task.classification"], [15, "module-graphnet.models.task.reconstruction"], [15, "module-graphnet.models.task.task"], [16, "module-graphnet.pisa"], [16, "module-graphnet.pisa.fitting"], [16, "module-graphnet.pisa.plotting"], [17, "module-graphnet.training"], [17, "module-graphnet.training.callbacks"], [17, "module-graphnet.training.labels"], [17, "module-graphnet.training.loss_functions"], [17, "module-graphnet.training.utils"], [17, "module-graphnet.training.weight_fitting"], [18, "module-graphnet.utilities"], [18, "module-graphnet.utilities.argparse"], [18, "module-graphnet.utilities.decorators"], [18, "module-graphnet.utilities.filesys"], [18, "module-graphnet.utilities.imports"], [18, "module-graphnet.utilities.logging"], [18, "module-graphnet.utilities.maths"], [19, "module-graphnet.utilities.config"], [19, "module-graphnet.utilities.config.base_config"], [19, "module-graphnet.utilities.config.configurable"], [19, "module-graphnet.utilities.config.dataset_config"], [19, "module-graphnet.utilities.config.model_config"], [19, "module-graphnet.utilities.config.parsing"], [19, "module-graphnet.utilities.config.training_config"]], "columnmissingexception": [[3, "graphnet.data.dataset.ColumnMissingException"]], "deepcore (graphnet.data.constants.features attribute)": [[3, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[3, "graphnet.data.constants.TRUTH.DEEPCORE"]], "dataconverter (class in graphnet.data.dataconverter)": [[3, "graphnet.data.dataconverter.DataConverter"]], "dataloader (class in graphnet.data.dataloader)": [[3, "graphnet.data.dataloader.DataLoader"]], "dataset (class in graphnet.data.dataset)": [[3, "graphnet.data.dataset.Dataset"]], "features (class in graphnet.data.constants)": [[3, "graphnet.data.constants.FEATURES"]], "fileset (class in graphnet.data.dataconverter)": [[3, "graphnet.data.dataconverter.FileSet"]], "icecube86 (graphnet.data.constants.features attribute)": [[3, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[3, "graphnet.data.constants.TRUTH.ICECUBE86"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[3, "graphnet.data.pipeline.InSQLitePipeline"]], "kaggle (graphnet.data.constants.features attribute)": [[3, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[3, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[3, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[3, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[3, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[3, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[3, "graphnet.data.constants.TRUTH.UPGRADE"]], "__call__() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter.__call__"]], "__call__() (graphnet.data.pipeline.insqlitepipeline method)": [[3, "graphnet.data.pipeline.InSQLitePipeline.__call__"]], "__getitem__() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset.__getitem__"]], "__init__() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter.__init__"]], "__init__() (graphnet.data.dataloader.dataloader method)": [[3, "graphnet.data.dataloader.DataLoader.__init__"]], "__init__() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset.__init__"]], "__init__() (graphnet.data.pipeline.insqlitepipeline method)": [[3, "graphnet.data.pipeline.InSQLitePipeline.__init__"]], "__len__() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset.__len__"]], "_check_missing_columns() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._check_missing_columns"]], "_construct_dataset_from_list_of_strings() (graphnet.data.dataset.dataset class method)": [[3, "graphnet.data.dataset.Dataset._construct_dataset_from_list_of_strings"]], "_construct_datasets_from_dict() (graphnet.data.dataset.dataset class method)": [[3, "graphnet.data.dataset.Dataset._construct_datasets_from_dict"]], "_create_graph() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._create_graph"]], "_extract_data() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter._extract_data"]], "_get_all_indices() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._get_all_indices"]], "_get_dbang_label() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._get_dbang_label"]], "_get_event_index() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._get_event_index"]], "_get_labels() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._get_labels"]], "_init() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._init"]], "_iterate_over_batches_of_files() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter._iterate_over_batches_of_files"]], "_post_init() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._post_init"]], "_query() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._query"]], "_remove_missing_columns() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._remove_missing_columns"]], "_resolve_string_selection_to_indices() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset._resolve_string_selection_to_indices"]], "_save_filenames() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter._save_filenames"]], "_update_shared_variables() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter._update_shared_variables"]], "add_label() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset.add_label"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[3, "graphnet.data.dataconverter.cache_output_files"]], "collate_fn() (in module graphnet.data.dataloader)": [[3, "graphnet.data.dataloader.collate_fn"]], "concatenate() (graphnet.data.dataset.dataset class method)": [[3, "graphnet.data.dataset.Dataset.concatenate"]], "do_shuffle() (in module graphnet.data.dataloader)": [[3, "graphnet.data.dataloader.do_shuffle"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[3, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "from_config() (graphnet.data.dataset.dataset class method)": [[3, "graphnet.data.dataset.Dataset.from_config"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[3, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[3, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data": [[3, "module-graphnet.data"]], "graphnet.data.constants": [[3, "module-graphnet.data.constants"]], "graphnet.data.dataconverter": [[3, "module-graphnet.data.dataconverter"]], "graphnet.data.dataloader": [[3, "module-graphnet.data.dataloader"]], "graphnet.data.dataset": [[3, "module-graphnet.data.dataset"]], "graphnet.data.pipeline": [[3, "module-graphnet.data.pipeline"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[3, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[3, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter.merge_files"]], "path (graphnet.data.dataset.dataset property)": [[3, "graphnet.data.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset method)": [[3, "graphnet.data.dataset.Dataset.query_table"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[3, "graphnet.data.dataconverter.DataConverter.save_data"]], "truth_table (graphnet.data.dataset.dataset property)": [[3, "graphnet.data.dataset.Dataset.truth_table"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[4, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[4, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[4, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[4, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[4, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[4, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[4, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[4, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[4, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[4, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[4, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[4, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[4, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "__call__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[4, "graphnet.data.extractors.i3extractor.I3Extractor.__call__"]], "__call__() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[4, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecube86 method)": [[4, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3featureextractoricecubeupgrade method)": [[4, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3featureextractor.i3pulsenoisetruthflagicecubeupgrade method)": [[4, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade.__call__"]], "__call__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3hybridrecoextractor.i3galacticplanehybridrecoextractor method)": [[4, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3pisaextractor.i3pisaextractor method)": [[4, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[4, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3splinempeextractor.i3splinempeicextractor method)": [[4, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[4, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__call__"]], "__call__() (graphnet.data.extractors.i3tumextractor.i3tumextractor method)": [[4, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor.__call__"]], "__init__() (graphnet.data.extractors.i3extractor.i3extractor method)": [[4, "graphnet.data.extractors.i3extractor.I3Extractor.__init__"]], "__init__() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[4, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.__init__"]], "__init__() (graphnet.data.extractors.i3featureextractor.i3featureextractor method)": [[4, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3hybridrecoextractor.i3galacticplanehybridrecoextractor method)": [[4, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3pisaextractor.i3pisaextractor method)": [[4, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[4, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3splinempeextractor.i3splinempeicextractor method)": [[4, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[4, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor.__init__"]], "__init__() (graphnet.data.extractors.i3tumextractor.i3tumextractor method)": [[4, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor.__init__"]], "_cast_mc_tree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_mc_tree"]], "_cast_triggers() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._cast_triggers"]], "_extract_per_pulse_attribute() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_per_pulse_attribute"]], "_extract_pulse_series_map() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._extract_pulse_series_map"]], "_find_data_type() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[4, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._find_data_type"]], "_flatten_result() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result"]], "_flatten_result_mctree() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._flatten_result_mctree"]], "_get_keys() (graphnet.data.extractors.i3genericextractor.i3genericextractor method)": [[4, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor._get_keys"]], "_get_primary_particle_interaction_type_and_elasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[4, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_particle_interaction_type_and_elasticity"]], "_get_primary_track_energy_and_inelasticity() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[4, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._get_primary_track_energy_and_inelasticity"]], "_load_gcd_data() (graphnet.data.extractors.i3extractor.i3extractor method)": [[4, "graphnet.data.extractors.i3extractor.I3Extractor._load_gcd_data"]], "_muon_stopped() (graphnet.data.extractors.i3truthextractor.i3truthextractor method)": [[4, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor._muon_stopped"]], "_try_get_key() (graphnet.data.extractors.i3retroextractor.i3retroextractor method)": [[4, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor._try_get_key"]], "graphnet.data.extractors": [[4, "module-graphnet.data.extractors"]], "graphnet.data.extractors.i3extractor": [[4, "module-graphnet.data.extractors.i3extractor"]], "graphnet.data.extractors.i3featureextractor": [[4, "module-graphnet.data.extractors.i3featureextractor"]], "graphnet.data.extractors.i3genericextractor": [[4, "module-graphnet.data.extractors.i3genericextractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[4, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "graphnet.data.extractors.i3pisaextractor": [[4, "module-graphnet.data.extractors.i3pisaextractor"]], "graphnet.data.extractors.i3retroextractor": [[4, "module-graphnet.data.extractors.i3retroextractor"]], "graphnet.data.extractors.i3splinempeextractor": [[4, "module-graphnet.data.extractors.i3splinempeextractor"]], "graphnet.data.extractors.i3truthextractor": [[4, "module-graphnet.data.extractors.i3truthextractor"]], "graphnet.data.extractors.i3tumextractor": [[4, "module-graphnet.data.extractors.i3tumextractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[4, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[4, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[4, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[5, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[5, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[5, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.get_member_variables"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[5, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities": [[5, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[5, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[5, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[5, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[5, "graphnet.data.extractors.utilities.types.is_type"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[5, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[5, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[6, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[6, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "_format_dictionary_result() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[6, "graphnet.data.parquet.parquet_dataset.ParquetDataset._format_dictionary_result"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[6, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet": [[6, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[6, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[6, "module-graphnet.data.parquet.parquet_dataset"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[6, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[6, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[6, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[7, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[7, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "__getitem__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[7, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__getitem__"]], "__init__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[7, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__init__"]], "_close_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[7, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._close_connection"]], "_establish_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[7, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._establish_connection"]], "_extract_everything() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_everything"]], "_extract_table_names() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_table_names"]], "_merge_temporary_databases() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._merge_temporary_databases"]], "_submit_to_database() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._submit_to_database"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[7, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite": [[7, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[7, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[7, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[7, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[7, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[7, "module-graphnet.data.sqlite.sqlite_utilities"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[7, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[7, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[7, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[8, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "__init__() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[8, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.__init__"]], "__init__() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.__init__"]], "_get_index_cache_path() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_index_cache_path"]], "_get_random_events_from_selection() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_random_events_from_selection"]], "_get_values_cache_path() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_values_cache_path"]], "_parse_variable_names() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._parse_variable_names"]], "_save_config() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[8, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter._save_config"]], "graphnet.data.utilities": [[8, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[8, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[8, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver": [[8, "module-graphnet.data.utilities.string_selection_resolver"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[8, "graphnet.data.utilities.random.pairwise_shuffle"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[8, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[8, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.deployment": [[9, "module-graphnet.deployment"]], "attributecoarsening (class in graphnet.models.coarsening)": [[11, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[11, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[11, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[11, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[11, "graphnet.models.coarsening.DOMCoarsening"]], "euclideangraphbuilder (class in graphnet.models.graph_builders)": [[11, "graphnet.models.graph_builders.EuclideanGraphBuilder"]], "graphbuilder (class in graphnet.models.graph_builders)": [[11, "graphnet.models.graph_builders.GraphBuilder"]], "knngraphbuilder (class in graphnet.models.graph_builders)": [[11, "graphnet.models.graph_builders.KNNGraphBuilder"]], "model (class in graphnet.models.model)": [[11, "graphnet.models.model.Model"]], "radialgraphbuilder (class in graphnet.models.graph_builders)": [[11, "graphnet.models.graph_builders.RadialGraphBuilder"]], "standardmodel (class in graphnet.models.standard_model)": [[11, "graphnet.models.standard_model.StandardModel"]], "__init__() (graphnet.models.coarsening.attributecoarsening method)": [[11, "graphnet.models.coarsening.AttributeCoarsening.__init__"]], "__init__() (graphnet.models.coarsening.coarsening method)": [[11, "graphnet.models.coarsening.Coarsening.__init__"]], "__init__() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[11, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening.__init__"]], "__init__() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[11, "graphnet.models.graph_builders.EuclideanGraphBuilder.__init__"]], "__init__() (graphnet.models.graph_builders.knngraphbuilder method)": [[11, "graphnet.models.graph_builders.KNNGraphBuilder.__init__"]], "__init__() (graphnet.models.graph_builders.radialgraphbuilder method)": [[11, "graphnet.models.graph_builders.RadialGraphBuilder.__init__"]], "__init__() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.__init__"]], "_additional_features() (graphnet.models.coarsening.coarsening method)": [[11, "graphnet.models.coarsening.Coarsening._additional_features"]], "_additional_features() (graphnet.models.coarsening.customdomcoarsening method)": [[11, "graphnet.models.coarsening.CustomDOMCoarsening._additional_features"]], "_perform_clustering() (graphnet.models.coarsening.attributecoarsening method)": [[11, "graphnet.models.coarsening.AttributeCoarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.coarsening method)": [[11, "graphnet.models.coarsening.Coarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domandtimewindowcoarsening method)": [[11, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening._perform_clustering"]], "_perform_clustering() (graphnet.models.coarsening.domcoarsening method)": [[11, "graphnet.models.coarsening.DOMCoarsening._perform_clustering"]], "_transfer_attributes() (graphnet.models.coarsening.coarsening method)": [[11, "graphnet.models.coarsening.Coarsening._transfer_attributes"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[11, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[11, "graphnet.models.utils.calculate_xyzt_homophily"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.model.model method)": [[11, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.coarsening.coarsening method)": [[11, "graphnet.models.coarsening.Coarsening.forward"]], "forward() (graphnet.models.graph_builders.euclideangraphbuilder method)": [[11, "graphnet.models.graph_builders.EuclideanGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.knngraphbuilder method)": [[11, "graphnet.models.graph_builders.KNNGraphBuilder.forward"]], "forward() (graphnet.models.graph_builders.radialgraphbuilder method)": [[11, "graphnet.models.graph_builders.RadialGraphBuilder.forward"]], "forward() (graphnet.models.model.model method)": [[11, "graphnet.models.model.Model.forward"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.forward"]], "from_config() (graphnet.models.model.model class method)": [[11, "graphnet.models.model.Model.from_config"]], "graphnet.models": [[11, "module-graphnet.models"]], "graphnet.models.coarsening": [[11, "module-graphnet.models.coarsening"]], "graphnet.models.graph_builders": [[11, "module-graphnet.models.graph_builders"]], "graphnet.models.model": [[11, "module-graphnet.models.model"]], "graphnet.models.standard_model": [[11, "module-graphnet.models.standard_model"]], "graphnet.models.utils": [[11, "module-graphnet.models.utils"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.inference"]], "knn_graph_batch() (in module graphnet.models.utils)": [[11, "graphnet.models.utils.knn_graph_batch"]], "load() (graphnet.models.model.model class method)": [[11, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[11, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[11, "graphnet.models.model.Model.predict"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[11, "graphnet.models.model.Model.predict_as_dataframe"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[11, "graphnet.models.coarsening.Coarsening.reduce_options"]], "save() (graphnet.models.model.model method)": [[11, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[11, "graphnet.models.model.Model.save_state_dict"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.shared_step"]], "train() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.training_step"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[11, "graphnet.models.coarsening.unbatch_edge_index"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[11, "graphnet.models.standard_model.StandardModel.validation_step"]], "dynedgeconv (class in graphnet.models.components.layers)": [[12, "graphnet.models.components.layers.DynEdgeConv"]], "__init__() (graphnet.models.components.layers.dynedgeconv method)": [[12, "graphnet.models.components.layers.DynEdgeConv.__init__"]], "_group_identical() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool._group_identical"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[12, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components": [[12, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[12, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[12, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[12, "graphnet.models.components.pool.sum_pool_x"]], "detector (class in graphnet.models.detector.detector)": [[13, "graphnet.models.detector.detector.Detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "prometheus (class in graphnet.models.detector.prometheus)": [[13, "graphnet.models.detector.prometheus.Prometheus"]], "__init__() (graphnet.models.detector.detector.detector method)": [[13, "graphnet.models.detector.detector.Detector.__init__"]], "_forward() (graphnet.models.detector.detector.detector method)": [[13, "graphnet.models.detector.detector.Detector._forward"]], "_forward() (graphnet.models.detector.icecube.icecube86 method)": [[13, "graphnet.models.detector.icecube.IceCube86._forward"]], "_forward() (graphnet.models.detector.icecube.icecubedeepcore method)": [[13, "graphnet.models.detector.icecube.IceCubeDeepCore._forward"]], "_forward() (graphnet.models.detector.icecube.icecubekaggle method)": [[13, "graphnet.models.detector.icecube.IceCubeKaggle._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade method)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade_v2 method)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade_V2._forward"]], "_forward() (graphnet.models.detector.prometheus.prometheus method)": [[13, "graphnet.models.detector.prometheus.Prometheus._forward"]], "features (graphnet.models.detector.detector.detector property)": [[13, "graphnet.models.detector.detector.Detector.features"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[13, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[13, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[13, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[13, "graphnet.models.detector.prometheus.Prometheus.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[13, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector": [[13, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[13, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[13, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus": [[13, "module-graphnet.models.detector.prometheus"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[13, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[13, "graphnet.models.detector.detector.Detector.nb_outputs"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[13, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "convnet (class in graphnet.models.gnn.convnet)": [[14, "graphnet.models.gnn.convnet.ConvNet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[14, "graphnet.models.gnn.dynedge.DynEdge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[14, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "gnn (class in graphnet.models.gnn.gnn)": [[14, "graphnet.models.gnn.gnn.GNN"]], "__init__() (graphnet.models.gnn.convnet.convnet method)": [[14, "graphnet.models.gnn.convnet.ConvNet.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge.__init__"]], "__init__() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[14, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.__init__"]], "__init__() (graphnet.models.gnn.gnn.gnn method)": [[14, "graphnet.models.gnn.gnn.GNN.__init__"]], "_calculate_global_variables() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge._calculate_global_variables"]], "_construct_layers() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge._construct_layers"]], "_global_pooling() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge._global_pooling"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[14, "graphnet.models.gnn.convnet.ConvNet.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[14, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[14, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[14, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn": [[14, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[14, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[14, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[14, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[14, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[14, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[14, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[15, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[15, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "identitytask (class in graphnet.models.task.task)": [[15, "graphnet.models.task.task.IdentityTask"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[15, "graphnet.models.task.classification.MulticlassClassificationTask"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.PositionReconstruction"]], "task (class in graphnet.models.task.task)": [[15, "graphnet.models.task.task.Task"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[15, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "__init__() (graphnet.models.task.task.identitytask method)": [[15, "graphnet.models.task.task.IdentityTask.__init__"]], "__init__() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.__init__"]], "_forward() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task._forward"]], "_validate_and_set_transforms() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task._validate_and_set_transforms"]], "compute_loss() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task": [[15, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[15, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[15, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[15, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[15, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[15, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[15, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[15, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[15, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[15, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[15, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[15, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[15, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[15, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[15, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[15, "graphnet.models.task.task.Task.train_eval"]], "contourfitter (class in graphnet.pisa.fitting)": [[16, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[16, "graphnet.pisa.fitting.WeightFitter"]], "__init__() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter.__init__"]], "__init__() (graphnet.pisa.fitting.weightfitter method)": [[16, "graphnet.pisa.fitting.WeightFitter.__init__"]], "_check_inputs() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter._check_inputs"]], "_fit_contours() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter._fit_contours"]], "_parallel_fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter._parallel_fit_1d_contour"]], "_parallel_fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter._parallel_fit_2d_contour"]], "config_updater() (in module graphnet.pisa.fitting)": [[16, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[16, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[16, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa": [[16, "module-graphnet.pisa"]], "graphnet.pisa.fitting": [[16, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[16, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[16, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[16, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[16, "graphnet.pisa.plotting.read_entry"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[17, "graphnet.training.weight_fitting.BjoernLow"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.CrossEntropyLoss"]], "direction (class in graphnet.training.labels)": [[17, "graphnet.training.labels.Direction"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "label (class in graphnet.training.labels)": [[17, "graphnet.training.labels.Label"]], "logcmk (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.MSELoss"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[17, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[17, "graphnet.training.callbacks.ProgressBar"]], "rmseloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.RMSELoss"]], "uniform (class in graphnet.training.weight_fitting)": [[17, "graphnet.training.weight_fitting.Uniform"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "weightfitter (class in graphnet.training.weight_fitting)": [[17, "graphnet.training.weight_fitting.WeightFitter"]], "__call__() (graphnet.training.labels.direction method)": [[17, "graphnet.training.labels.Direction.__call__"]], "__call__() (graphnet.training.labels.label method)": [[17, "graphnet.training.labels.Label.__call__"]], "__init__() (graphnet.training.callbacks.piecewiselinearlr method)": [[17, "graphnet.training.callbacks.PiecewiseLinearLR.__init__"]], "__init__() (graphnet.training.labels.direction method)": [[17, "graphnet.training.labels.Direction.__init__"]], "__init__() (graphnet.training.labels.label method)": [[17, "graphnet.training.labels.Label.__init__"]], "__init__() (graphnet.training.loss_functions.crossentropyloss method)": [[17, "graphnet.training.loss_functions.CrossEntropyLoss.__init__"]], "__init__() (graphnet.training.loss_functions.lossfunction method)": [[17, "graphnet.training.loss_functions.LossFunction.__init__"]], "__init__() (graphnet.training.weight_fitting.weightfitter method)": [[17, "graphnet.training.weight_fitting.WeightFitter.__init__"]], "_evaluate() (graphnet.training.loss_functions.vonmisesfisherloss method)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss._evaluate"]], "_fit_weights() (graphnet.training.weight_fitting.bjoernlow method)": [[17, "graphnet.training.weight_fitting.BjoernLow._fit_weights"]], "_fit_weights() (graphnet.training.weight_fitting.uniform method)": [[17, "graphnet.training.weight_fitting.Uniform._fit_weights"]], "_forward() (graphnet.training.loss_functions.crossentropyloss method)": [[17, "graphnet.training.loss_functions.CrossEntropyLoss._forward"]], "_forward() (graphnet.training.loss_functions.euclideandistanceloss method)": [[17, "graphnet.training.loss_functions.EuclideanDistanceLoss._forward"]], "_forward() (graphnet.training.loss_functions.logcoshloss method)": [[17, "graphnet.training.loss_functions.LogCoshLoss._forward"]], "_forward() (graphnet.training.loss_functions.lossfunction method)": [[17, "graphnet.training.loss_functions.LossFunction._forward"]], "_forward() (graphnet.training.loss_functions.mseloss method)": [[17, "graphnet.training.loss_functions.MSELoss._forward"]], "_forward() (graphnet.training.loss_functions.rmseloss method)": [[17, "graphnet.training.loss_functions.RMSELoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher2dloss method)": [[17, "graphnet.training.loss_functions.VonMisesFisher2DLoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher3dloss method)": [[17, "graphnet.training.loss_functions.VonMisesFisher3DLoss._forward"]], "_get_truth() (graphnet.training.weight_fitting.weightfitter method)": [[17, "graphnet.training.weight_fitting.WeightFitter._get_truth"]], "_log_cosh() (graphnet.training.loss_functions.logcoshloss class method)": [[17, "graphnet.training.loss_functions.LogCoshLoss._log_cosh"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[17, "graphnet.training.loss_functions.LogCMK.backward"]], "collate_fn() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.collate_fn"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[17, "graphnet.training.weight_fitting.WeightFitter.fit"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[17, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[17, "graphnet.training.loss_functions.LossFunction.forward"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[17, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "get_predictions() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.get_predictions"]], "graphnet.training": [[17, "module-graphnet.training"]], "graphnet.training.callbacks": [[17, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[17, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[17, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[17, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[17, "module-graphnet.training.weight_fitting"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[17, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "make_dataloader() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.make_train_validation_dataloader"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[17, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "save_results() (in module graphnet.training.utils)": [[17, "graphnet.training.utils.save_results"]], "argumentparser (class in graphnet.utilities.argparse)": [[18, "graphnet.utilities.argparse.ArgumentParser"]], "loggermixin (class in graphnet.utilities.logging)": [[18, "graphnet.utilities.logging.LoggerMixin"]], "options (class in graphnet.utilities.argparse)": [[18, "graphnet.utilities.argparse.Options"]], "repeatfilter (class in graphnet.utilities.logging)": [[18, "graphnet.utilities.logging.RepeatFilter"]], "__init__() (graphnet.utilities.argparse.argumentparser method)": [[18, "graphnet.utilities.argparse.ArgumentParser.__init__"]], "__init__() (graphnet.utilities.argparse.options method)": [[18, "graphnet.utilities.argparse.Options.__init__"]], "__init__() (graphnet.utilities.logging.repeatfilter method)": [[18, "graphnet.utilities.logging.RepeatFilter.__init__"]], "__len__() (graphnet.utilities.argparse.options method)": [[18, "graphnet.utilities.argparse.Options.__len__"]], "__repr__() (graphnet.utilities.argparse.options method)": [[18, "graphnet.utilities.argparse.Options.__repr__"]], "_get_logger() (graphnet.utilities.logging.loggermixin method)": [[18, "graphnet.utilities.logging.LoggerMixin._get_logger"]], "contains() (graphnet.utilities.argparse.options method)": [[18, "graphnet.utilities.argparse.Options.contains"]], "critical() (graphnet.utilities.logging.loggermixin method)": [[18, "graphnet.utilities.logging.LoggerMixin.critical"]], "debug() (graphnet.utilities.logging.loggermixin method)": [[18, "graphnet.utilities.logging.LoggerMixin.debug"]], "eps_like() (in module graphnet.utilities.maths)": [[18, "graphnet.utilities.maths.eps_like"]], "error() (graphnet.utilities.logging.loggermixin method)": [[18, "graphnet.utilities.logging.LoggerMixin.error"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[18, "graphnet.utilities.logging.RepeatFilter.filter"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[18, "graphnet.utilities.filesys.find_i3_files"]], "get_formatters() (in module graphnet.utilities.logging)": [[18, "graphnet.utilities.logging.get_formatters"]], "get_logger() (in module graphnet.utilities.logging)": [[18, "graphnet.utilities.logging.get_logger"]], "graphnet.utilities": [[18, "module-graphnet.utilities"]], "graphnet.utilities.argparse": [[18, "module-graphnet.utilities.argparse"]], "graphnet.utilities.decorators": [[18, "module-graphnet.utilities.decorators"]], "graphnet.utilities.filesys": [[18, "module-graphnet.utilities.filesys"]], "graphnet.utilities.imports": [[18, "module-graphnet.utilities.imports"]], "graphnet.utilities.logging": [[18, "module-graphnet.utilities.logging"]], "graphnet.utilities.maths": [[18, "module-graphnet.utilities.maths"]], "has_extension() (in module graphnet.utilities.filesys)": [[18, "graphnet.utilities.filesys.has_extension"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[18, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[18, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[18, "graphnet.utilities.imports.has_torch_package"]], "info() (graphnet.utilities.logging.loggermixin method)": [[18, "graphnet.utilities.logging.LoggerMixin.info"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[18, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[18, "graphnet.utilities.filesys.is_i3_file"]], "pop_default() (graphnet.utilities.argparse.options method)": [[18, "graphnet.utilities.argparse.Options.pop_default"]], "requires_icecube() (in module graphnet.utilities.imports)": [[18, "graphnet.utilities.imports.requires_icecube"]], "set_logging_level() (in module graphnet.utilities.logging)": [[18, "graphnet.utilities.logging.set_logging_level"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[18, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "warn_once() (in module graphnet.utilities.logging)": [[18, "graphnet.utilities.logging.warn_once"]], "warning() (graphnet.utilities.logging.loggermixin method)": [[18, "graphnet.utilities.logging.LoggerMixin.warning"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[18, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[19, "graphnet.utilities.config.base_config.BaseConfig"]], "configurable (class in graphnet.utilities.config.configurable)": [[19, "graphnet.utilities.config.configurable.Configurable"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[19, "graphnet.utilities.config.model_config.ModelConfig"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[19, "graphnet.utilities.config.training_config.TrainingConfig"]], "__init__() (graphnet.utilities.config.configurable.configurable method)": [[19, "graphnet.utilities.config.configurable.Configurable.__init__"]], "__init__() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.__init__"]], "__init__() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig.__init__"]], "_construct_model() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig._construct_model"]], "_is_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig._is_model_config_entry"]], "_parse_if_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig._parse_if_model_config_entry"]], "_serialise() (graphnet.utilities.config.model_config.modelconfig class method)": [[19, "graphnet.utilities.config.model_config.ModelConfig._serialise"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[19, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[19, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[19, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[19, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "config (graphnet.utilities.config.configurable.configurable property)": [[19, "graphnet.utilities.config.configurable.Configurable.config"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[19, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[19, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[19, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[19, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[19, "graphnet.utilities.config.configurable.Configurable.from_config"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[19, "graphnet.utilities.config.base_config.get_all_argument_values"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config": [[19, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[19, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[19, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[19, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[19, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[19, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[19, "module-graphnet.utilities.config.training_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.list_all_submodules"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[19, "graphnet.utilities.config.base_config.BaseConfig.load"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[19, "graphnet.utilities.config.configurable.Configurable.save_config"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[19, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[19, "graphnet.utilities.config.model_config.save_model_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[19, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[19, "graphnet.utilities.config.parsing.traverse_and_apply"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[19, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]]}})