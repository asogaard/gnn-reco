Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.data", "api/graphnet.data.extractors", "api/graphnet.data.extractors.utilities", "api/graphnet.data.parquet", "api/graphnet.data.sqlite", "api/graphnet.data.utilities", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.models", "api/graphnet.models.components", "api/graphnet.models.detector", "api/graphnet.models.gnn", "api/graphnet.models.task", "api/graphnet.pisa", "api/graphnet.training", "api/graphnet.utilities", "api/graphnet.utilities.config", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.data.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.utilities.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.models.rst", "api/graphnet.models.components.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.task.rst", "api/graphnet.pisa.rst", "api/graphnet.training.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.config.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "graphnet.data", "graphnet.data.extractors", "graphnet.data.extractors.utilities", "graphnet.data.parquet", "graphnet.data.sqlite", "graphnet.data.utilities", "graphnet.deployment", "graphnet.deployment.i3modules", "graphnet.models", "graphnet.models.components", "graphnet.models.detector", "graphnet.models.gnn", "graphnet.models.task", "graphnet.pisa", "graphnet.training", "graphnet.utilities", "graphnet.utilities.config", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 19, 20, 21, 22], "i": [0, 1, 4, 6, 7, 11, 13, 14, 15, 16, 18, 20, 21, 22], "an": [0, 4, 6, 7, 9, 16, 20, 21, 22], "open": [0, 6, 20, 21], "sourc": [0, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21], "python": [0, 1, 3, 4, 20, 21, 22], "framework": [0, 21], "aim": [0, 1, 20, 21], "provid": [0, 1, 6, 10, 16, 20, 21, 22], "high": [0, 21], "qualiti": [0, 21], "user": [0, 10, 16, 21, 22], "friendli": [0, 21], "end": [0, 1, 21], "function": [0, 4, 6, 7, 11, 14, 15, 16, 17, 18, 21], "perform": [0, 11, 13, 14, 21], "reconstruct": [0, 1, 8, 9, 10, 21], "task": [0, 1, 10, 16, 20, 21], "neutrino": [0, 1, 6, 15, 21], "telescop": [0, 1, 21], "us": [0, 1, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22], "graph": [0, 1, 6, 11, 12, 16, 20, 21], "neural": [0, 1, 21], "network": [0, 1, 13, 21], "gnn": [0, 1, 9, 10, 15, 21, 22], "make": [0, 6, 16, 18, 20, 21, 22], "fast": [0, 16, 21, 22], "easi": [0, 21], "train": [0, 1, 6, 7, 8, 18, 19, 21, 22], "complex": [0, 10, 21], "model": [0, 1, 6, 8, 9, 15, 16, 18, 19, 21, 22], "can": [0, 1, 6, 7, 11, 15, 16, 18, 20, 21, 22], "event": [0, 1, 6, 7, 11, 14, 15, 16, 18, 21], "state": [0, 21], "art": [0, 21], "arbitrari": [0, 21], "detector": [0, 1, 9, 10, 21], "configur": [0, 1, 9, 10, 15, 17, 21], "infer": [0, 1, 8, 9, 14, 21, 22], "time": [0, 6, 11, 12, 14, 21, 22], "ar": [0, 1, 4, 5, 6, 7, 11, 13, 14, 15, 16, 18, 20, 21, 22], "order": [0, 4, 21], "magnitud": [0, 21], "faster": [0, 16, 21], "than": [0, 14, 16, 21], "tradit": [0, 21], "techniqu": [0, 21], "common": [0, 1, 16, 21], "ml": [0, 1, 21], "develop": [0, 1, 20, 21, 22], "physicist": [0, 1, 21], "wish": [0, 20, 21], "tool": [0, 1, 21], "research": [0, 21], "By": [0, 7, 14, 21], "unit": [0, 16, 20, 21], "both": [0, 14, 15, 21], "group": [0, 11, 21], "increas": [0, 16, 21], "longev": [0, 21], "usabl": [0, 21], "individu": [0, 6, 11, 13, 21], "code": [0, 6, 18, 21], "contribut": [0, 21, 22], "from": [0, 1, 3, 4, 5, 6, 7, 11, 14, 15, 16, 18, 20, 21, 22], "build": [0, 1, 10, 12, 18, 21], "gener": [0, 6, 14, 16, 21], "reusabl": [0, 21], "softwar": [0, 16, 21], "packag": [0, 1, 7, 18, 20, 21, 22], "base": [0, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21], "engin": [0, 21], "best": [0, 20, 21], "practic": [0, 20, 21], "lower": [0, 15, 21], "technic": [0, 21], "threshold": [0, 21], "most": [0, 1, 7, 21, 22], "scientif": [0, 1, 21], "problem": [0, 20, 21], "The": [0, 4, 6, 11, 13, 14, 15, 16, 21], "improv": [0, 1, 21], "classif": [0, 1, 10, 16, 21], "yield": [0, 13, 15, 16, 21], "veri": [0, 7, 21], "accur": [0, 21], "e": [0, 1, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 18, 20, 21, 22], "g": [0, 1, 4, 6, 7, 11, 14, 16, 20, 21, 22], "low": [0, 21], "energi": [0, 14, 16, 21], "observ": [0, 21], "icecub": [0, 1, 4, 9, 10, 21, 22], "here": [0, 20, 21, 22], "implement": [0, 1, 5, 6, 11, 13, 16, 20, 21], "wa": [0, 21], "appli": [0, 6, 11, 13, 18, 21], "oscil": [0, 15, 21], "lead": [0, 21], "signific": [0, 21], "angular": [0, 21], "rang": [0, 14, 21], "relev": [0, 1, 4, 7, 20, 21], "studi": [0, 21], "furthermor": [0, 21], "shown": [0, 21], "could": [0, 20, 21], "muon": [0, 6, 21], "v": [0, 14, 21], "therebi": [0, 1, 6, 18, 21], "effici": [0, 21], "puriti": [0, 21], "sampl": [0, 7, 21], "analysi": [0, 21, 22], "similarli": [0, 4, 21], "ha": [0, 4, 5, 6, 13, 16, 21, 22], "great": [0, 21], "point": [0, 16, 21], "analys": [0, 8, 15, 21], "final": [0, 6, 11, 16, 18, 21], "millisecond": [0, 21], "allow": [0, 8, 9, 10, 11, 16, 21, 22], "whole": [0, 21], "new": [0, 1, 11, 20, 21], "type": [0, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21], "cosmic": [0, 21], "alert": [0, 21], "which": [0, 4, 6, 7, 9, 11, 13, 14, 15, 16, 21, 22], "were": [0, 21], "previous": [0, 21], "unfeas": [0, 21], "possibl": [0, 4, 20, 21], "identifi": [0, 6, 18, 21], "10": [0, 16, 21], "tev": [0, 21], "monitor": [0, 21], "rate": [0, 16, 21], "direct": [0, 14, 16, 21], "real": [0, 21], "thi": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22], "enabl": [0, 2, 21], "first": [0, 16, 20, 21], "ever": [0, 21], "despit": [0, 21], "larg": [0, 16, 21], "background": [0, 21], "origin": [0, 15, 21], "compris": [0, 21], "number": [0, 6, 7, 11, 12, 13, 14, 16, 21], "modul": [0, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "necessari": [0, 4, 6, 20, 21], "workflow": [0, 21], "ingest": [0, 1, 2, 12, 21], "raw": [0, 21], "data": [0, 1, 9, 11, 12, 13, 14, 16, 18, 19, 21, 22], "domain": [0, 1, 2, 8, 21], "specif": [0, 1, 2, 4, 5, 6, 8, 11, 12, 13, 14, 16, 20, 21, 22], "format": [0, 1, 2, 4, 5, 6, 15, 18, 20, 21, 22], "deploi": [0, 1, 8, 9, 21], "chain": [0, 1, 8, 9, 10, 21, 22], "illustr": [0, 20, 21], "figur": [0, 15, 21], "below": [0, 7, 15, 16, 20, 21, 22], "level": [0, 6, 11, 21, 22], "overview": [0, 21], "typic": [0, 4, 21], "convert": [0, 1, 2, 4, 5, 6, 7, 21, 22], "industri": [0, 2, 21], "standard": [0, 2, 6, 7, 9, 20, 21], "intermedi": [0, 1, 2, 5, 6, 13, 21, 22], "file": [0, 1, 2, 4, 5, 6, 7, 15, 16, 18, 21, 22], "read": [0, 2, 4, 5, 6, 12, 13, 14, 21, 22], "simpl": [0, 10, 21], "physic": [0, 1, 4, 6, 8, 9, 10, 14, 21], "orient": [0, 10, 21], "compon": [0, 1, 10, 21], "manag": [0, 16, 21], "experi": [0, 1, 16, 21], "log": [0, 14, 16, 21, 22], "deploy": [0, 1, 19, 21], "modular": [0, 10, 21], "subclass": [0, 10, 21], "torch": [0, 5, 6, 9, 10, 11, 13, 21, 22], "nn": [0, 10, 11, 13, 21], "mean": [0, 5, 6, 10, 13, 16, 18, 21], "onli": [0, 1, 6, 10, 11, 14, 15, 16, 18, 21, 22], "need": [0, 4, 10, 16, 21, 22], "import": [0, 6, 10, 21], "few": [0, 10, 20, 21], "exist": [0, 6, 10, 18, 21], "purpos": [0, 10, 16, 21], "built": [0, 10, 21], "them": [0, 1, 4, 10, 13, 14, 15, 21, 22], "togeth": [0, 10, 21], "form": [0, 10, 14, 21], "complet": [0, 10, 21], "extend": [0, 1, 21], "suit": [0, 21], "through": [0, 16, 21], "layer": [0, 10, 13, 14, 21], "connect": [0, 6, 12, 16, 21], "etc": [0, 16, 21], "optimis": [0, 1, 21], "differ": [0, 6, 9, 16, 20, 21, 22], "track": [0, 14, 20, 21], "These": [0, 20, 21], "prepar": [0, 16, 21], "satisfi": [0, 21], "o": [0, 14, 21], "load": [0, 7, 18, 21], "requir": [0, 6, 14, 16, 21, 22], "when": [0, 4, 6, 11, 13, 20, 21, 22], "batch": [0, 11, 13, 16, 21], "do": [0, 16, 18, 20, 21, 22], "predict": [0, 9, 13, 14, 16, 21], "either": [0, 16, 21, 22], "contain": [0, 4, 5, 6, 9, 13, 14, 16, 21, 22], "imag": [0, 1, 6, 20, 21, 22], "portabl": [0, 21], "depend": [0, 21, 22], "free": [0, 16, 21], "split": [0, 21], "up": [0, 20, 21, 22], "abov": [0, 7, 15, 16, 21, 22], "interfac": [0, 15, 21, 22], "block": [0, 1, 21], "pre": [0, 6, 12, 20, 21], "directli": [0, 21], "while": [0, 16, 21], "continu": [0, 16, 21], "expand": [0, 21], "": [0, 4, 6, 7, 13, 14, 16, 18, 21, 22], "capabl": [0, 21], "conveni": [1, 20, 22], "collabor": 1, "solv": [1, 20], "It": [1, 4, 6, 20], "leverag": 1, "advanc": [1, 11], "machin": [1, 22], "learn": [1, 16, 22], "without": [1, 15, 16, 22], "have": [1, 6, 7, 11, 14, 16, 20, 22], "expert": 1, "themselv": [1, 18], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 6, 11, 12, 13, 14, 16, 18, 20, 22], "streamlin": 1, "process": [1, 6, 9, 12, 13, 20, 22], "transform": [1, 11, 14, 16], "extens": 1, "basic": 1, "across": [1, 4, 6, 7, 11, 16, 17, 18], "variou": [1, 9], "easili": 1, "architectur": [1, 13], "main": [1, 13, 20, 22], "featur": [1, 5, 6, 9, 11, 12, 13, 14, 16, 18, 20], "i3": [1, 4, 5, 6, 7, 22], "more": [1, 6, 7, 18], "index": [1, 4, 5, 6, 11, 16], "sqlite": [1, 2, 7, 22], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 12, 13, 14, 16, 18], "awai": 1, "detail": [1, 22], "expos": 1, "physicst": 1, "what": [1, 20], "i3modul": [1, 8], "includ": [1, 6, 15, 16, 18, 20], "docker": 1, "run": [1, 7, 9], "containeris": 1, "fashion": 1, "subpackag": [1, 2, 3, 8, 10, 17], "extractor": [1, 2, 5, 6], "parquet": [1, 2, 7, 22], "util": [1, 2, 3, 6, 19], "pisa": [1, 19, 22], "fit": [1, 16, 18], "plot": 1, "callback": 1, "label": [1, 13, 14, 15], "loss_funct": [1, 14], "weight_fit": 1, "config": [1, 7, 15, 16, 17], "parquet_dataconvert": 2, "parquet_dataset": 2, "sqlite_dataconvert": 2, "sqlite_dataset": 2, "sqlite_dataset_perturb": 2, "sqlite_select": 2, "sqlite_util": 2, "parquet_to_sqlit": 2, "random": [2, 6, 18], "string_selection_resolv": 2, "collect": [3, 9, 16], "i3extractor": [3, 5, 6], "extract": [3, 4, 6, 7, 14, 16], "pure": [3, 4], "i3fram": [3, 4, 9], "frame": [3, 6, 9], "method": [4, 5, 6, 11, 14, 16], "submodul": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "manipul": 4, "flatten_nested_dictionari": 4, "obj": [4, 18], "parent_kei": 4, "separ": [4, 16, 22], "__": 4, "flatten": 4, "nest": 4, "dictionari": [4, 5, 6, 15, 18], "non": [4, 6, 16], "dict": [4, 5, 6, 12, 15, 16, 18], "valu": [4, 6, 11, 15, 16, 18], "exampl": [4, 7, 11, 16, 18, 22], "d": [4, 16, 20], "b": [4, 11], "1": [4, 5, 6, 7, 11, 13, 14, 15, 16, 18, 22], "c": [4, 11, 16, 22], "2": [4, 11, 13, 14, 15, 16, 18], "a__b": 4, "paramet": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "union": [4, 5, 6, 7, 11, 13, 14, 16, 18], "ani": [4, 5, 6, 9, 11, 13, 14, 15, 16, 18, 22], "object": [4, 6, 11, 12, 14, 15, 16], "should": [4, 6, 7, 11, 16, 18, 20, 22], "applic": 4, "str": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "default": [4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 18], "combin": [4, 14, 18], "name": [4, 5, 6, 7, 14, 15, 16, 18, 20, 22], "parent": 4, "kei": [4, 6, 11, 16, 18], "string": [4, 6, 7, 9, 11, 12, 18], "concaten": [4, 13], "nester": 4, "return": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "serialis": [4, 18], "json": [4, 18], "save": [4, 5, 6, 7, 15, 16, 18, 22], "list": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "therefor": 4, "we": [4, 7, 20, 22], "each": [4, 6, 7, 11, 13, 14, 15, 16], "element": [4, 18], "outer": 4, "abl": [4, 22], "de": 4, "correspond": [4, 6, 7, 13, 14, 16, 22], "transpose_list_of_dict": 4, "arrai": 4, "transpos": 4, "work": [4, 20, 22], "frame_is_montecarlo": 4, "check": [4, 6, 15, 18, 20, 22], "whether": [4, 6, 13, 15, 16, 18], "mont": 4, "carlo": 4, "simul": 4, "bool": [4, 6, 7, 13, 15, 16, 18], "frame_is_nois": 4, "nois": [4, 6], "get_om_keys_and_pulseseri": 4, "pulseseri": 4, "calibr": 4, "none": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "get": [4, 6, 15, 16, 22], "indici": [4, 6, 7, 16], "gcd_dict": 4, "puls": [4, 6, 11], "seri": [4, 6], "p": [4, 6, 16], "om": 4, "option": [4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 18, 22], "i3calibr": 4, "tupl": [4, 5, 6, 7, 13, 14, 15, 16], "indicesfor": 4, "gcd": [4, 7], "is_boost_enum": 4, "inherit": [4, 12, 14, 16], "boost": 4, "enum": 4, "is_boost_class": 4, "instanc": [4, 5, 6, 15, 16, 18, 22], "is_icecube_class": 4, "class": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 20], "is_typ": 4, "is_method": 4, "break_cyclic_recurs": 4, "fn": [4, 18], "ensur": [4, 7, 16, 20, 22], "isn": 4, "t": [4, 6, 12, 15, 16, 22], "call": [4, 6, 11, 15, 16], "recurs": [4, 18], "same": [4, 6, 11, 14, 16, 18], "callabl": [4, 11, 14, 16, 18], "get_member_vari": 4, "return_discard": 4, "fals": [4, 13, 15, 16, 18], "valid": [4, 7, 14, 16], "member": [4, 18], "variabl": [4, 7, 13, 16], "ignor": [4, 6], "mangl": 4, "cast_object_to_pure_python": 4, "cast": 4, "take": [4, 6, 11, 20], "tri": 4, "mainli": 4, "cannot": 4, "trivial": [4, 14], "For": [4, 16], "doe": [4, 18], "try": 4, "signatur": 4, "similar": [4, 22], "length": [4, 15, 16], "support": [4, 20, 22], "equival": 4, "its": [4, 6], "regular": 4, "like": [4, 11, 12, 14, 16, 20], "otherwis": [4, 16], "itself": [4, 14], "deem": 4, "wai": [4, 7, 20, 22], "cast_pulse_series_to_pure_python": 4, "represent": [4, 11], "icetrai": [4, 9], "properti": [4, 11, 12, 13, 14, 18], "optic": 4, "found": [4, 16], "dataconvert": [5, 6], "backend": [5, 6], "parquetdataconvert": 5, "outdir": [5, 6, 7, 15], "gcd_rescu": [5, 6], "nb_files_to_batch": [5, 6], "sequential_batch_pattern": [5, 6], "input_file_batch_pattern": [5, 6], "worker": [5, 6, 7, 15], "index_column": [5, 6, 7, 15, 16, 18], "event_no": [5, 6, 7, 15, 16, 18], "icetray_verbos": [5, 6], "0": [5, 6, 7, 11, 13, 15, 16, 18, 22], "int": [5, 6, 7, 11, 12, 13, 14, 15, 16, 18], "file_suffix": [5, 6], "save_data": [5, 6], "output_fil": [5, 6], "ordereddict": [5, 6], "merge_fil": [5, 6], "input_fil": [5, 6], "merg": [5, 6, 15, 16, 22], "output": [5, 6, 7, 12, 13, 15, 16, 18, 22], "result": [5, 6, 11, 15, 16, 18, 22], "accord": [5, 6, 11], "current": [5, 6, 7, 16, 20, 22], "rais": 5, "notimplementederror": 5, "If": [5, 6, 15, 16, 20, 22], "been": [5, 16, 20], "dataset": [5, 6, 7, 18], "parquetdataset": 5, "path": [5, 6, 7, 15, 18, 22], "pulsemap": [5, 6, 16, 18], "truth": [5, 6, 15, 16, 18], "node_truth": [5, 6, 16, 18], "truth_tabl": [5, 6, 15, 16, 18], "node_truth_t": [5, 6, 16, 18], "string_select": [5, 6, 16, 18], "select": [5, 6, 7, 16, 18, 20], "dtype": [5, 6, 9], "float32": [5, 6, 9], "loss_weight_t": [5, 6, 16, 18], "loss_weight_column": [5, 6, 16, 18], "loss_weight_default_valu": [5, 6, 18], "seed": [5, 6, 7, 16, 18], "pytorch": [5, 6, 16, 22], "float": [5, 6, 7, 13, 15, 16, 18], "_format_dictionary_result": 5, "ak": 5, "to_list": 5, "query_t": [5, 6], "tabl": [5, 6, 15, 16], "column": [5, 6, 15, 16], "sequential_index": [5, 6], "queri": [5, 6, 7], "some": [5, 6], "sqlitedataconvert": [6, 22], "db": [6, 16], "databas": [6, 7, 15, 16, 22], "_extract_table_nam": 6, "any_pulsemap_is_non_empti": 6, "data_dict": 6, "empti": 6, "retriev": 6, "splitinicepuls": 6, "least": [6, 20, 22], "one": [6, 11, 18, 20, 22], "true": [6, 7, 15, 16], "i3featureextractor": 6, "becaus": [6, 7], "i3genericextractor": 6, "instead": [6, 16], "alwai": 6, "_submit_to_databas": 6, "submit": 6, "specifi": [6, 7, 14, 15, 16, 22], "datafram": [6, 7, 15, 16], "_extract_everyth": 6, "everyth": 6, "temporari": [6, 15], "_merge_temporary_databas": 6, "construct_datafram": 6, "panda": [6, 7, 16], "is_pulse_map": 6, "table_nam": 6, "map": 6, "is_mc_tre": 6, "mc": 6, "tree": 6, "sqlitedataset": 6, "_establish_connect": 6, "sure": [6, 20, 22], "sqlite3": 6, "_close_connect": 6, "befor": [6, 13, 14, 16], "pass": [6, 11, 13, 14, 16, 20], "dataload": [6, 16, 18], "replica": 6, "creat": [6, 18, 20, 22], "own": [6, 20, 22], "avoid": [6, 16, 20], "databaseerror": 6, "disk": 6, "malform": 6, "error": [6, 16, 20], "due": 6, "inabl": 6, "accross": 6, "perturb": 6, "sqlitedatasetperturb": 6, "perturbation_dict": 6, "step": [6, 16], "where": [6, 16], "input": [6, 7, 12, 13, 14, 15], "randomli": [6, 7, 18], "given": [6, 11, 16], "per": [6, 11, 14, 16], "intend": [6, 22], "test": [6, 7, 14, 16, 18, 20], "stabil": 6, "under": 6, "small": [6, 16], "chang": [6, 15, 16, 20], "__init__": [6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "construct": [6, 7, 9, 11, 12, 13, 14, 15, 16, 18], "node": [6, 11, 13, 14], "multipl": [6, 16, 18], "dom": [6, 11, 16], "store": [6, 15, 16], "ad": [6, 13, 15], "attribut": [6, 14], "deviat": 6, "uniqu": [6, 7, 18], "inform": [6, 15, 16], "subset": [6, 11, 13], "tensor": [6, 11, 13, 14, 16], "loss": [6, 14, 16], "weight": [6, 14, 15, 16, 18, 22], "also": [6, 7, 18], "assign": [6, 7, 11, 20], "note": [6, 15, 18], "case": [6, 11, 14, 22], "That": [6, 13, 14, 16], "__getitem__": 6, "get_desired_event_numb": 6, "desired_s": 6, "fraction_nois": 6, "fraction_muon": 6, "fraction_nu_": 6, "fraction_nu_mu": 6, "fraction_nu_tau": 6, "fraction": [6, 13], "nu_e": 6, "nu_mu": 6, "nu_tau": 6, "reed": 6, "get_equal_proportion_neutrino_indic": 6, "42": [6, 16, 22], "indic": [6, 7, 11, 16, 20], "equal": 6, "flavour": 6, "proport": 6, "resp": 6, "get_even_signal_background_indici": 6, "get_even_track_cascade_indici": 6, "cc": 6, "nc": 6, "mu": 6, "get_even_dbang_select": 6, "min_max_decay_length": 6, "dbang": 6, "database_exist": 6, "database_path": [6, 15, 16], "database_table_exist": 6, "run_sql_cod": 6, "execut": 6, "save_to_sql": 6, "df": 6, "must": [6, 16, 20], "alreadi": [6, 22], "attach_index": 6, "attach": 6, "create_t": 6, "default_typ": 6, "NOT": [6, 16], "null": 6, "integer_primary_kei": 6, "integ": [6, 13, 16], "primari": 6, "Such": 6, "row": [6, 11], "appropri": [6, 14], "particl": [6, 16], "other": [6, 16, 20], "expect": [6, 7, 15], "create_table_and_save_to_sql": 6, "doesn": 6, "parquettosqliteconvert": 7, "parquet_path": 7, "mc_truth_tabl": 7, "mc_truth": 7, "excluded_field": 7, "loggermixin": [7, 16, 18], "id": 7, "everi": [7, 22], "field": [7, 15, 16], "One": [7, 15], "choos": 7, "exclud": [7, 22], "certain": [7, 15], "argument": [7, 14, 16, 18], "exclude_field": 7, "database_nam": 7, "convers": [7, 22], "directori": [7, 15], "_save_config": 7, "csv": [7, 15, 18], "rng": 7, "relat": 7, "pairwise_shuffl": 7, "i3_list": 7, "gcd_list": 7, "shuffl": [7, 16], "correpond": 7, "handi": 7, "even": [7, 16], "files_list": 7, "gcd_shuffl": 7, "i3_shuffl": 7, "resolv": 7, "stringselectionresolv": 7, "use_cach": 7, "datasetconfig": [7, 18], "flexibl": 7, "defin": [7, 11, 18], "show": [7, 16], "involv": 7, "cover": 7, "yml": [7, 18], "50000": [7, 18], "5": [7, 22], "ab": [7, 16, 18], "pid": [7, 18], "12": [7, 18], "14": [7, 18], "16": [7, 18], "13": [7, 22], "10000": 7, "compat": 7, "syntax": [7, 12, 14, 16], "mai": [7, 12, 22], "fix": 7, "20": 7, "_parse_variable_nam": 7, "pars": [7, 15, 17], "entiti": 7, "funtion": 7, "_get_index_cache_path": 7, "cach": 7, "_get_values_cache_path": 7, "_get_random_events_from_select": 7, "num": [7, 11], "frac": 7, "part": [7, 9, 22], "did": 7, "graphnet_modul": 8, "graphnetmodulebas": 9, "context": 9, "i3trai": 9, "i3featureextractor_class": 9, "float16": 9, "float64": [9, 16], "keyword": 9, "write": [9, 22], "graphnetmoduleicecube86": 9, "86": [9, 12], "arg": [9, 14, 16, 18], "kwarg": [9, 11, 14, 16, 18], "dom_x": [9, 12], "dom_i": [9, 12], "dom_z": [9, 12], "dom_tim": [9, 12], "charg": [9, 12, 16], "rde": [9, 12], "pmt_area": [9, 12], "alia": [9, 22], "i3featureextractoricecube86": 9, "graphnetmoduleicecubedeepcor": 9, "deepcor": [9, 12], "i3featureextractoricecubedeepcor": 9, "graphnetmoduleicecubeupgrad": 9, "upgrad": [9, 12, 22], "pmt_number": [9, 12], "dom_numb": [9, 12], "pmt_dir_x": [9, 12], "pmt_dir_i": [9, 12], "pmt_dir_z": [9, 12], "dom_typ": [9, 12], "i3featureextractoricecubeupgrad": 9, "pool": [10, 13], "prometheu": 10, "convnet": 10, "dynedg": 10, "dynedge_jinst": 10, "dynedgeconv": [11, 13], "aggr": 11, "max": [11, 13, 16], "nb_neighbor": 11, "8": [11, 13, 16, 20, 22], "features_subset": [11, 13], "edgeconv": 11, "lightningmodul": [11, 16], "dynam": [11, 13], "edg": [11, 13], "convolut": [11, 13], "sequenc": 11, "slice": [11, 13], "mlp": [11, 13], "within": [11, 13], "aggreg": 11, "neighbour": [11, 13], "cluster": [11, 13], "after": [11, 13, 16], "oper": [11, 13], "x": [11, 12, 13, 14, 15, 16], "addit": [11, 16], "forward": [11, 12, 13, 14, 16], "edge_index": [11, 13], "sparsetensor": 11, "coarsen": 11, "min_pool": 11, "min": [11, 13], "max_pool": 11, "just": [11, 22], "negat": 11, "longtensor": [11, 13], "min_pool_x": 11, "size": [11, 13], "max_pool_x": 11, "sum_pool_and_distribut": 11, "cluster_index": 11, "sum": [11, 13], "distribut": [11, 13, 14, 16], "_group_ident": 11, "ident": [11, 14], "shape": [11, 16], "n": [11, 16], "f": 11, "group_bi": 11, "done": [11, 20], "pmt": 11, "f1": 11, "f2": 11, "6": [11, 15, 16, 20], "7": [11, 15], "groupbi": 11, "3": [11, 13, 14, 15, 16, 20, 22], "group_pulses_to_dom": 11, "group_pulses_to_pmt": 11, "sum_pool_x": 11, "vector": [11, 16], "mathbf": 11, "ldot": 11, "matrix": [11, 16], "mathbb": 11, "r": [11, 22], "n_1": 11, "n_b": 11, "maximum": [11, 14], "singl": [11, 13, 16, 18], "obtain": [11, 16], "wise": 11, "dens": 11, "fc": 11, "known": 11, "std_pool_x": 11, "std": 11, "sum_pool": 11, "repres": [11, 18], "posit": [11, 14], "averag": [11, 16], "A": [11, 15, 16, 22], "torch_geometr": 11, "version": [11, 14, 16, 20, 22], "std_pool": 11, "standardis": 12, "graph_build": 12, "scaler": 12, "ins": 12, "graphbuild": 12, "assum": [12, 14], "adjac": 12, "_forward": [12, 14, 16], "implent": [12, 14, 16], "nb_input": [12, 13, 14], "nb_output": [12, 13, 14], "overridden": 12, "icecube86": 12, "preprocess": 12, "icecubekaggl": 12, "kaggl": 12, "competit": 12, "y": [12, 15, 22], "z": [12, 22], "auxiliari": 12, "icecubedeepcor": 12, "icecubeupgrad": 12, "icecubeupgrade_v2": 12, "prototyp": 12, "sensor_pos_x": 12, "sensor_pos_i": 12, "sensor_pos_z": 12, "learnabl": 13, "author": [13, 16], "martin": 13, "minh": 13, "nb_intermedi": 13, "128": 13, "dropout_ratio": 13, "dimens": [13, 16], "drop": 13, "nb_neighbour": 13, "dynedge_layer_s": 13, "post_processing_layer_s": 13, "readout_layer_s": 13, "global_pooling_schem": 13, "add_global_variables_after_pool": 13, "k": [13, 16], "nearest": 13, "latent": [13, 14], "metric": [13, 16], "dimenion": 13, "entri": [13, 15, 18], "multi": 13, "perceptron": 13, "two": [13, 15, 16], "256": 13, "336": 13, "hidden": [13, 14], "follow": [13, 16, 20, 22], "skip": 13, "post": 13, "_and_": 13, "global": 13, "As": 13, "last": [13, 14, 16], "out": [13, 14, 16, 20, 22], "scheme": 13, "add": [13, 20, 22], "altern": [13, 16, 20], "_construct_lay": 13, "_global_pool": 13, "_calculate_global_vari": 13, "additional_attribut": [13, 16], "calcul": [13, 16], "exact": [13, 16], "2209": 13, "03042": 13, "rasmu": 13, "oerso": 13, "dynedgejinst": 13, "layer_size_scal": 13, "4": [13, 14, 15, 16], "scale": [13, 14, 16], "core": 13, "multiclassclassificationtask": 14, "identitytask": 14, "classifi": 14, "being": 14, "untransform": 14, "interpret": 14, "logit": [14, 16], "binaryclassificationtask": 14, "hidden_s": 14, "target_label": 14, "transform_prediction_and_target": 14, "transform_target": 14, "transform_infer": 14, "transform_support": 14, "loss_weight": 14, "binari": [14, 16], "lossfunct": [14, 16], "binaryclassificationtasklogit": 14, "azimuthreconstructionwithkappa": 14, "azimuth": [14, 16], "angl": [14, 16], "associ": [14, 16], "kappa": [14, 16], "var": 14, "azimuthreconstruct": 14, "directionreconstructionwithkappa": 14, "3d": [14, 16], "vmf": 14, "zenithreconstruct": 14, "zenith": [14, 16], "zenithreconstructionwithkappa": 14, "energyreconstruct": 14, "stabl": [14, 16, 22], "energyreconstructionwithpow": 14, "energyreconstructionwithuncertainti": 14, "uncertainti": 14, "vertexreconstruct": 14, "vertex": 14, "positionreconstruct": 14, "timereconstruct": 14, "inelasticityreconstruct": 14, "interact": 14, "inelast": 14, "hadron": 14, "feed": 14, "affin": 14, "quantiti": 14, "target": [14, 16, 18], "compute_loss": 14, "numer": [14, 16], "comput": [14, 16], "log10": [14, 16], "rather": 14, "conjunct": 14, "invers": 14, "recov": 14, "minimum": 14, "restrict": [14, 16], "invert": 14, "1e6": 14, "pred": 14, "wrt": 14, "activ": [14, 20, 22], "mode": 14, "train_ev": 14, "deactiv": 14, "_validate_and_set_transform": 14, "set": [14, 15, 20], "assert": 14, "updat": [14, 15, 16], "contour": 15, "config_updat": 15, "config_path": 15, "new_config_path": 15, "dummy_sect": 15, "temp": 15, "dummi": 15, "section": 15, "header": 15, "configupdat": 15, "programat": 15, "weightfitt": [15, 16], "statistical_fit": 15, "fit_weight": [15, 16], "config_outdir": 15, "weight_nam": [15, 16], "pisa_config_dict": 15, "add_to_databas": [15, 16], "flux": 15, "self": [15, 18], "_database_path": 15, "statist": 15, "effect": [15, 16, 20], "account": 15, "systemat": 15, "hypersurfac": 15, "assumpt": 15, "regard": 15, "contourfitt": 15, "pipeline_path": 15, "post_fix": 15, "_pred": 15, "model_nam": 15, "include_retro": 15, "fit_1d_contour": 15, "run_nam": 15, "config_dict": 15, "grid_siz": 15, "30": 15, "n_worker": 15, "theta23_minmax": 15, "36": 15, "54": 15, "dm31_minmax": 15, "1d": 15, "fit_2d_contour": 15, "2d": [15, 16], "_check_input": 15, "contour_typ": 15, "_fit_contour": 15, "_parallel_fit_2d_contour": 15, "parallel": 15, "determin": 15, "amount": 15, "job": 15, "later": [15, 22], "_parallel_fit_1d_contour": 15, "read_entri": 15, "content": 15, "plot_2d_contour": 15, "contour_data": 15, "xlim": 15, "ylim": 15, "0023799999999999997": 15, "0025499999999999997": 15, "chi2_critical_valu": 15, "605": 15, "width": 15, "176": 15, "height": 15, "388": 15, "path_to_pisa_fit_result": 15, "name_of_my_model_in_fit": 15, "legend": 15, "color": 15, "linestyl": 15, "style": [15, 20], "line": [15, 16], "upper": 15, "bound": 15, "axi": 15, "critic": 15, "chi2": 15, "90": 15, "cl": 15, "right": [15, 16], "inch": 15, "plot_1d_contour": 15, "706": 15, "352": 15, "dure": 16, "piecewiselinearlr": 16, "optim": 16, "mileston": 16, "factor": 16, "last_epoch": 16, "verbos": 16, "_lrschedul": 16, "interpol": 16, "linearli": 16, "between": 16, "denot": 16, "multipli": 16, "closest": 16, "vice": 16, "versa": 16, "wrap": [16, 18], "epoch": 16, "print": 16, "messag": 16, "stdout": 16, "get_lr": 16, "progressbar": 16, "refresh_r": 16, "process_posit": 16, "tqdmprogressbar": 16, "custom": 16, "progress": 16, "bar": 16, "customis": 16, "lightn": 16, "init_validation_tqdm": 16, "overrid": 16, "init_predict_tqdm": 16, "init_test_tqdm": 16, "init_train_tqdm": 16, "get_metr": 16, "trainer": 16, "on_train_epoch_start": 16, "previou": 16, "see": [16, 20, 22], "behaviour": 16, "overwrit": 16, "on_train_epoch_end": 16, "don": [16, 22], "duplciat": 16, "runtim": [16, 22], "abc": [16, 18], "produc": 16, "__call__": 16, "azimuth_kei": 16, "zenith_kei": 16, "handl": 16, "return_el": 16, "elementwis": 16, "term": 16, "scalar": 16, "mseloss": 16, "squar": 16, "rmseloss": 16, "root": [16, 22], "logcoshloss": 16, "cosh": 16, "act": 16, "classmethod": [16, 18], "_log_cosh": 16, "inf": 16, "moder": 16, "http": [16, 20], "github": [16, 22], "com": [16, 22], "kera": 16, "team": [16, 20], "blob": 16, "v2": 16, "py": [16, 22], "l1580": 16, "l1617": 16, "crossentropyloss": 16, "cross": 16, "entropi": 16, "num_class": 16, "softmax": 16, "ed": 16, "probabl": 16, "binarycrossentropyloss": 16, "logcmk": 16, "mit": 16, "licens": 16, "copyright": 16, "2019": 16, "ryabinin": 16, "permiss": 16, "herebi": 16, "grant": 16, "person": 16, "copi": 16, "document": 16, "deal": 16, "limit": 16, "modifi": 16, "publish": 16, "sublicens": 16, "sell": 16, "permit": 16, "whom": 16, "furnish": 16, "so": [16, 22], "subject": 16, "condit": 16, "notic": 16, "shall": 16, "substanti": 16, "portion": 16, "THE": 16, "AS": 16, "warranti": 16, "OF": 16, "kind": 16, "express": 16, "OR": 16, "impli": 16, "BUT": 16, "TO": 16, "merchant": 16, "FOR": 16, "particular": [16, 20], "AND": 16, "noninfring": 16, "IN": 16, "NO": 16, "holder": 16, "BE": 16, "liabl": 16, "claim": 16, "damag": 16, "liabil": 16, "action": 16, "contract": 16, "tort": 16, "aris": 16, "WITH": 16, "_____________________": 16, "mryab": 16, "vmf_loss": 16, "master": 16, "bessel": 16, "exponenti": 16, "ditto": 16, "iv": 16, "1812": 16, "04616": 16, "spite": 16, "suggest": 16, "sec": 16, "paper": 16, "comparison": 16, "m": 16, "correct": 16, "static": [16, 20], "ctx": 16, "backward": 16, "grad_output": 16, "vonmisesfisherloss": 16, "von": 16, "mise": 16, "fisher": 16, "log_cmk_exact": 16, "c_": 16, "exactli": 16, "log_cmk_approx": 16, "approx": 16, "arxiv": 16, "org": [16, 22], "minu": 16, "sign": 16, "log_cmk": 16, "kappa_switch": 16, "100": [16, 22], "sinc": 16, "diverg": 16, "700": 16, "precis": 16, "unaccur": 16, "automat": [16, 20], "switch": 16, "_evalu": 16, "dimenson": 16, "utilis": 16, "sphere": 16, "dimension": 16, "space": 16, "batch_siz": 16, "vonmisesfisher2dloss": 16, "plane": 16, "0th": 16, "1st": 16, "estim": 16, "euclideandistanceloss": 16, "three": 16, "euclidean": [16, 20], "distanc": 16, "vonmisesfisher3dloss": 16, "collate_fn": 16, "remov": 16, "less": 16, "hit": 16, "occur": 16, "product": 16, "make_dataload": 16, "num_work": 16, "persistent_work": 16, "make_train_validation_dataload": 16, "database_indic": 16, "test_siz": 16, "33": 16, "get_predict": 16, "prediction_column": 16, "node_level": 16, "save_result": 16, "tag": [16, 20, 22], "archiv": 16, "public": 16, "uniformweightfitt": 16, "_get_truth": 16, "bin": 16, "privat": 16, "_fit_weight": 16, "sql": 16, "ndarrai": 16, "desir": 16, "match": 16, "np": 16, "happen": 16, "uniform": 16, "bjoernlow": 16, "x_low": 16, "wherea": 16, "curv": 16, "alpha": 16, "05": 16, "cut": 16, "off": 16, "control": 16, "how": 16, "approach": 16, "zero": 16, "larger": 16, "base_config": 17, "dataset_config": 17, "model_config": 17, "training_config": 17, "baseconfig": 18, "basemodel": 18, "dump": 18, "yaml": 18, "as_dict": 18, "overwritten": 18, "get_all_argument_valu": 18, "re": [18, 22], "save_config": 18, "from_config": 18, "dataconfig": 18, "transpar": [18, 20], "reproduc": 18, "In": [18, 22], "session": 18, "anoth": 18, "you": [18, 20, 22], "concatdataset": 18, "still": 18, "refer": 18, "train_select": 18, "test_select": 18, "save_dataset_config": 18, "init_fn": 18, "modelconfig": 18, "class_nam": 18, "trainabl": 18, "hyperparamet": 18, "instanti": 18, "initialis": 18, "thu": 18, "_is_model_config_entri": 18, "_parse_if_model_config_entri": 18, "_construct_model": 18, "trust": 18, "load_modul": 18, "basi": 18, "_serialis": 18, "unambigu": 18, "save_model_config": 18, "traverse_and_appli": 18, "fn_kwarg": 18, "structur": 18, "list_all_submodul": 18, "moduletyp": 18, "get_all_grapnet_class": 18, "grapnet": 18, "is_graphnet_modul": 18, "is_graphnet_class": 18, "get_graphnet_class": 18, "lookup": 18, "trainingconfig": 18, "early_stopping_pati": 18, "api": 19, "To": [20, 22], "smooth": 20, "guidelin": 20, "guid": 20, "encourag": 20, "contributor": 20, "discuss": 20, "bug": 20, "anyth": 20, "place": 20, "start": [20, 22], "describ": 20, "would": 20, "yourself": 20, "ownership": 20, "agreement": 20, "prioriti": 20, "help": 20, "situat": 20, "lot": 20, "effort": 20, "go": 20, "turn": 20, "outsid": 20, "scope": 20, "project": 20, "solut": 20, "better": 20, "fork": 20, "repo": 20, "dedic": 20, "branch": [20, 22], "your": [20, 22], "repositori": 20, "graphbuil": 20, "builder": 20, "accept": 20, "autom": 20, "review": 20, "pep8": 20, "docstr": 20, "googl": 20, "hint": 20, "clean": [20, 22], "adher": 20, "pep": 20, "pylint": 20, "flake8": 20, "black": 20, "well": 20, "consist": 20, "recommend": [20, 22], "mypi": 20, "pydocstyl": 20, "docformatt": 20, "commit": 20, "hook": 20, "instal": 20, "come": 20, "pip": [20, 22], "Then": 20, "everytim": 20, "pep257": 20, "concept": 20, "ljvmiranda921": 20, "io": 20, "notebook": 20, "2018": 20, "06": 20, "21": 20, "precommit": 20, "environ": 22, "virtual": 22, "anaconda": 22, "prove": 22, "instruct": 22, "setup": 22, "want": 22, "achiev": 22, "command": 22, "bash": 22, "shell": 22, "eval": 22, "cvmf": 22, "opensciencegrid": 22, "py3": 22, "v4": 22, "sh": 22, "rhel_7_x86_64": 22, "metaproject": 22, "combo": 22, "env": 22, "script": 22, "With": 22, "now": 22, "light": 22, "extra": 22, "geometr": 22, "won": 22, "torch_cpu": 22, "txt": 22, "cpu": 22, "torch_gpu": 22, "gpu": 22, "prefer": 22, "unix": 22, "system": 22, "git": 22, "clone": 22, "usernam": 22, "cd": 22, "conda": 22, "gcc_linux": 22, "64": 22, "gxx_linux": 22, "libgcc": 22, "cudatoolkit": 22, "11": 22, "forg": 22, "torch_maco": 22, "On": 22, "maco": 22, "box": 22, "compil": 22, "gcc": 22, "date": 22, "possibli": 22, "cuda": 22, "toolkit": 22, "recent": 22, "omit": 22, "newer": 22, "export": 22, "ld_library_path": 22, "home": 22, "anaconda3": 22, "lib": 22, "miniconda3": 22, "bashrc": 22, "librari": 22, "access": 22, "look": 22, "consid": 22, "rm": 22, "asogaard": 22, "latest": 22, "dc423315742c": 22, "01_icetrai": 22, "01_convert_i3_fil": 22, "info": 22, "2023": 22, "01": 22, "24": 22, "41": 22, "27": 22, "get_logg": 22, "graphnet_20230124": 22, "134127": 22, "46": 22, "convert_i3_fil": 22, "ic86": 22, "thread": 22, "multiprocess": 22, "00": 22, "39": 22, "79": 22, "26": 22, "413": 22, "88it": 22, "specialis": 22, "ones": 22, "push": 22, "vx": 22}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "data"], [8, 0, 0, "-", "deployment"], [10, 0, 0, "-", "models"], [15, 0, 0, "-", "pisa"], [16, 0, 0, "-", "training"], [17, 0, 0, "-", "utilities"]], "graphnet.data": [[3, 0, 0, "-", "extractors"], [5, 0, 0, "-", "parquet"], [6, 0, 0, "-", "sqlite"], [7, 0, 0, "-", "utilities"]], "graphnet.data.extractors": [[4, 0, 0, "-", "utilities"]], "graphnet.data.extractors.utilities": [[4, 0, 0, "-", "collections"], [4, 0, 0, "-", "frames"], [4, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[4, 1, 1, "", "flatten_nested_dictionary"], [4, 1, 1, "", "serialise"], [4, 1, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[4, 1, 1, "", "frame_is_montecarlo"], [4, 1, 1, "", "frame_is_noise"], [4, 1, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[4, 1, 1, "", "break_cyclic_recursion"], [4, 1, 1, "", "cast_object_to_pure_python"], [4, 1, 1, "", "cast_pulse_series_to_pure_python"], [4, 1, 1, "", "get_member_variables"], [4, 1, 1, "", "is_boost_class"], [4, 1, 1, "", "is_boost_enum"], [4, 1, 1, "", "is_icecube_class"], [4, 1, 1, "", "is_method"], [4, 1, 1, "", "is_type"]], "graphnet.data.parquet": [[5, 0, 0, "-", "parquet_dataconverter"], [5, 0, 0, "-", "parquet_dataset"]], "graphnet.data.parquet.parquet_dataconverter": [[5, 2, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[5, 3, 1, "", "file_suffix"], [5, 4, 1, "", "merge_files"], [5, 4, 1, "", "save_data"]], "graphnet.data.parquet.parquet_dataset": [[5, 2, 1, "", "ParquetDataset"]], "graphnet.data.parquet.parquet_dataset.ParquetDataset": [[5, 4, 1, "", "_format_dictionary_result"], [5, 4, 1, "", "query_table"]], "graphnet.data.sqlite": [[6, 0, 0, "-", "sqlite_dataconverter"], [6, 0, 0, "-", "sqlite_dataset"], [6, 0, 0, "-", "sqlite_dataset_perturbed"], [6, 0, 0, "-", "sqlite_selection"], [6, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, 2, 1, "", "SQLiteDataConverter"], [6, 1, 1, "", "construct_dataframe"], [6, 1, 1, "", "is_mc_tree"], [6, 1, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[6, 4, 1, "", "_extract_everything"], [6, 4, 1, "", "_extract_table_names"], [6, 4, 1, "", "_merge_temporary_databases"], [6, 4, 1, "", "_submit_to_database"], [6, 4, 1, "", "any_pulsemap_is_non_empty"], [6, 3, 1, "", "file_suffix"], [6, 4, 1, "", "merge_files"], [6, 4, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_dataset": [[6, 2, 1, "", "SQLiteDataset"]], "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset": [[6, 4, 1, "", "_close_connection"], [6, 4, 1, "", "_establish_connection"], [6, 4, 1, "", "query_table"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, 2, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed": [[6, 4, 1, "", "__getitem__"], [6, 4, 1, "", "__init__"]], "graphnet.data.sqlite.sqlite_selection": [[6, 1, 1, "", "get_desired_event_numbers"], [6, 1, 1, "", "get_equal_proportion_neutrino_indices"], [6, 1, 1, "", "get_even_dbang_selection"], [6, 1, 1, "", "get_even_signal_background_indicies"], [6, 1, 1, "", "get_even_track_cascade_indicies"]], "graphnet.data.sqlite.sqlite_utilities": [[6, 1, 1, "", "attach_index"], [6, 1, 1, "", "create_table"], [6, 1, 1, "", "create_table_and_save_to_sql"], [6, 1, 1, "", "database_exists"], [6, 1, 1, "", "database_table_exists"], [6, 1, 1, "", "run_sql_code"], [6, 1, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[7, 0, 0, "-", "parquet_to_sqlite"], [7, 0, 0, "-", "random"], [7, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[7, 2, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[7, 4, 1, "", "__init__"], [7, 4, 1, "", "_save_config"], [7, 4, 1, "", "run"]], "graphnet.data.utilities.random": [[7, 1, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[7, 2, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[7, 4, 1, "", "__init__"], [7, 4, 1, "", "_get_index_cache_path"], [7, 4, 1, "", "_get_random_events_from_selection"], [7, 4, 1, "", "_get_values_cache_path"], [7, 4, 1, "", "_parse_variable_names"], [7, 4, 1, "", "resolve"]], "graphnet.deployment": [[9, 0, 0, "-", "i3modules"]], "graphnet.deployment.i3modules": [[9, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[9, 2, 1, "", "GraphNeTModuleBase"], [9, 2, 1, "", "GraphNeTModuleIceCube86"], [9, 2, 1, "", "GraphNeTModuleIceCubeDeepCore"], [9, 2, 1, "", "GraphNeTModuleIceCubeUpgrade"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase": [[9, 4, 1, "", "Configure"], [9, 3, 1, "", "DTYPES"], [9, 3, 1, "", "FEATURES"], [9, 3, 1, "", "I3FEATUREEXTRACTOR_CLASS"], [9, 4, 1, "", "Physics"], [9, 4, 1, "", "__init__"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86": [[9, 3, 1, "", "FEATURES"], [9, 3, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore": [[9, 3, 1, "", "FEATURES"], [9, 3, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade": [[9, 3, 1, "", "FEATURES"], [9, 3, 1, "", "I3FEATUREEXTRACTOR_CLASS"]], "graphnet.models": [[11, 0, 0, "-", "components"], [12, 0, 0, "-", "detector"], [13, 0, 0, "-", "gnn"], [14, 0, 0, "-", "task"]], "graphnet.models.components": [[11, 0, 0, "-", "layers"], [11, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[11, 2, 1, "", "DynEdgeConv"]], "graphnet.models.components.layers.DynEdgeConv": [[11, 4, 1, "", "__init__"], [11, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[11, 1, 1, "", "_group_identical"], [11, 1, 1, "", "group_by"], [11, 1, 1, "", "group_pulses_to_dom"], [11, 1, 1, "", "group_pulses_to_pmt"], [11, 1, 1, "", "min_pool"], [11, 1, 1, "", "min_pool_x"], [11, 1, 1, "", "std_pool"], [11, 1, 1, "", "std_pool_x"], [11, 1, 1, "", "sum_pool"], [11, 1, 1, "", "sum_pool_and_distribute"], [11, 1, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[12, 0, 0, "-", "detector"], [12, 0, 0, "-", "icecube"], [12, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[12, 2, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[12, 4, 1, "", "__init__"], [12, 4, 1, "", "_forward"], [12, 5, 1, "", "features"], [12, 4, 1, "", "forward"], [12, 5, 1, "", "nb_inputs"], [12, 5, 1, "", "nb_outputs"]], "graphnet.models.detector.icecube": [[12, 2, 1, "", "IceCube86"], [12, 2, 1, "", "IceCubeDeepCore"], [12, 2, 1, "", "IceCubeKaggle"], [12, 2, 1, "", "IceCubeUpgrade"], [12, 2, 1, "", "IceCubeUpgrade_V2"]], "graphnet.models.detector.icecube.IceCube86": [[12, 4, 1, "", "_forward"], [12, 3, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[12, 4, 1, "", "_forward"], [12, 3, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[12, 4, 1, "", "_forward"], [12, 3, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[12, 4, 1, "", "_forward"], [12, 3, 1, "", "features"]], "graphnet.models.detector.icecube.IceCubeUpgrade_V2": [[12, 4, 1, "", "_forward"], [12, 3, 1, "", "features"], [12, 5, 1, "", "nb_outputs"]], "graphnet.models.detector.prometheus": [[12, 2, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[12, 4, 1, "", "_forward"], [12, 3, 1, "", "features"]], "graphnet.models.gnn": [[13, 0, 0, "-", "convnet"], [13, 0, 0, "-", "dynedge"], [13, 0, 0, "-", "dynedge_jinst"], [13, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[13, 2, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[13, 4, 1, "", "__init__"], [13, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[13, 2, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[13, 4, 1, "", "__init__"], [13, 4, 1, "", "_calculate_global_variables"], [13, 4, 1, "", "_construct_layers"], [13, 4, 1, "", "_global_pooling"], [13, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[13, 2, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[13, 4, 1, "", "__init__"], [13, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[13, 2, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[13, 4, 1, "", "__init__"], [13, 4, 1, "", "forward"], [13, 5, 1, "", "nb_inputs"], [13, 5, 1, "", "nb_outputs"]], "graphnet.models.task": [[14, 0, 0, "-", "classification"], [14, 0, 0, "-", "reconstruction"], [14, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[14, 2, 1, "", "BinaryClassificationTask"], [14, 2, 1, "", "BinaryClassificationTaskLogits"], [14, 2, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[14, 2, 1, "", "AzimuthReconstruction"], [14, 2, 1, "", "AzimuthReconstructionWithKappa"], [14, 2, 1, "", "DirectionReconstructionWithKappa"], [14, 2, 1, "", "EnergyReconstruction"], [14, 2, 1, "", "EnergyReconstructionWithPower"], [14, 2, 1, "", "EnergyReconstructionWithUncertainty"], [14, 2, 1, "", "InelasticityReconstruction"], [14, 2, 1, "", "PositionReconstruction"], [14, 2, 1, "", "TimeReconstruction"], [14, 2, 1, "", "VertexReconstruction"], [14, 2, 1, "", "ZenithReconstruction"], [14, 2, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[14, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[14, 2, 1, "", "IdentityTask"], [14, 2, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[14, 4, 1, "", "__init__"], [14, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[14, 4, 1, "", "__init__"], [14, 4, 1, "", "_forward"], [14, 4, 1, "", "_validate_and_set_transforms"], [14, 4, 1, "", "compute_loss"], [14, 4, 1, "", "forward"], [14, 4, 1, "", "inference"], [14, 5, 1, "", "nb_inputs"], [14, 4, 1, "", "train_eval"]], "graphnet.pisa": [[15, 0, 0, "-", "fitting"], [15, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[15, 2, 1, "", "ContourFitter"], [15, 2, 1, "", "WeightFitter"], [15, 1, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[15, 4, 1, "", "__init__"], [15, 4, 1, "", "_check_inputs"], [15, 4, 1, "", "_fit_contours"], [15, 4, 1, "", "_parallel_fit_1d_contour"], [15, 4, 1, "", "_parallel_fit_2d_contour"], [15, 4, 1, "", "fit_1d_contour"], [15, 4, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[15, 4, 1, "", "__init__"], [15, 4, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[15, 1, 1, "", "plot_1D_contour"], [15, 1, 1, "", "plot_2D_contour"], [15, 1, 1, "", "read_entry"]], "graphnet.training": [[16, 0, 0, "-", "callbacks"], [16, 0, 0, "-", "labels"], [16, 0, 0, "-", "loss_functions"], [16, 0, 0, "-", "utils"], [16, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[16, 2, 1, "", "PiecewiseLinearLR"], [16, 2, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[16, 4, 1, "", "__init__"], [16, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[16, 4, 1, "", "get_metrics"], [16, 4, 1, "", "init_predict_tqdm"], [16, 4, 1, "", "init_test_tqdm"], [16, 4, 1, "", "init_train_tqdm"], [16, 4, 1, "", "init_validation_tqdm"], [16, 4, 1, "", "on_train_epoch_end"], [16, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[16, 2, 1, "", "Direction"], [16, 2, 1, "", "Label"]], "graphnet.training.labels.Direction": [[16, 4, 1, "", "__call__"], [16, 4, 1, "", "__init__"]], "graphnet.training.labels.Label": [[16, 4, 1, "", "__call__"], [16, 4, 1, "", "__init__"]], "graphnet.training.loss_functions": [[16, 2, 1, "", "BinaryCrossEntropyLoss"], [16, 2, 1, "", "CrossEntropyLoss"], [16, 2, 1, "", "EuclideanDistanceLoss"], [16, 2, 1, "", "LogCMK"], [16, 2, 1, "", "LogCoshLoss"], [16, 2, 1, "", "LossFunction"], [16, 2, 1, "", "MSELoss"], [16, 2, 1, "", "RMSELoss"], [16, 2, 1, "", "VonMisesFisher2DLoss"], [16, 2, 1, "", "VonMisesFisher3DLoss"], [16, 2, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.CrossEntropyLoss": [[16, 4, 1, "", "__init__"], [16, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.EuclideanDistanceLoss": [[16, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.LogCMK": [[16, 4, 1, "", "backward"], [16, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LogCoshLoss": [[16, 4, 1, "", "_forward"], [16, 4, 1, "", "_log_cosh"]], "graphnet.training.loss_functions.LossFunction": [[16, 4, 1, "", "__init__"], [16, 4, 1, "", "_forward"], [16, 4, 1, "", "forward"]], "graphnet.training.loss_functions.MSELoss": [[16, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.RMSELoss": [[16, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher2DLoss": [[16, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisher3DLoss": [[16, 4, 1, "", "_forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[16, 4, 1, "", "_evaluate"], [16, 4, 1, "", "log_cmk"], [16, 4, 1, "", "log_cmk_approx"], [16, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[16, 1, 1, "", "collate_fn"], [16, 1, 1, "", "get_predictions"], [16, 1, 1, "", "make_dataloader"], [16, 1, 1, "", "make_train_validation_dataloader"], [16, 1, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[16, 2, 1, "", "BjoernLow"], [16, 2, 1, "", "Uniform"], [16, 2, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.BjoernLow": [[16, 4, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.Uniform": [[16, 4, 1, "", "_fit_weights"]], "graphnet.training.weight_fitting.WeightFitter": [[16, 4, 1, "", "__init__"], [16, 4, 1, "", "_get_truth"], [16, 4, 1, "", "fit"]], "graphnet.utilities": [[18, 0, 0, "-", "config"]], "graphnet.utilities.config": [[18, 0, 0, "-", "base_config"], [18, 0, 0, "-", "configurable"], [18, 0, 0, "-", "dataset_config"], [18, 0, 0, "-", "model_config"], [18, 0, 0, "-", "parsing"], [18, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[18, 2, 1, "", "BaseConfig"], [18, 1, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[18, 4, 1, "", "as_dict"], [18, 4, 1, "", "dump"], [18, 4, 1, "", "load"]], "graphnet.utilities.config.configurable": [[18, 2, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[18, 4, 1, "", "__init__"], [18, 5, 1, "", "config"], [18, 4, 1, "", "from_config"], [18, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[18, 2, 1, "", "DatasetConfig"], [18, 1, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[18, 4, 1, "", "__init__"], [18, 3, 1, "", "features"], [18, 3, 1, "", "index_column"], [18, 3, 1, "", "loss_weight_column"], [18, 3, 1, "", "loss_weight_default_value"], [18, 3, 1, "", "loss_weight_table"], [18, 3, 1, "", "node_truth"], [18, 3, 1, "", "node_truth_table"], [18, 3, 1, "", "path"], [18, 3, 1, "", "pulsemaps"], [18, 3, 1, "", "seed"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "string_selection"], [18, 3, 1, "", "truth"], [18, 3, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[18, 2, 1, "", "ModelConfig"], [18, 1, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[18, 4, 1, "", "__init__"], [18, 4, 1, "", "_construct_model"], [18, 4, 1, "", "_is_model_config_entry"], [18, 4, 1, "", "_parse_if_model_config_entry"], [18, 4, 1, "", "_serialise"], [18, 3, 1, "", "arguments"], [18, 4, 1, "", "as_dict"], [18, 3, 1, "", "class_name"]], "graphnet.utilities.config.parsing": [[18, 1, 1, "", "get_all_grapnet_classes"], [18, 1, 1, "", "get_graphnet_classes"], [18, 1, 1, "", "is_graphnet_class"], [18, 1, 1, "", "is_graphnet_module"], [18, 1, 1, "", "list_all_submodules"], [18, 1, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[18, 2, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[18, 3, 1, "", "dataloader"], [18, 3, 1, "", "early_stopping_patience"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "target"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"about": [0, 21], "impact": [0, 21], "usag": [0, 21], "api": 1, "graphnet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "data": [2, 3, 4, 5, 6, 7], "extractor": [3, 4], "util": [4, 7, 16, 17, 18], "collect": 4, "frame": 4, "type": 4, "parquet": 5, "parquet_dataconvert": 5, "parquet_dataset": 5, "sqlite": 6, "sqlite_dataconvert": 6, "sqlite_dataset": 6, "sqlite_dataset_perturb": 6, "sqlite_select": 6, "sqlite_util": 6, "parquet_to_sqlit": 7, "random": 7, "string_selection_resolv": 7, "deploy": [8, 9], "i3modul": 9, "graphnet_modul": 9, "model": [10, 11, 12, 13, 14], "compon": 11, "layer": 11, "pool": 11, "detector": 12, "icecub": 12, "prometheu": 12, "gnn": 13, "convnet": 13, "dynedg": 13, "dynedge_jinst": 13, "task": 14, "classif": 14, "reconstruct": 14, "pisa": 15, "fit": 15, "plot": 15, "train": 16, "callback": 16, "label": 16, "loss_funct": 16, "weight_fit": 16, "config": 18, "base_config": 18, "configur": 18, "dataset_config": 18, "model_config": 18, "pars": 18, "training_config": 18, "src": 19, "contribut": 20, "github": 20, "issu": 20, "pull": 20, "request": 20, "convent": 20, "code": 20, "qualiti": 20, "instal": 22, "icetrai": 22, "stand": 22, "alon": 22, "run": 22, "docker": 22}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"], [21, "about"]], "Impact": [[0, "impact"], [21, "impact"]], "Usage": [[0, "usage"], [21, "usage"]], "API": [[1, "module-graphnet"]], "graphnet.data": [[2, "module-graphnet.data"]], "graphnet.data.extractors": [[3, "module-graphnet.data.extractors"]], "graphnet.data.extractors.utilities": [[4, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[4, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[4, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[4, "module-graphnet.data.extractors.utilities.types"]], "graphnet.data.parquet": [[5, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[5, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[5, "module-graphnet.data.parquet.parquet_dataset"]], "graphnet.data.sqlite": [[6, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[6, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[6, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[6, "module-graphnet.data.sqlite.sqlite_utilities"]], "graphnet.data.utilities": [[7, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[7, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[7, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver": [[7, "module-graphnet.data.utilities.string_selection_resolver"]], "graphnet.deployment": [[8, "module-graphnet.deployment"]], "graphnet.deployment.i3modules": [[9, "module-graphnet.deployment.i3modules"]], "graphnet.deployment.i3modules.graphnet_module": [[9, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[10, "module-graphnet.models"]], "graphnet.models.components": [[11, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[11, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[11, "module-graphnet.models.components.pool"]], "graphnet.models.detector": [[12, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[12, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[12, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus": [[12, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn": [[13, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[13, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[13, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[13, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[13, "module-graphnet.models.gnn.gnn"]], "graphnet.models.task": [[14, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[14, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[14, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[14, "module-graphnet.models.task.task"]], "graphnet.pisa": [[15, "module-graphnet.pisa"]], "graphnet.pisa.fitting": [[15, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[15, "module-graphnet.pisa.plotting"]], "graphnet.training": [[16, "module-graphnet.training"]], "graphnet.training.callbacks": [[16, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[16, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[16, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[16, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[16, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[17, "module-graphnet.utilities"]], "graphnet.utilities.config": [[18, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[18, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[18, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[18, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[18, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[18, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[18, "module-graphnet.utilities.config.training_config"]], "src": [[19, "src"]], "Contribute": [[20, "contribute"]], "GitHub issues": [[20, "github-issues"]], "Pull requests": [[20, "pull-requests"]], "Conventions": [[20, "conventions"]], "Code quality": [[20, "code-quality"]], "Install": [[22, "install"]], "Installing with IceTray": [[22, "installing-with-icetray"]], "Installing stand-alone": [[22, "installing-stand-alone"]], "Running in Docker": [[22, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.data"], [3, "module-graphnet.data.extractors"], [4, "module-graphnet.data.extractors.utilities"], [4, "module-graphnet.data.extractors.utilities.collections"], [4, "module-graphnet.data.extractors.utilities.frames"], [4, "module-graphnet.data.extractors.utilities.types"], [5, "module-graphnet.data.parquet"], [5, "module-graphnet.data.parquet.parquet_dataconverter"], [5, "module-graphnet.data.parquet.parquet_dataset"], [6, "module-graphnet.data.sqlite"], [6, "module-graphnet.data.sqlite.sqlite_dataconverter"], [6, "module-graphnet.data.sqlite.sqlite_dataset"], [6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"], [6, "module-graphnet.data.sqlite.sqlite_selection"], [6, "module-graphnet.data.sqlite.sqlite_utilities"], [7, "module-graphnet.data.utilities"], [7, "module-graphnet.data.utilities.parquet_to_sqlite"], [7, "module-graphnet.data.utilities.random"], [7, "module-graphnet.data.utilities.string_selection_resolver"], [8, "module-graphnet.deployment"], [9, "module-graphnet.deployment.i3modules"], [9, "module-graphnet.deployment.i3modules.graphnet_module"], [10, "module-graphnet.models"], [11, "module-graphnet.models.components"], [11, "module-graphnet.models.components.layers"], [11, "module-graphnet.models.components.pool"], [12, "module-graphnet.models.detector"], [12, "module-graphnet.models.detector.detector"], [12, "module-graphnet.models.detector.icecube"], [12, "module-graphnet.models.detector.prometheus"], [13, "module-graphnet.models.gnn"], [13, "module-graphnet.models.gnn.convnet"], [13, "module-graphnet.models.gnn.dynedge"], [13, "module-graphnet.models.gnn.dynedge_jinst"], [13, "module-graphnet.models.gnn.gnn"], [14, "module-graphnet.models.task"], [14, "module-graphnet.models.task.classification"], [14, "module-graphnet.models.task.reconstruction"], [14, "module-graphnet.models.task.task"], [15, "module-graphnet.pisa"], [15, "module-graphnet.pisa.fitting"], [15, "module-graphnet.pisa.plotting"], [16, "module-graphnet.training"], [16, "module-graphnet.training.callbacks"], [16, "module-graphnet.training.labels"], [16, "module-graphnet.training.loss_functions"], [16, "module-graphnet.training.utils"], [16, "module-graphnet.training.weight_fitting"], [17, "module-graphnet.utilities"], [18, "module-graphnet.utilities.config"], [18, "module-graphnet.utilities.config.base_config"], [18, "module-graphnet.utilities.config.configurable"], [18, "module-graphnet.utilities.config.dataset_config"], [18, "module-graphnet.utilities.config.model_config"], [18, "module-graphnet.utilities.config.parsing"], [18, "module-graphnet.utilities.config.training_config"]], "graphnet.data": [[2, "module-graphnet.data"]], "graphnet.data.extractors": [[3, "module-graphnet.data.extractors"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.get_member_variables"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[4, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities": [[4, "module-graphnet.data.extractors.utilities"]], "graphnet.data.extractors.utilities.collections": [[4, "module-graphnet.data.extractors.utilities.collections"]], "graphnet.data.extractors.utilities.frames": [[4, "module-graphnet.data.extractors.utilities.frames"]], "graphnet.data.extractors.utilities.types": [[4, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[4, "graphnet.data.extractors.utilities.types.is_type"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[4, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "parquetdataset (class in graphnet.data.parquet.parquet_dataset)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset"]], "_format_dictionary_result() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset._format_dictionary_result"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet": [[5, "module-graphnet.data.parquet"]], "graphnet.data.parquet.parquet_dataconverter": [[5, "module-graphnet.data.parquet.parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataset": [[5, "module-graphnet.data.parquet.parquet_dataset"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "query_table() (graphnet.data.parquet.parquet_dataset.parquetdataset method)": [[5, "graphnet.data.parquet.parquet_dataset.ParquetDataset.query_table"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[5, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "sqlitedataset (class in graphnet.data.sqlite.sqlite_dataset)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset"]], "sqlitedatasetperturbed (class in graphnet.data.sqlite.sqlite_dataset_perturbed)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "__getitem__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__getitem__"]], "__init__() (graphnet.data.sqlite.sqlite_dataset_perturbed.sqlitedatasetperturbed method)": [[6, "graphnet.data.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed.__init__"]], "_close_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._close_connection"]], "_establish_connection() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset._establish_connection"]], "_extract_everything() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_everything"]], "_extract_table_names() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._extract_table_names"]], "_merge_temporary_databases() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._merge_temporary_databases"]], "_submit_to_database() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter._submit_to_database"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "get_desired_event_numbers() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_desired_event_numbers"]], "get_equal_proportion_neutrino_indices() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_equal_proportion_neutrino_indices"]], "get_even_dbang_selection() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_dbang_selection"]], "get_even_signal_background_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_signal_background_indicies"]], "get_even_track_cascade_indicies() (in module graphnet.data.sqlite.sqlite_selection)": [[6, "graphnet.data.sqlite.sqlite_selection.get_even_track_cascade_indicies"]], "graphnet.data.sqlite": [[6, "module-graphnet.data.sqlite"]], "graphnet.data.sqlite.sqlite_dataconverter": [[6, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "graphnet.data.sqlite.sqlite_dataset": [[6, "module-graphnet.data.sqlite.sqlite_dataset"]], "graphnet.data.sqlite.sqlite_dataset_perturbed": [[6, "module-graphnet.data.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.sqlite.sqlite_selection": [[6, "module-graphnet.data.sqlite.sqlite_selection"]], "graphnet.data.sqlite.sqlite_utilities": [[6, "module-graphnet.data.sqlite.sqlite_utilities"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "query_table() (graphnet.data.sqlite.sqlite_dataset.sqlitedataset method)": [[6, "graphnet.data.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[6, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[6, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "__init__() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.__init__"]], "__init__() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.__init__"]], "_get_index_cache_path() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_index_cache_path"]], "_get_random_events_from_selection() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_random_events_from_selection"]], "_get_values_cache_path() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._get_values_cache_path"]], "_parse_variable_names() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver._parse_variable_names"]], "_save_config() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter._save_config"]], "graphnet.data.utilities": [[7, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[7, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[7, "module-graphnet.data.utilities.random"]], "graphnet.data.utilities.string_selection_resolver": [[7, "module-graphnet.data.utilities.string_selection_resolver"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[7, "graphnet.data.utilities.random.pairwise_shuffle"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[7, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[7, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.deployment": [[8, "module-graphnet.deployment"]], "configure() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.Configure"]], "dtypes (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.DTYPES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecube86 attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubedeepcore attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore.FEATURES"]], "features (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubeupgrade attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade.FEATURES"]], "graphnetmodulebase (class in graphnet.deployment.i3modules.graphnet_module)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase"]], "graphnetmoduleicecube86 (class in graphnet.deployment.i3modules.graphnet_module)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86"]], "graphnetmoduleicecubedeepcore (class in graphnet.deployment.i3modules.graphnet_module)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore"]], "graphnetmoduleicecubeupgrade (class in graphnet.deployment.i3modules.graphnet_module)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecube86 attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCube86.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubedeepcore attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeDeepCore.I3FEATUREEXTRACTOR_CLASS"]], "i3featureextractor_class (graphnet.deployment.i3modules.graphnet_module.graphnetmoduleicecubeupgrade attribute)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleIceCubeUpgrade.I3FEATUREEXTRACTOR_CLASS"]], "physics() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.Physics"]], "__init__() (graphnet.deployment.i3modules.graphnet_module.graphnetmodulebase method)": [[9, "graphnet.deployment.i3modules.graphnet_module.GraphNeTModuleBase.__init__"]], "graphnet.deployment.i3modules": [[9, "module-graphnet.deployment.i3modules"]], "graphnet.deployment.i3modules.graphnet_module": [[9, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[10, "module-graphnet.models"]], "dynedgeconv (class in graphnet.models.components.layers)": [[11, "graphnet.models.components.layers.DynEdgeConv"]], "__init__() (graphnet.models.components.layers.dynedgeconv method)": [[11, "graphnet.models.components.layers.DynEdgeConv.__init__"]], "_group_identical() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool._group_identical"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[11, "graphnet.models.components.layers.DynEdgeConv.forward"]], "graphnet.models.components": [[11, "module-graphnet.models.components"]], "graphnet.models.components.layers": [[11, "module-graphnet.models.components.layers"]], "graphnet.models.components.pool": [[11, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[11, "graphnet.models.components.pool.sum_pool_x"]], "detector (class in graphnet.models.detector.detector)": [[12, "graphnet.models.detector.detector.Detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "icecubeupgrade_v2 (class in graphnet.models.detector.icecube)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2"]], "prometheus (class in graphnet.models.detector.prometheus)": [[12, "graphnet.models.detector.prometheus.Prometheus"]], "__init__() (graphnet.models.detector.detector.detector method)": [[12, "graphnet.models.detector.detector.Detector.__init__"]], "_forward() (graphnet.models.detector.detector.detector method)": [[12, "graphnet.models.detector.detector.Detector._forward"]], "_forward() (graphnet.models.detector.icecube.icecube86 method)": [[12, "graphnet.models.detector.icecube.IceCube86._forward"]], "_forward() (graphnet.models.detector.icecube.icecubedeepcore method)": [[12, "graphnet.models.detector.icecube.IceCubeDeepCore._forward"]], "_forward() (graphnet.models.detector.icecube.icecubekaggle method)": [[12, "graphnet.models.detector.icecube.IceCubeKaggle._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade method)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade._forward"]], "_forward() (graphnet.models.detector.icecube.icecubeupgrade_v2 method)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2._forward"]], "_forward() (graphnet.models.detector.prometheus.prometheus method)": [[12, "graphnet.models.detector.prometheus.Prometheus._forward"]], "features (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.features"]], "features (graphnet.models.detector.icecube.icecube86 attribute)": [[12, "graphnet.models.detector.icecube.IceCube86.features"]], "features (graphnet.models.detector.icecube.icecubedeepcore attribute)": [[12, "graphnet.models.detector.icecube.IceCubeDeepCore.features"]], "features (graphnet.models.detector.icecube.icecubekaggle attribute)": [[12, "graphnet.models.detector.icecube.IceCubeKaggle.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade.features"]], "features (graphnet.models.detector.icecube.icecubeupgrade_v2 attribute)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.features"]], "features (graphnet.models.detector.prometheus.prometheus attribute)": [[12, "graphnet.models.detector.prometheus.Prometheus.features"]], "forward() (graphnet.models.detector.detector.detector method)": [[12, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector": [[12, "module-graphnet.models.detector"]], "graphnet.models.detector.detector": [[12, "module-graphnet.models.detector.detector"]], "graphnet.models.detector.icecube": [[12, "module-graphnet.models.detector.icecube"]], "graphnet.models.detector.prometheus": [[12, "module-graphnet.models.detector.prometheus"]], "nb_inputs (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.nb_inputs"]], "nb_outputs (graphnet.models.detector.detector.detector property)": [[12, "graphnet.models.detector.detector.Detector.nb_outputs"]], "nb_outputs (graphnet.models.detector.icecube.icecubeupgrade_v2 property)": [[12, "graphnet.models.detector.icecube.IceCubeUpgrade_V2.nb_outputs"]], "convnet (class in graphnet.models.gnn.convnet)": [[13, "graphnet.models.gnn.convnet.ConvNet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[13, "graphnet.models.gnn.dynedge.DynEdge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "gnn (class in graphnet.models.gnn.gnn)": [[13, "graphnet.models.gnn.gnn.GNN"]], "__init__() (graphnet.models.gnn.convnet.convnet method)": [[13, "graphnet.models.gnn.convnet.ConvNet.__init__"]], "__init__() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge.__init__"]], "__init__() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.__init__"]], "__init__() (graphnet.models.gnn.gnn.gnn method)": [[13, "graphnet.models.gnn.gnn.GNN.__init__"]], "_calculate_global_variables() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge._calculate_global_variables"]], "_construct_layers() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge._construct_layers"]], "_global_pooling() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge._global_pooling"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[13, "graphnet.models.gnn.convnet.ConvNet.forward"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[13, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[13, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[13, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn": [[13, "module-graphnet.models.gnn"]], "graphnet.models.gnn.convnet": [[13, "module-graphnet.models.gnn.convnet"]], "graphnet.models.gnn.dynedge": [[13, "module-graphnet.models.gnn.dynedge"]], "graphnet.models.gnn.dynedge_jinst": [[13, "module-graphnet.models.gnn.dynedge_jinst"]], "graphnet.models.gnn.gnn": [[13, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[13, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[13, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "identitytask (class in graphnet.models.task.task)": [[14, "graphnet.models.task.task.IdentityTask"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[14, "graphnet.models.task.classification.MulticlassClassificationTask"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.PositionReconstruction"]], "task (class in graphnet.models.task.task)": [[14, "graphnet.models.task.task.Task"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[14, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "__init__() (graphnet.models.task.task.identitytask method)": [[14, "graphnet.models.task.task.IdentityTask.__init__"]], "__init__() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.__init__"]], "_forward() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task._forward"]], "_validate_and_set_transforms() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task._validate_and_set_transforms"]], "compute_loss() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.compute_loss"]], "forward() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task": [[14, "module-graphnet.models.task"]], "graphnet.models.task.classification": [[14, "module-graphnet.models.task.classification"]], "graphnet.models.task.reconstruction": [[14, "module-graphnet.models.task.reconstruction"]], "graphnet.models.task.task": [[14, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[14, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[14, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[14, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[14, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[14, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[14, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[14, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[14, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[14, "graphnet.models.task.task.Task.train_eval"]], "contourfitter (class in graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.WeightFitter"]], "__init__() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.__init__"]], "__init__() (graphnet.pisa.fitting.weightfitter method)": [[15, "graphnet.pisa.fitting.WeightFitter.__init__"]], "_check_inputs() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter._check_inputs"]], "_fit_contours() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter._fit_contours"]], "_parallel_fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter._parallel_fit_1d_contour"]], "_parallel_fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter._parallel_fit_2d_contour"]], "config_updater() (in module graphnet.pisa.fitting)": [[15, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[15, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[15, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa": [[15, "module-graphnet.pisa"]], "graphnet.pisa.fitting": [[15, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[15, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[15, "graphnet.pisa.plotting.read_entry"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.BjoernLow"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.CrossEntropyLoss"]], "direction (class in graphnet.training.labels)": [[16, "graphnet.training.labels.Direction"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "label (class in graphnet.training.labels)": [[16, "graphnet.training.labels.Label"]], "logcmk (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.MSELoss"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[16, "graphnet.training.callbacks.ProgressBar"]], "rmseloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.RMSELoss"]], "uniform (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.Uniform"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "weightfitter (class in graphnet.training.weight_fitting)": [[16, "graphnet.training.weight_fitting.WeightFitter"]], "__call__() (graphnet.training.labels.direction method)": [[16, "graphnet.training.labels.Direction.__call__"]], "__call__() (graphnet.training.labels.label method)": [[16, "graphnet.training.labels.Label.__call__"]], "__init__() (graphnet.training.callbacks.piecewiselinearlr method)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR.__init__"]], "__init__() (graphnet.training.labels.direction method)": [[16, "graphnet.training.labels.Direction.__init__"]], "__init__() (graphnet.training.labels.label method)": [[16, "graphnet.training.labels.Label.__init__"]], "__init__() (graphnet.training.loss_functions.crossentropyloss method)": [[16, "graphnet.training.loss_functions.CrossEntropyLoss.__init__"]], "__init__() (graphnet.training.loss_functions.lossfunction method)": [[16, "graphnet.training.loss_functions.LossFunction.__init__"]], "__init__() (graphnet.training.weight_fitting.weightfitter method)": [[16, "graphnet.training.weight_fitting.WeightFitter.__init__"]], "_evaluate() (graphnet.training.loss_functions.vonmisesfisherloss method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss._evaluate"]], "_fit_weights() (graphnet.training.weight_fitting.bjoernlow method)": [[16, "graphnet.training.weight_fitting.BjoernLow._fit_weights"]], "_fit_weights() (graphnet.training.weight_fitting.uniform method)": [[16, "graphnet.training.weight_fitting.Uniform._fit_weights"]], "_forward() (graphnet.training.loss_functions.crossentropyloss method)": [[16, "graphnet.training.loss_functions.CrossEntropyLoss._forward"]], "_forward() (graphnet.training.loss_functions.euclideandistanceloss method)": [[16, "graphnet.training.loss_functions.EuclideanDistanceLoss._forward"]], "_forward() (graphnet.training.loss_functions.logcoshloss method)": [[16, "graphnet.training.loss_functions.LogCoshLoss._forward"]], "_forward() (graphnet.training.loss_functions.lossfunction method)": [[16, "graphnet.training.loss_functions.LossFunction._forward"]], "_forward() (graphnet.training.loss_functions.mseloss method)": [[16, "graphnet.training.loss_functions.MSELoss._forward"]], "_forward() (graphnet.training.loss_functions.rmseloss method)": [[16, "graphnet.training.loss_functions.RMSELoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher2dloss method)": [[16, "graphnet.training.loss_functions.VonMisesFisher2DLoss._forward"]], "_forward() (graphnet.training.loss_functions.vonmisesfisher3dloss method)": [[16, "graphnet.training.loss_functions.VonMisesFisher3DLoss._forward"]], "_get_truth() (graphnet.training.weight_fitting.weightfitter method)": [[16, "graphnet.training.weight_fitting.WeightFitter._get_truth"]], "_log_cosh() (graphnet.training.loss_functions.logcoshloss class method)": [[16, "graphnet.training.loss_functions.LogCoshLoss._log_cosh"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[16, "graphnet.training.loss_functions.LogCMK.backward"]], "collate_fn() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.collate_fn"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[16, "graphnet.training.weight_fitting.WeightFitter.fit"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[16, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[16, "graphnet.training.loss_functions.LossFunction.forward"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[16, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "get_predictions() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.get_predictions"]], "graphnet.training": [[16, "module-graphnet.training"]], "graphnet.training.callbacks": [[16, "module-graphnet.training.callbacks"]], "graphnet.training.labels": [[16, "module-graphnet.training.labels"]], "graphnet.training.loss_functions": [[16, "module-graphnet.training.loss_functions"]], "graphnet.training.utils": [[16, "module-graphnet.training.utils"]], "graphnet.training.weight_fitting": [[16, "module-graphnet.training.weight_fitting"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[16, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "make_dataloader() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.make_train_validation_dataloader"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[16, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "save_results() (in module graphnet.training.utils)": [[16, "graphnet.training.utils.save_results"]], "graphnet.utilities": [[17, "module-graphnet.utilities"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[18, "graphnet.utilities.config.base_config.BaseConfig"]], "configurable (class in graphnet.utilities.config.configurable)": [[18, "graphnet.utilities.config.configurable.Configurable"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[18, "graphnet.utilities.config.model_config.ModelConfig"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[18, "graphnet.utilities.config.training_config.TrainingConfig"]], "__init__() (graphnet.utilities.config.configurable.configurable method)": [[18, "graphnet.utilities.config.configurable.Configurable.__init__"]], "__init__() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.__init__"]], "__init__() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig.__init__"]], "_construct_model() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig._construct_model"]], "_is_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig._is_model_config_entry"]], "_parse_if_model_config_entry() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig._parse_if_model_config_entry"]], "_serialise() (graphnet.utilities.config.model_config.modelconfig class method)": [[18, "graphnet.utilities.config.model_config.ModelConfig._serialise"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[18, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[18, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[18, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "config (graphnet.utilities.config.configurable.configurable property)": [[18, "graphnet.utilities.config.configurable.Configurable.config"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[18, "graphnet.utilities.config.configurable.Configurable.from_config"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[18, "graphnet.utilities.config.base_config.get_all_argument_values"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config": [[18, "module-graphnet.utilities.config"]], "graphnet.utilities.config.base_config": [[18, "module-graphnet.utilities.config.base_config"]], "graphnet.utilities.config.configurable": [[18, "module-graphnet.utilities.config.configurable"]], "graphnet.utilities.config.dataset_config": [[18, "module-graphnet.utilities.config.dataset_config"]], "graphnet.utilities.config.model_config": [[18, "module-graphnet.utilities.config.model_config"]], "graphnet.utilities.config.parsing": [[18, "module-graphnet.utilities.config.parsing"]], "graphnet.utilities.config.training_config": [[18, "module-graphnet.utilities.config.training_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.list_all_submodules"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[18, "graphnet.utilities.config.base_config.BaseConfig.load"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[18, "graphnet.utilities.config.configurable.Configurable.save_config"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[18, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[18, "graphnet.utilities.config.model_config.save_model_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[18, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[18, "graphnet.utilities.config.parsing.traverse_and_apply"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[18, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]]}})